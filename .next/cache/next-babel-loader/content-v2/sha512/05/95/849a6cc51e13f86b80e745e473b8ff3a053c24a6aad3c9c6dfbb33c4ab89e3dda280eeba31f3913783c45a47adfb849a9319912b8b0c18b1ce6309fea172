{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Group, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nexport function MakePlane(_x, _x2) {\n  return _MakePlane.apply(this, arguments);\n}\n_c2 = MakePlane;\n\nfunction _MakePlane() {\n  _MakePlane = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SceneToGet, settings) {\n    var plane, blades, group;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return addGLBFile(\"/Airplane/index.glb\", SceneToGet);\n\n          case 3:\n            plane = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 10:\n            group = new Group();\n            group.add(plane.scene);\n            group.add(blades.scene);\n            plane.scene.scale.set(0.05, 0.05, 0.05);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return _MakePlane.apply(this, arguments);\n}\n\n_c = MakePlane;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MakePlane\");\n$RefreshReg$(_c2, \"MakePlane\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","Vector3","addGLBFile","MakePlane","SceneToGet","settings","plane","console","log","group","add","scene","blades","scale","set"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0CAA3B;AAGA,gBAAsBC,SAAtB;AAAA;AAAA;MAAsBA,S;;;wEAAf,iBAAyBC,UAAzB,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIeH,UAAU,CAAC,qBAAD,EAAyBE,UAAzB,CAJzB;;AAAA;AAICE,YAAAA,KAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMCC,YAAAA,OAAO,CAACC,GAAR;AAND,6CAOQ,KAPR;;AAAA;AASCC,YAAAA,KATD,GASS,IAAIT,KAAJ,EATT;AAUHS,YAAAA,KAAK,CAACC,GAAN,CAAUJ,KAAK,CAACK,KAAhB;AACAF,YAAAA,KAAK,CAACC,GAAN,CAAUE,MAAM,CAACD,KAAjB;AACAL,YAAAA,KAAK,CAACK,KAAN,CAAYE,KAAZ,CAAkBC,GAAlB,CAAsB,IAAtB,EAA2B,IAA3B,EAAgC,IAAhC;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeX,S","sourcesContent":["import { Group, Vector3 } from \"three\"\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\"\n\n\nexport async function MakePlane(SceneToGet, settings){\n    let plane\n    let blades\n    try{\n        plane = await addGLBFile(\"/Airplane/index.glb\",  SceneToGet)\n    }catch(e){\n        console.log(e)\n        return false\n    }\n    let group = new Group()\n    group.add(plane.scene)\n    group.add(blades.scene)\n    plane.scene.scale.set(0.05,0.05,0.05)\n}"]},"metadata":{},"sourceType":"module"}