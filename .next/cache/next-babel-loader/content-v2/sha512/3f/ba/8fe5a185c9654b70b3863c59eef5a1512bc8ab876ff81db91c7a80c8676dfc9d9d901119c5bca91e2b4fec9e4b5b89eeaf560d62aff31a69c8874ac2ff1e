{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/cube.js\",\n    _s = $RefreshSig$();\n\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  _s();\n\n  var _useState = useState(undefined),\n      child = _useState[0],\n      setChild = _useState[1];\n\n  useEffect(function () {\n    if (child === undefined) return;\n    var scene = new Scene();\n    var camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(renderer.domElement);\n    var geometry = new BoxGeometry();\n    var material = new MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    var animate = function animate() {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: function ref(_ref) {\n        return setChild(_ref);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(render, \"W4TgAUe69BEJp+AHeH1j9n7pn8I=\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/cube.js"],"names":["useEffect","useState","BoxGeometry","Mesh","MeshBasicMaterial","PerspectiveCamera","Scene","WebGLRenderer","render","undefined","child","setChild","scene","camera","window","innerWidth","innerHeight","renderer","setSize","appendChild","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","ref"],"mappings":";;;;;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,KAAlE,EAAyEC,aAAzE,QAA8F,OAA9F;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACHP,QAAQ,CAACQ,SAAD,CADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAG7BX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,KAAK,KAAKD,SAAd,EAAyB;AAEzB,QAAMG,KAAK,GAAG,IAAIN,KAAJ,EAAd;AACA,QAAMO,MAAM,GAAG,IAAIR,iBAAJ,CAAuB,EAAvB,EAA2BS,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAAtD,EAAmE,GAAnE,EAAwE,IAAxE,CAAf;AAEA,QAAMC,QAAQ,GAAG,IAAIV,aAAJ,EAAjB;AACAU,IAAAA,QAAQ,CAACC,OAAT,CAAkBJ,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAN,IAAAA,KAAK,CAACS,WAAN,CAAmBF,QAAQ,CAACG,UAA5B;AAEA,QAAMC,QAAQ,GAAG,IAAInB,WAAJ,EAAjB;AACA,QAAMoB,QAAQ,GAAG,IAAIlB,iBAAJ,CAAuB;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAAvB,CAAjB;AACA,QAAMC,IAAI,GAAG,IAAIrB,IAAJ,CAAUkB,QAAV,EAAoBC,QAApB,CAAb;AACAV,IAAAA,KAAK,CAACa,GAAN,CAAWD,IAAX;AAEAX,IAAAA,MAAM,CAACa,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AAEAJ,MAAAA,IAAI,CAACM,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAP,MAAAA,IAAI,CAACM,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AAEAf,MAAAA,QAAQ,CAACT,MAAT,CAAiBI,KAAjB,EAAwBC,MAAxB;AACH,KAPD;;AASAe,IAAAA,OAAO;AACV,GA3BQ,EA2BN,CAAClB,KAAD,CA3BM,CAAT;AA6BA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAE,aAAAuB,IAAG;AAAA,eAAKtB,QAAQ,CAACsB,IAAD,CAAb;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GArCuBzB,M","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n\n    useEffect(() => {\n        if (child === undefined) return;\n\n        const scene = new Scene();\n        const camera = new PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\n        const renderer = new WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        child.appendChild( renderer.domElement );\n\n        const geometry = new BoxGeometry();\n        const material = new MeshBasicMaterial( { color: 0x00ff00 } );\n        const cube = new Mesh( geometry, material );\n        scene.add( cube );\n\n        camera.position.z = 5;\n\n        const animate = function () {\n            requestAnimationFrame( animate );\n\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }, [child])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}