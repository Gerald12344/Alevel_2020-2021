{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState, useContext } from \"react\";\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { DoubleSide, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from \"three\";\nimport { GenerateClouds } from '../components/gameFundalmentals/clouds';\nimport { CreateDayNightCycle } from \"../components/gameFundalmentals/DayNightCycle\";\n\nvar Stats = require('stats.js');\n\nimport { useAppContext } from '../components/Context/contextHandler';\nimport { GenerateLabel } from '../components/gameFundalmentals/nametag';\nimport { GenerateTerrain } from \"../components/gameFundalmentals/ProceduleTerrain\";\nCameraControls.install({\n  THREE: THREE\n});\nexport default function render() {\n  var _ref;\n\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  const {\n    0: gameEventData,\n    1: setGameEventData\n  } = useState([]);\n  const {\n    0: newTheta,\n    1: setTheat\n  } = useState(0);\n  const {\n    0: day,\n    1: setDay\n  } = useState(\"not day\");\n  const {\n    0: child2,\n    1: setChild2\n  } = useState(undefined);\n  const {\n    0: pos,\n    1: setPos\n  } = useState(undefined);\n  const {\n    0: rot,\n    1: setRot\n  } = useState(undefined);\n  const socket = useAppContext();\n  const {\n    0: recievedSeed,\n    1: setSeed\n  } = useState(undefined);\n  const {\n    0: rendered,\n    1: setRendered\n  } = useState(false);\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: personData,\n    1: setPersonalData\n  } = useState(undefined);\n  const {\n    0: latestPerson,\n    1: setLatestestPerson\n  } = useState([]);\n  socket.once(\"welcome\", (seed, client, data) => {\n    setSeed(seed);\n    console.log(client);\n    setClients(client);\n    setPersonalData(data);\n  });\n  useEffect(() => {\n    if (child === undefined || recievedSeed === undefined || rendered === true) return;\n    setRendered(true);\n    let stats = new Stats();\n    stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n\n    document.body.appendChild(stats.dom);\n    let SceneToGet = new Scene();\n    let Renders = new WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    Renders.setClearColor(0x87ceeb, 1);\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    GenerateTerrain(recievedSeed, SceneToGet);\n    const planeGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);\n    planeGeometry.rotateX(Math.PI / 2);\n    const planeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x567d46,\n      side: DoubleSide\n    });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -0.5;\n    SceneToGet.add(plane);\n    let daynight = new CreateDayNightCycle(SceneToGet, Renders);\n    let clouds = [];\n\n    for (let i = 0; i < 40; i++) {\n      clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n    }\n\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    /*const cameraControls = new CameraControls(Camera, Renders.domElement);\n    cameraControls.azimuthRotateSpeed = -0.3; // negative value to invert rotation direction\n    cameraControls.polarRotateSpeed = -0.3; // negative value to invert rotation direction\n    cameraControls.truckSpeed = 1 / 1e-5 * 3;\n    cameraControls.distance = 5\n    //cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n    cameraControls.saveState();*/\n    //Camera.position.z = 5;\n\n    Renders.domElement.requestPointerLock();\n    const gridHelper = new THREE.GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n    let players = [];\n\n    function MakeCube(color = \"rgb(0,0,0)\", name = \"unkown\") {\n      const group = new THREE.Group();\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\n      const material = new THREE.MeshLambertMaterial({\n        color: new THREE.Color(color),\n        emissive: new THREE.Color(color)\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      group.add(cube);\n      const cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n      const material2 = new THREE.MeshLambertMaterial({\n        color: 0x000000\n      });\n      const cylinderBuild = new THREE.Mesh(cyclinder, material2);\n      cylinderBuild.rotateX(Math.PI / 2 + Math.PI);\n      cylinderBuild.position.set(0, 0, -0.6);\n      group.add(cylinderBuild);\n      GenerateLabel(name, group);\n      SceneToGet.add(group);\n      group.name = name;\n      return group;\n    }\n\n    console.log(clients);\n    let prevData = [];\n\n    let addtoGameFeed = (name = \"Unkown\", event) => {\n      let NewGameEventArray = [...prevData];\n      console.log(NewGameEventArray);\n      NewGameEventArray.unshift({\n        name: name,\n        event: event\n      });\n      delete NewGameEventArray[10];\n      delete NewGameEventArray[11];\n      setGameEventData([...NewGameEventArray]);\n      console.log(\"array below\");\n      console.log(prevData);\n      prevData = NewGameEventArray;\n    };\n\n    clients.forEach(e => {\n      console.log(\"Adding PLayer \" + e);\n      let cube = MakeCube(e.color, e.name);\n      players[e] = cube;\n    });\n    socket.on('NewPlayer', (id, data) => {\n      console.log(data);\n      console.log(\"New PLyer \" + id);\n      let cube = MakeCube(data.color, data.name);\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, \"Joined the game!\");\n      players[id] = cube;\n    });\n    socket.on('LostPLayer', (id, how, data) => {\n      console.log(\"lost PLyer \" + id);\n      let cube = players[id];\n      SceneToGet.remove(cube);\n      delete players[id];\n      console.log(data);\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, how === true ? \"Was removed from the game for being inactive\" : \"Left the game!\");\n    });\n    socket.on('PlayerLocationUpdate', (id, pos, rot, data) => {\n      let cube = players[id];\n\n      if (cube) {\n        cube.rotation.set(rot._x, rot._y, rot._z);\n        cube.position.set(pos.x, pos.y, pos.z);\n      } else {\n        let cube = MakeCube(data === null || data === void 0 ? void 0 : data.color, data === null || data === void 0 ? void 0 : data.name);\n        players[id] = cube;\n      }\n    });\n    socket.on(\"NewChat\", (data, text) => {\n      addtoGameFeed(data.name, text);\n    });\n    setInterval(() => {\n      socket.emit('LocationUpdate', Camera.position, Camera.rotation);\n    }, 10);\n\n    var animate = function () {\n      stats.begin();\n      requestAnimationFrame(animate);\n      daynight.update();\n      clouds.forEach((e, i) => {\n        e.update();\n      });\n\n      if (w) {\n        var direction = new THREE.Vector3();\n        Camera.getWorldDirection(direction);\n        Camera.position.add(direction.multiplyScalar(shift == 1 ? 1 : 0.25)); //Camera.position.z -= 0.1\n      }\n\n      if (s) {\n        var direction = new THREE.Vector3();\n        Camera.getWorldDirection(direction);\n        Camera.position.add(direction.multiplyScalar(-(shift == 1 ? 1 : 0.25)));\n      }\n\n      if (a) {\n        Camera.rotateY(0.04 * shift);\n      }\n\n      if (d) {\n        Camera.rotateY(-0.04 * shift);\n      }\n\n      if (up) {\n        Camera.rotateX(0.04 * shift);\n      }\n\n      if (down) {\n        Camera.rotateX(-0.04 * shift);\n      }\n\n      if (q) {\n        Camera.rotateZ(0.02 * shift);\n      }\n\n      if (e) {\n        Camera.rotateZ(-0.02 * shift);\n      }\n\n      Renders.render(SceneToGet, Camera);\n      stats.end();\n    };\n\n    function listChildren(children) {\n      let child;\n\n      for (let i = 0; i < children.length; i++) {\n        child = children[i]; // Calls this function again if the child has children\n\n        if (child.children) {\n          listChildren(child.children);\n        } // Logs if this child last in recursion\n        else {\n            console.log('Reached bottom with: ', child);\n          }\n      }\n    }\n\n    listChildren(SceneToGet.children);\n    animate();\n  }, [child, clients]);\n\n  let sendChat = e => {\n    e.preventDefault();\n    socket.emit(\"sendChat\", child2.value);\n    child2.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: \"fixed\",\n        marginTop: \"40px\",\n        color: \"white\"\n      },\n      children: personData === undefined ? \"LOADING...\" : personData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"fixed\",\n        marginTop: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => setChild2(ref)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), [...gameEventData].map(e => {\n        if (e == undefined) return;\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"white\"\n          },\n          children: [e.name, \" - \", e.event]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), (_ref = recievedSeed === undefined) !== null && _ref !== void 0 ? _ref : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING SEED!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","useContext","THREE","CameraControls","DoubleSide","PerspectiveCamera","Scene","Vector3","WebGLRenderer","GenerateClouds","CreateDayNightCycle","Stats","require","useAppContext","GenerateLabel","GenerateTerrain","install","render","child","setChild","undefined","gameEventData","setGameEventData","newTheta","setTheat","day","setDay","child2","setChild2","pos","setPos","rot","setRot","socket","recievedSeed","setSeed","rendered","setRendered","clients","setClients","personData","setPersonalData","latestPerson","setLatestestPerson","once","seed","client","data","console","log","stats","showPanel","document","body","appendChild","dom","SceneToGet","Renders","antialias","alpha","setClearColor","setSize","window","innerWidth","innerHeight","domElement","planeGeometry","PlaneGeometry","rotateX","Math","PI","planeMaterial","MeshStandardMaterial","color","side","plane","Mesh","position","y","add","daynight","clouds","i","push","random","Camera","requestPointerLock","gridHelper","GridHelper","players","MakeCube","name","group","Group","geometry","BoxGeometry","material","MeshLambertMaterial","Color","emissive","cube","cyclinder","CylinderGeometry","material2","cylinderBuild","set","prevData","addtoGameFeed","event","NewGameEventArray","unshift","forEach","e","on","id","how","remove","rotation","_x","_y","_z","x","z","text","setInterval","emit","animate","begin","requestAnimationFrame","update","w","direction","getWorldDirection","multiplyScalar","shift","s","a","rotateY","d","up","down","q","rotateZ","end","listChildren","children","length","sendChat","preventDefault","value","marginTop","width","height","ref","map"],"mappings":"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","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState, useContext } from \"react\"\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { DoubleSide, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from \"three\"\nimport { GenerateClouds } from '../components/gameFundalmentals/clouds'\nimport { CreateDayNightCycle } from \"../components/gameFundalmentals/DayNightCycle\";\nvar Stats = require('stats.js')\nimport { useAppContext } from '../components/Context/contextHandler'\nimport { GenerateLabel } from '../components/gameFundalmentals/nametag'\nimport { GenerateTerrain } from \"../components/gameFundalmentals/ProceduleTerrain\";\nCameraControls.install({ THREE: THREE });\n\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    const [gameEventData, setGameEventData] = useState([])\n\n    const [newTheta, setTheat] = useState(0)\n    const [day, setDay] = useState(\"not day\")\n    const [child2, setChild2] = useState(undefined)\n    const [pos, setPos] = useState(undefined)\n    const [rot, setRot] = useState(undefined)\n    const socket = useAppContext()\n    const [recievedSeed, setSeed] = useState(undefined)\n    const [rendered, setRendered] = useState(false)\n    const [clients, setClients] = useState([])\n    const [personData, setPersonalData] = useState(undefined)\n    const [latestPerson, setLatestestPerson] = useState([])\n\n    socket.once(\"welcome\", (seed, client, data) => {\n        setSeed(seed)\n        console.log(client)\n        setClients(client)\n        setPersonalData(data)\n    });\n\n    useEffect(() => {\n        if (child === undefined || recievedSeed === undefined || rendered === true) return;\n        setRendered(true)\n\n        let stats = new Stats();\n        stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n        document.body.appendChild(stats.dom);\n\n        let SceneToGet = new Scene()\n        let Renders = new WebGLRenderer({\n            antialias: true,\n            alpha: true\n        })\n\n        Renders.setClearColor(0x87ceeb, 1);\n\n\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n\n        GenerateTerrain(recievedSeed, SceneToGet)\n\n\n\n\n        const planeGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);\n        planeGeometry.rotateX(Math.PI / 2)\n        const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x567d46, side: DoubleSide })\n        const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n        plane.position.y = -0.5\n        SceneToGet.add(plane);\n\n        let daynight = new CreateDayNightCycle(SceneToGet, Renders)\n\n\n        let clouds = []\n        for (let i = 0; i < 40; i++) {\n            clouds.push(new GenerateClouds(new Vector3((Math.random() * 300) - 300, 80 + Math.random() * 20, (Math.random() * 600) - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1))\n        }\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        /*const cameraControls = new CameraControls(Camera, Renders.domElement);\n        cameraControls.azimuthRotateSpeed = -0.3; // negative value to invert rotation direction\n        cameraControls.polarRotateSpeed = -0.3; // negative value to invert rotation direction\n        cameraControls.truckSpeed = 1 / 1e-5 * 3;\n        cameraControls.distance = 5\n        //cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n        cameraControls.saveState();*/\n        //Camera.position.z = 5;\n\n    \n\n\n\n        Renders.domElement.requestPointerLock()\n\n        const gridHelper = new THREE.GridHelper(50, 50);\n        gridHelper.position.y = -1;\n        SceneToGet.add(gridHelper);\n        let players = []\n\n        function MakeCube(color = \"rgb(0,0,0)\", name = \"unkown\") {\n            const group = new THREE.Group();\n            const geometry = new THREE.BoxGeometry(1, 1, 1);\n            const material = new THREE.MeshLambertMaterial({ color: new THREE.Color(color), emissive: new THREE.Color(color) });\n            const cube = new THREE.Mesh(geometry, material);\n            group.add(cube)\n            const cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n            const material2 = new THREE.MeshLambertMaterial({ color: 0x000000 });\n            const cylinderBuild = new THREE.Mesh(cyclinder, material2);\n            cylinderBuild.rotateX((Math.PI / 2) + Math.PI)\n            cylinderBuild.position.set(0, 0, -0.6)\n            group.add(cylinderBuild)\n\n            GenerateLabel(name, group)\n            SceneToGet.add(group)\n            group.name = name\n            return group\n        }\n\n        console.log(clients)\n        let prevData = []\n\n        let addtoGameFeed = (name = \"Unkown\", event) => {\n            let NewGameEventArray = [...prevData]\n            console.log(NewGameEventArray)\n            NewGameEventArray.unshift({ name: name, event: event })\n            delete NewGameEventArray[10]\n            delete NewGameEventArray[11]\n            setGameEventData([...NewGameEventArray])\n            console.log(\"array below\")\n            console.log(prevData)\n            prevData = NewGameEventArray\n        }\n\n        clients.forEach(e => {\n            console.log(\"Adding PLayer \" + e)\n            let cube = MakeCube(e.color, e.name)\n            players[e] = cube\n        })\n\n        socket.on('NewPlayer', (id, data) => {\n            console.log(data)\n            console.log(\"New PLyer \" + id)\n            let cube = MakeCube(data.color, data.name)\n            addtoGameFeed(data?.name, \"Joined the game!\")\n\n            players[id] = cube\n        })\n\n        socket.on('LostPLayer', (id, how, data) => {\n            console.log(\"lost PLyer \" + id)\n            let cube = players[id]\n            SceneToGet.remove(cube)\n            delete players[id]\n            console.log(data)\n            addtoGameFeed(data?.name, how === true ? \"Was removed from the game for being inactive\" : \"Left the game!\")\n        })\n\n        socket.on('PlayerLocationUpdate', (id, pos, rot, data) => {\n            let cube = players[id]\n            if (cube) {\n                cube.rotation.set(rot._x, rot._y, rot._z)\n                cube.position.set(pos.x, pos.y, pos.z)\n            }\n            else {\n                let cube = MakeCube(data?.color, data?.name)\n\n                players[id] = cube\n\n            }\n\n        })\n        socket.on(\"NewChat\", (data, text) => {\n            addtoGameFeed(data.name, text)\n        })\n        setInterval(() => {\n            socket.emit('LocationUpdate', Camera.position, Camera.rotation)\n        }, 10)\n\n\n        var animate = function() {\n            stats.begin()\n            requestAnimationFrame(animate)\n\n            daynight.update()\n\n\n            clouds.forEach((e, i) => {\n                e.update()\n            })\n\n            if (w) {\n                var direction = new THREE.Vector3();\n                Camera.getWorldDirection(direction);\n                Camera.position.add(direction.multiplyScalar(shift == 1 ? 1 : 0.25));\n                //Camera.position.z -= 0.1\n            }\n            if (s) {\n                var direction = new THREE.Vector3();\n                Camera.getWorldDirection(direction);\n                Camera.position.add(direction.multiplyScalar(-(shift == 1 ? 1 : 0.25)));\n            }\n            if (a) {\n                Camera.rotateY(0.04 * shift)\n            }\n            if (d) {\n                Camera.rotateY(-0.04 * shift)\n            }\n            if (up) {\n                Camera.rotateX(0.04 * shift)\n            }\n            if (down) {\n                Camera.rotateX(-0.04 * shift)\n            }\n            if (q) {\n                Camera.rotateZ(0.02 * shift)\n            }\n            if (e) {\n                Camera.rotateZ(-0.02 * shift)\n            }\n\n\n\n            Renders.render(SceneToGet, Camera);\n            stats.end()\n        };\n\n        function listChildren(children) {\n            let child;\n            for (let i = 0; i < children.length; i++) {\n                child = children[i];\n\n                // Calls this function again if the child has children\n                if (child.children) {\n                    listChildren(child.children);\n                }\n                // Logs if this child last in recursion\n                else {\n                    console.log('Reached bottom with: ', child);\n                }\n            }\n        }\n\n        listChildren(SceneToGet.children);\n        animate();\n    }, [child, clients])\n    \n    let sendChat = (e) => {\n        e.preventDefault()\n        socket.emit(\"sendChat\", child2.value)\n        child2.value = \"\"\n    }\n\n    return (\n        <main >\n            <h1 style={{position:\"fixed\", marginTop:\"40px\", color:\"white\"}}>{personData === undefined ? \"LOADING...\" : personData.name}</h1>\n            <div style={{width:\"100vw\", height:\"100vh\", position:\"fixed\", marginTop:\"80px\"}}>\n                <form  onSubmit={sendChat}>\n                    <input ref={ref => (setChild2(ref))}></input>\n                    <input type=\"Submit\"></input>\n                </form>\n                {[...gameEventData].map((e) => {\n                if(e == undefined) return;\n                return(\n                    <h4 style={{color:\"white\"}}>{e.name} - {e.event}</h4>\n                )}) }\n                \n            </div>\n            { recievedSeed === undefined ?? <h1>LOADING SEED!</h1>}\n            <div ref = { ref => (setChild(ref)) }></div>  \n        </main>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}