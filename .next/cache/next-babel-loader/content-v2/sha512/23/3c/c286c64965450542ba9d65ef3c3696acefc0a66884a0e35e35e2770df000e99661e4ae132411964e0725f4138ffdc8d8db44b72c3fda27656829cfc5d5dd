{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GLTFLoader } from \"./glbCore\";\nexport function addGLBFile(_x, _x2) {\n  return _addGLBFile.apply(this, arguments);\n}\n\nfunction _addGLBFile() {\n  _addGLBFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item, scene) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var loader = new GLTFLoader();\n              loader.load( // resource URL\n              item, // called when the resource is loaded\n              function (gltf) {\n                gltf.animations;\n                gltf.scene;\n                gltf.scenes;\n                gltf.cameras;\n                gltf.asset;\n                resolve(gltf);\n              }, // called while loading is progressing\n              function (xhr) {\n                console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n              }, // called when loading has errors\n              function (error) {\n                console.log(\"An error happened\");\n                reject(error);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _addGLBFile.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}