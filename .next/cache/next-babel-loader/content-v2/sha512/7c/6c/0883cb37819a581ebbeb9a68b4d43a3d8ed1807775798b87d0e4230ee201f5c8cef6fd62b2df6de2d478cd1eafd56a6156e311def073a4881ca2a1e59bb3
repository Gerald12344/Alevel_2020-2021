{"ast":null,"code":"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nexport function AddGLTF(item, scene) {\n  const loader = new GLTFLoader();\n  loader.load( // resource URL\n  item, // called when the resource is loaded\n  function (gltf) {\n    scene.add(gltf.scene);\n    gltf.animations;\n    gltf.scene;\n    gltf.scenes;\n    gltf.cameras;\n    gltf.asset;\n  }, // called while loading is progressing\n  function (xhr) {\n    console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n  }, // called when loading has errors\n  function (error) {\n    console.log(\"An error happened\");\n  });\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Core-API/glbLoader.js"],"names":["GLTFLoader","AddGLTF","item","scene","loader","load","gltf","add","animations","scenes","cameras","asset","xhr","console","log","loaded","total","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uCAA3B;AAGA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AACjC,QAAMC,MAAM,GAAG,IAAIJ,UAAJ,EAAf;AACAI,EAAAA,MAAM,CAACC,IAAP,EACI;AACAH,EAAAA,IAFJ,EAGI;AACA,YAAUI,IAAV,EAAgB;AACZH,IAAAA,KAAK,CAACI,GAAN,CAAUD,IAAI,CAACH,KAAf;AAEAG,IAAAA,IAAI,CAACE,UAAL;AACAF,IAAAA,IAAI,CAACH,KAAL;AACAG,IAAAA,IAAI,CAACG,MAAL;AACAH,IAAAA,IAAI,CAACI,OAAL;AACAJ,IAAAA,IAAI,CAACK,KAAL;AACH,GAZL,EAaI;AACA,YAAUC,GAAV,EAAe;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAaF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAlB,GAA2B,GAA3B,GAAiC,UAA7C;AACH,GAhBL,EAiBI;AACA,YAAUC,KAAV,EAAiB;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GApBL;AAsBH","sourcesContent":["import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\n\nexport function AddGLTF(item, scene) {\n    const loader = new GLTFLoader();\n    loader.load(\n        // resource URL\n        item,\n        // called when the resource is loaded\n        function (gltf) {\n            scene.add(gltf.scene);\n\n            gltf.animations;\n            gltf.scene;\n            gltf.scenes;\n            gltf.cameras;\n            gltf.asset;\n        },\n        // called while loading is progressing\n        function (xhr) {\n            console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n        },\n        // called when loading has errors\n        function (error) {\n            console.log(\"An error happened\");\n        }\n    );\n}\n"]},"metadata":{},"sourceType":"module"}