{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  const {\n    0: Renders,\n    1: setRenders\n  } = useState(undefined);\n  useEffect(() => {\n    var SceneToGet = new Scene();\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    setRenders(new WebGLRenderer());\n  }, []);\n  useEffect(() => {\n    if (child === undefined || Renders === undefined) return;\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n  }, [child, Renders]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","PerspectiveCamera","Scene","WebGLRenderer","render","child","setChild","undefined","Renders","setRenders","SceneToGet","Camera","window","innerWidth","innerHeight","setSize","appendChild","domElement","geometry","THREE","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","scene","add","camera","position","z","ref"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,EAA4BC,KAA5B,EAAmCC,aAAnC,QAAwD,OAAxD;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAACO,SAAD,CAAlC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAACO,SAAD,CAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,UAAU,GAAG,IAAIR,KAAJ,EAAjB;AACA,QAAIS,MAAM,GAAG,IAAIV,iBAAJ,CAAsB,EAAtB,EAA0BW,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAArD,EAAkE,GAAlE,EAAuE,IAAvE,CAAb;AACAL,IAAAA,UAAU,CAAC,IAAIN,aAAJ,EAAD,CAAV;AACH,GAJQ,EAIN,EAJM,CAAT;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,KAAKE,SAAV,IAAuBC,OAAO,KAAKD,SAAvC,EAAkD;AAClDC,IAAAA,OAAO,CAACO,OAAR,CAAgBH,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACE,WAA1C;AACAT,IAAAA,KAAK,CAACW,WAAN,CAAkBR,OAAO,CAACS,UAA1B;AAEA,QAAIC,QAAQ,GAAG,IAAIC,KAAK,CAACC,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAIF,KAAK,CAACG,iBAAV,CAA4B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA5B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIL,KAAK,CAACM,IAAV,CAAeP,QAAf,EAAyBG,QAAzB,CAAX;AACAK,IAAAA,KAAK,CAACC,GAAN,CAAUH,IAAV;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACH,GAVQ,EAUN,CAACzB,KAAD,EAAQG,OAAR,CAVM,CAAT;AAYA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEuB,GAAG,IAAKzB,QAAQ,CAACyB,GAAD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    const [Renders, setRenders] = useState(undefined)\n\n    useEffect(() => {\n        var SceneToGet = new Scene()\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        setRenders(new WebGLRenderer())\n    }, [])\n\n    useEffect(() => {\n        if (child === undefined || Renders === undefined) return;\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\n        var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        var cube = new THREE.Mesh(geometry, material);\n        scene.add(cube);\n        camera.position.z = 5;\n    }, [child, Renders])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}