{"ast":null,"code":"import { Vector2, Vector3 } from \"three\";\nimport { roundnum } from \"../../Algorithms/MathUtils\";\nimport { generateTerrainChunk } from \"../ProceduleTerrain\";\nimport { GenerateTrees } from \"../staticAssets/treeBuilder\";\nlet loadedChunks = {};\nlet chunksInMem = {};\nexport function generateTerrainAroundPlayer(seed, camera, scene) {\n  setInterval(() => {\n    let vector = new Vector3();\n    camera.getWorldPosition(vector);\n    let ChunkYourIn = new Vector2(roundnum(vector.x, 500), roundnum(vector.z, 500));\n\n    if (loadedChunks[ChunkYourIn.x] !== undefined && loadedChunks[ChunkYourIn.x][ChunkYourIn.y] === true) {\n      console.log('exists', ChunkYourIn.x, ChunkYourIn.y);\n    } else {\n      console.log('Generating, ', ChunkYourIn.x, ChunkYourIn.y);\n      loadedChunks[ChunkYourIn.x] = {};\n      loadedChunks[ChunkYourIn.x][ChunkYourIn.y] = true;\n      let chunk = generateTerrainChunk(seed, ChunkYourIn, 30);\n      GenerateTrees(300, scene, new Vector3(ChunkYourIn.x - 250, 250, ChunkYourIn.y - 250), new Vector3(ChunkYourIn.x + 250, 250, ChunkYourIn.y + 250), chunk);\n      chunksInMem[ChunkYourIn.x] = {};\n      chunksInMem[ChunkYourIn.x][ChunkYourIn.y] = chunk;\n      scene.add(chunk);\n    } //let chunk = generateTerrainChunk(seed, camera, 30);\n\n  }, 1000);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/TerrainManagement/terrainChunkriser.js"],"names":["Vector2","Vector3","roundnum","generateTerrainChunk","GenerateTrees","loadedChunks","chunksInMem","generateTerrainAroundPlayer","seed","camera","scene","setInterval","vector","getWorldPosition","ChunkYourIn","x","z","undefined","y","console","log","chunk","add"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEA,OAAO,SAASC,2BAAT,CAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0D;AAC7DC,EAAAA,WAAW,CAAC,MAAM;AACd,QAAIC,MAAM,GAAG,IAAIX,OAAJ,EAAb;AACAQ,IAAAA,MAAM,CAACI,gBAAP,CAAwBD,MAAxB;AAEA,QAAIE,WAAW,GAAI,IAAId,OAAJ,CAAYE,QAAQ,CAACU,MAAM,CAACG,CAAR,EAAW,GAAX,CAApB,EAAqCb,QAAQ,CAACU,MAAM,CAACI,CAAR,EAAW,GAAX,CAA7C,CAAnB;;AACA,QAAGX,YAAY,CAACS,WAAW,CAACC,CAAb,CAAZ,KAAgCE,SAAhC,IAA6CZ,YAAY,CAACS,WAAW,CAACC,CAAb,CAAZ,CAA4BD,WAAW,CAACI,CAAxC,MAA+C,IAA/F,EAAoG;AAChGC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,WAAW,CAACC,CAAlC,EAAqCD,WAAW,CAACI,CAAjD;AACH,KAFD,MAEK;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,WAAW,CAACC,CAAxC,EAA2CD,WAAW,CAACI,CAAvD;AACAb,MAAAA,YAAY,CAACS,WAAW,CAACC,CAAb,CAAZ,GAA8B,EAA9B;AACAV,MAAAA,YAAY,CAACS,WAAW,CAACC,CAAb,CAAZ,CAA4BD,WAAW,CAACI,CAAxC,IAA6C,IAA7C;AACA,UAAIG,KAAK,GAAGlB,oBAAoB,CAACK,IAAD,EAAOM,WAAP,EAAoB,EAApB,CAAhC;AACAV,MAAAA,aAAa,CAAC,GAAD,EAAMM,KAAN,EAAa,IAAIT,OAAJ,CAAYa,WAAW,CAACC,CAAZ,GAAc,GAA1B,EAA+B,GAA/B,EAAmCD,WAAW,CAACI,CAAZ,GAAc,GAAjD,CAAb,EAAoE,IAAIjB,OAAJ,CAAYa,WAAW,CAACC,CAAZ,GAAc,GAA1B,EAA8B,GAA9B,EAAkCD,WAAW,CAACI,CAAZ,GAAc,GAAhD,CAApE,EAA0HG,KAA1H,CAAb;AACAf,MAAAA,WAAW,CAACQ,WAAW,CAACC,CAAb,CAAX,GAA6B,EAA7B;AACAT,MAAAA,WAAW,CAACQ,WAAW,CAACC,CAAb,CAAX,CAA2BD,WAAW,CAACI,CAAvC,IAA4CG,KAA5C;AACAX,MAAAA,KAAK,CAACY,GAAN,CAAUD,KAAV;AACH,KAhBa,CAiBd;;AACH,GAlBU,EAkBT,IAlBS,CAAX;AAoBH","sourcesContent":["import { Vector2, Vector3 } from \"three\";\nimport { roundnum } from \"../../Algorithms/MathUtils\";\nimport { generateTerrainChunk } from \"../ProceduleTerrain\";\nimport { GenerateTrees } from \"../staticAssets/treeBuilder\";\n\nlet loadedChunks = {}\nlet chunksInMem = {}\n\nexport function generateTerrainAroundPlayer(seed, camera, scene) {\n    setInterval(() => {\n        let vector = new Vector3();\n        camera.getWorldPosition(vector);\n\n        let ChunkYourIn  = new Vector2(roundnum(vector.x, 500), roundnum(vector.z, 500))\n        if(loadedChunks[ChunkYourIn.x] !== undefined && loadedChunks[ChunkYourIn.x][ChunkYourIn.y] === true){\n            console.log('exists', ChunkYourIn.x, ChunkYourIn.y)\n        }else{\n            console.log('Generating, ', ChunkYourIn.x, ChunkYourIn.y)\n            loadedChunks[ChunkYourIn.x] = {}\n            loadedChunks[ChunkYourIn.x][ChunkYourIn.y] = true\n            let chunk = generateTerrainChunk(seed, ChunkYourIn, 30);\n            GenerateTrees(300, scene, new Vector3(ChunkYourIn.x-250, 250,ChunkYourIn.y-250), new Vector3(ChunkYourIn.x+250,250,ChunkYourIn.y+250), chunk)\n            chunksInMem[ChunkYourIn.x] = {}\n            chunksInMem[ChunkYourIn.x][ChunkYourIn.y] = chunk\n            scene.add(chunk)\n        }\n        //let chunk = generateTerrainChunk(seed, camera, 30);\n    },1000)\n\n}\n"]},"metadata":{},"sourceType":"module"}