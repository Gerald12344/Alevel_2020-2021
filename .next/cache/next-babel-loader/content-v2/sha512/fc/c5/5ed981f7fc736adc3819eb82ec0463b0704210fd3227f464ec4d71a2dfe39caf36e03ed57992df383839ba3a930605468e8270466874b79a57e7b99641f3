{"ast":null,"code":"import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nexport class MakePlane {\n  constructor(SceneToGet, settings) {\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n    this.speed = 0;\n    this.elevatorPitch = 0;\n  }\n\n  async loadFiles() {\n    this.plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n    this.props = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n    this.leftAirelone = await addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n    this.rightAirelone = await addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n    this.leftControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n    this.rightControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n    this.rudder = await addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n  }\n\n  CreateGroupAndPos() {\n    this.group.add(this.plane.scene);\n    this.group.add(this.props.scene);\n    this.group.add(this.leftAirelone.scene);\n    this.group.add(this.rightAirelone.scene);\n    this.group.add(this.rightControlSurface.scene);\n    this.group.add(this.leftControlSurface.scene);\n    this.group.add(this.rudder.scene);\n    this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n    this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n    this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n    this.leftControlSurface.scene.rotateY(radiants(-7));\n    this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n    this.rightControlSurface.scene.rotateY(radiants(6.8));\n    this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n    this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n    this.rudder.scene.rotateX(radiants(-22));\n    this.props.scene.position.set(0, 15, 22);\n    this.SceneToGet.add(this.group);\n    this.group.scale.set(0.05, 0.05, 0.05);\n    let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene];\n    let currentEvelatorPitch = 0; // For testing \\\\\n\n    addToRenderSequence(\"Main\", () => {\n      props.rotateZ(this.speed);\n\n      if (currentEvelatorPitch > this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(0.01);\n        currentEvelatorPitch += 0.01;\n      } else if (currentEvelatorPitch < this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(-0.01);\n        currentEvelatorPitch -= 0.01;\n      }\n    }, false);\n    return this.group;\n  }\n\n  attachCameraAndControl(Camera) {\n    this.UUID = listenToConrols(({\n      wKey,\n      aKey,\n      sKey,\n      dKey,\n      upKey,\n      downKey,\n      eKey,\n      qKey,\n      shiftKey\n    }) => {\n      if (eKey) {\n        if (this.speed < 3) {\n          this.speed += 0.01;\n        }\n      }\n\n      if (qKey) {\n        if (this.speed > 0) {\n          this.speed -= 0.01;\n        }\n      }\n\n      if (wKey) {\n        this.elevatorPitch = 5;\n      } else if (sKey) {\n        this.elevatorPitch = -5;\n      } else {\n        this.elevatorPitch = 0;\n      }\n    });\n    let cube = debugCube();\n    cube.visible = false;\n    cube.position.set(0, 40, -100);\n    cube.rotateY(radiants(180));\n    cube.rotateX(radiants(-20));\n    this.group.add(cube);\n    addToRenderSequence(\"Main\", () => {\n      let pos = cube.position.clone().setFromMatrixPosition(cube.matrixWorld);\n      let rot = cube.getWorldQuaternion(Camera.rotation);\n      Camera.position.set(pos.x, pos.y, pos.z);\n    });\n  }\n\n  cleanUp() {\n    if (this.UUID !== undefined) {\n      CleanUpListener(this.UUID);\n    }\n\n    this.group.remove();\n    return {\n      success: true\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","addGLBFile","debugCube","addToRenderSequence","listenToConrols","MakePlane","constructor","SceneToGet","settings","group","speed","elevatorPitch","loadFiles","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","CreateGroupAndPos","add","scene","position","set","rotateY","rotateZ","rotateX","scale","currentEvelatorPitch","attachCameraAndControl","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","cube","visible","pos","clone","setFromMatrixPosition","matrixWorld","rot","getWorldQuaternion","rotation","x","y","z","cleanUp","undefined","CleanUpListener","remove","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n        this.speed = 0;\n        this.elevatorPitch = 0;\n    }   \n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541)\n        this.leftControlSurface.scene.rotateY(radiants(-7))\n\n        this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447)\n        this.rightControlSurface.scene.rotateY(radiants(6.8))\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5))\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17)\n        this.rudder.scene.rotateX(radiants(-22))\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene]\n\n        let currentEvelatorPitch = 0\n        // For testing \\\\\n        addToRenderSequence(\"Main\", () => {\n            props.rotateZ(this.speed);\n            if(currentEvelatorPitch > this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(0.01)\n                currentEvelatorPitch += 0.01\n            }else if(currentEvelatorPitch < this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(-0.01)\n                currentEvelatorPitch -= 0.01\n            }\n        }, false);\n\n        return this.group\n    }\n    attachCameraAndControl(Camera){\n        this.UUID = listenToConrols(({wKey, aKey, sKey, dKey, upKey, downKey, eKey, qKey, shiftKey}) => {\n            if(eKey){\n                if(this.speed < 3){\n                  this.speed += 0.01  \n                }\n            }\n            if(qKey){\n                if(this.speed > 0 ){\n                  this.speed -= 0.01  \n                }\n            }\n            if(wKey){\n                this.elevatorPitch = 5\n            }else if(sKey){\n                this.elevatorPitch = -5\n            }else{\n                this.elevatorPitch = 0\n            }\n        })\n        let cube = debugCube()\n        cube.visible = false\n        cube.position.set(0,40,-100)\n        cube.rotateY(radiants(180))\n        cube.rotateX(radiants(-20))\n        this.group.add(cube)\n        addToRenderSequence(\"Main\", () => {\n            let pos = cube.position.clone().setFromMatrixPosition( cube.matrixWorld)\n            let rot = cube.getWorldQuaternion(Camera.rotation)\n            Camera.position.set(pos.x,pos.y,pos.z)\n        })\n    }\n\n    cleanUp(){\n        if(this.UUID !== undefined){\n            CleanUpListener(this.UUID)\n        }\n        this.group.remove()\n        return {success:true}\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}