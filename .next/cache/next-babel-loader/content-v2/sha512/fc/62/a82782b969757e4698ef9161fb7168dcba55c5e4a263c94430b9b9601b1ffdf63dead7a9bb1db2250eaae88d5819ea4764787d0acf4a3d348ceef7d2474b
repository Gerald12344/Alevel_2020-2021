{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nexport var MakePlane = /*#__PURE__*/function () {\n  function MakePlane(SceneToGet, settings) {\n    var _this = this;\n\n    _classCallCheck(this, MakePlane);\n\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n\n    var init = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.loadFiles();\n\n              case 3:\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                return _context.abrupt(\"return\", {\n                  error: true,\n                  response: _context.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    init();\n  }\n\n  _createClass(MakePlane, [{\n    key: \"loadFiles\",\n    value: function () {\n      var _loadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n\n              case 2:\n                this.plane = _context2.sent;\n                _context2.next = 5;\n                return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n\n              case 5:\n                this.props = _context2.sent;\n                _context2.next = 8;\n                return addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n\n              case 8:\n                this.leftAirelone = _context2.sent;\n                _context2.next = 11;\n                return addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n\n              case 11:\n                this.rightAirelone = _context2.sent;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadFiles() {\n        return _loadFiles.apply(this, arguments);\n      }\n\n      return loadFiles;\n    }()\n  }, {\n    key: \"CreateGroupAndPos\",\n    value: function () {\n      var _CreateGroupAndPos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.group.add(this.plane.scene);\n                this.group.add(this.blades.scene);\n                this.group.add(this.leftAirelone.scene);\n                this.group.add(this.rightAirelone.scene);\n                this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n                this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n                this.blades.scene.position.set(0, 15, 22);\n                this.SceneToGet.add(this.group);\n                this.group.scale.set(0.05, 0.05, 0.05); // For testing \\\\\n\n                addToRenderSequence(\"Main\", function () {\n                  _this2.blades.scene.rotateZ(0.3);\n\n                  _this2.leftAirelone.scene.rotateX(0.005);\n                });\n                return _context3.abrupt(\"return\", this.group);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function CreateGroupAndPos() {\n        return _CreateGroupAndPos.apply(this, arguments);\n      }\n\n      return CreateGroupAndPos;\n    }()\n  }]);\n\n  return MakePlane;\n}();","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","addGLBFile","addToRenderSequence","MakePlane","SceneToGet","settings","group","init","loadFiles","console","log","error","response","plane","props","leftAirelone","rightAirelone","add","scene","blades","position","set","scale","rotateZ","rotateX"],"mappings":";;;;AAAA,SAASA,KAAT,EAAgBC,iBAAhB,EAAmCC,OAAnC,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,WAAaC,SAAb;AACI,qBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAAA;;AAC9B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAa,IAAIR,KAAJ,EAAb;;AAEA,QAAIS,IAAI;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEG,KAAI,CAACC,SAAL,EAFH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIHC,gBAAAA,OAAO,CAACC,GAAR;AAJG,iDAKI;AAAEC,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,QAAQ;AAAvB,iBALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAJL,IAAI;AAAA;AAAA;AAAA,OAAR;;AAQAA,IAAAA,IAAI;AACP;;AAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAkB2BN,UAAU,CACzB,gCADyB,EAEzB,KAAKG,UAFoB,CAlBrC;;AAAA;AAkBQ,qBAAKS,KAlBb;AAAA;AAAA,uBAsB2BZ,UAAU,CACzB,iCADyB,EAEzB,KAAKG,UAFoB,CAtBrC;;AAAA;AAsBQ,qBAAKU,KAtBb;AAAA;AAAA,uBA0BkCb,UAAU,CAChC,uCADgC,EAEhC,KAAKG,UAF2B,CA1B5C;;AAAA;AA0BQ,qBAAKW,YA1Bb;AAAA;AAAA,uBA8BmCd,UAAU,CACjC,wCADiC,EAEjC,KAAKG,UAF4B,CA9B7C;;AAAA;AA8BQ,qBAAKY,aA9Bb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAqCQ,qBAAKV,KAAL,CAAWW,GAAX,CAAe,KAAKJ,KAAL,CAAWK,KAA1B;AACA,qBAAKZ,KAAL,CAAWW,GAAX,CAAe,KAAKE,MAAL,CAAYD,KAA3B;AACA,qBAAKZ,KAAL,CAAWW,GAAX,CAAe,KAAKF,YAAL,CAAkBG,KAAjC;AACA,qBAAKZ,KAAL,CAAWW,GAAX,CAAe,KAAKD,aAAL,CAAmBE,KAAlC;AAEA,qBAAKH,YAAL,CAAkBG,KAAlB,CAAwBE,QAAxB,CAAiCC,GAAjC,CAAqC,MAArC,EAA6C,MAA7C,EAAqD,CAAC,MAAtD;AACA,qBAAKL,aAAL,CAAmBE,KAAnB,CAAyBE,QAAzB,CAAkCC,GAAlC,CAAsC,CAAC,MAAvC,EAA+C,MAA/C,EAAuD,CAAC,MAAxD;AAEA,qBAAKF,MAAL,CAAYD,KAAZ,CAAkBE,QAAlB,CAA2BC,GAA3B,CAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC;AACA,qBAAKjB,UAAL,CAAgBa,GAAhB,CAAoB,KAAKX,KAAzB;AAEA,qBAAKA,KAAL,CAAWgB,KAAX,CAAiBD,GAAjB,CAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAhDR,CAkDQ;;AACAnB,gBAAAA,mBAAmB,CAAC,MAAD,EAAS,YAAM;AAC9B,kBAAA,MAAI,CAACiB,MAAL,CAAYD,KAAZ,CAAkBK,OAAlB,CAA0B,GAA1B;;AACA,kBAAA,MAAI,CAACR,YAAL,CAAkBG,KAAlB,CAAwBM,OAAxB,CAAgC,KAAhC;AACH,iBAHkB,CAAnB;AAnDR,kDAwDe,KAAKlB,KAxDpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n\n        let init = async () => {\n            try {\n                await this.loadFiles();\n            } catch (e) {\n                console.log(e);\n                return { error: true, response: e };\n            }\n        };\n        init();\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n    }\n\n    async CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.blades.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.blades.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        // For testing \\\\\n        addToRenderSequence(\"Main\", () => {\n            this.blades.scene.rotateZ(0.3);\n            this.leftAirelone.scene.rotateX(0.005);\n        });\n\n        return this.group\n    }\n}\n"]},"metadata":{},"sourceType":"module"}