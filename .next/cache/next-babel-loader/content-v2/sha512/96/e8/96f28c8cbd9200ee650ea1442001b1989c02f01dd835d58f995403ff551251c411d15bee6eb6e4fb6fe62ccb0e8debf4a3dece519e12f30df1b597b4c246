{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\",\n    _s = $RefreshSig$();\n\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  _s();\n\n  var _useState = useState(undefined),\n      child = _useState[0],\n      setChild = _useState[1];\n\n  var _useState2 = useState(undefined),\n      Renders = _useState2[0],\n      setRenders = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      SceneToGet = _useState3[0],\n      setSceneToGet = _useState3[1];\n\n  useEffect(function () {\n    setSceneToGet(new Scene());\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    setRenders(new WebGLRenderer());\n  }, []);\n  useEffect(function () {\n    if (child === undefined || Renders === undefined || SceneToGet === undefined) return;\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new BoxGeometry(1, 1, 1);\n    var material = new MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new Mesh(geometry, material);\n    SceneToGet.add(cube);\n    camera.position.z = 5;\n  }, [child, Renders]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: function ref(_ref) {\n        return setChild(_ref);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(render, \"uhSHznfTnQHiU1tpnRT4SIc0AHM=\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","BoxGeometry","Mesh","MeshBasicMaterial","PerspectiveCamera","Scene","WebGLRenderer","render","undefined","child","setChild","Renders","setRenders","SceneToGet","setSceneToGet","Camera","window","innerWidth","innerHeight","setSize","appendChild","domElement","geometry","material","color","cube","add","camera","position","z","ref"],"mappings":";;;;;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,KAAlE,EAAyEC,aAAzE,QAA8F,OAA9F;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACHP,QAAQ,CAACQ,SAAD,CADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAAA,mBAECV,QAAQ,CAACQ,SAAD,CAFT;AAAA,MAEtBG,OAFsB;AAAA,MAEbC,UAFa;;AAAA,mBAGOZ,QAAQ,CAACQ,SAAD,CAHf;AAAA,MAGtBK,UAHsB;AAAA,MAGVC,aAHU;;AAK7Bf,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,aAAa,CAAC,IAAIT,KAAJ,EAAD,CAAb;AACA,QAAIU,MAAM,GAAG,IAAIX,iBAAJ,CAAsB,EAAtB,EAA0BY,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAArD,EAAkE,GAAlE,EAAuE,IAAvE,CAAb;AACAN,IAAAA,UAAU,CAAC,IAAIN,aAAJ,EAAD,CAAV;AACH,GAJQ,EAIN,EAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,KAAK,KAAKD,SAAV,IAAuBG,OAAO,KAAKH,SAAnC,IAAgDK,UAAU,KAAKL,SAAnE,EAA8E;AAC9EG,IAAAA,OAAO,CAACQ,OAAR,CAAgBH,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACE,WAA1C;AACAT,IAAAA,KAAK,CAACW,WAAN,CAAkBT,OAAO,CAACU,UAA1B;AAEA,QAAIC,QAAQ,GAAG,IAAIrB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAf;AACA,QAAIsB,QAAQ,GAAG,IAAIpB,iBAAJ,CAAsB;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAtB,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIvB,IAAJ,CAASoB,QAAT,EAAmBC,QAAnB,CAAX;AACAV,IAAAA,UAAU,CAACa,GAAX,CAAeD,IAAf;AACAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACH,GAVQ,EAUN,CAACpB,KAAD,EAAQE,OAAR,CAVM,CAAT;AAYA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAE,aAAAmB,IAAG;AAAA,eAAKpB,QAAQ,CAACoB,IAAD,CAAb;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GA5BuBvB,M","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    const [Renders, setRenders] = useState(undefined)\n    const [SceneToGet, setSceneToGet] = useState(undefined)\n\n    useEffect(() => {\n        setSceneToGet(new Scene())\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        setRenders(new WebGLRenderer())\n    }, [])\n\n    useEffect(() => {\n        if (child === undefined || Renders === undefined || SceneToGet === undefined) return;\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new BoxGeometry(1, 1, 1);\n        var material = new MeshBasicMaterial({ color: 0x00ff00 });\n        var cube = new Mesh(geometry, material);\n        SceneToGet.add(cube);\n        camera.position.z = 5;\n    }, [child, Renders])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}