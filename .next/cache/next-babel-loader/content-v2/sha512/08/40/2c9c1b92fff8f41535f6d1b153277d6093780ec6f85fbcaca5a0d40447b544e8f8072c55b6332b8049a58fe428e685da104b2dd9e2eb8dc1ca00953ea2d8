{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nexport function MakePlane(_x, _x2) {\n  return _MakePlane.apply(this, arguments);\n}\n_c2 = MakePlane;\n\nfunction _MakePlane() {\n  _MakePlane = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SceneToGet, settings) {\n    var plane, blades, controlSurfaces, group;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            controlSurfaces = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", SceneToGet);\n\n          case 4:\n            plane = _context.sent;\n            _context.next = 7;\n            return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", SceneToGet);\n\n          case 7:\n            blades = _context.sent;\n            _context.next = 10;\n            return addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", SceneToGet);\n\n          case 10:\n            controlSurfaces[0] = _context.sent;\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 17:\n            group = new Group();\n            group.add(plane.scene);\n            group.add(blades.scene);\n            controlSurfaces.forEach(function (e) {\n              group.add(e.scene);\n            });\n            blades.scene.position.set(0, 15, 22);\n            SceneToGet.add(group);\n            group.scale.set(0.05, 0.05, 0.05); //console.log(blades.scene)\n\n            addToRenderSequence(\"Main\", function () {\n              blades.scene.rotateZ(0.3); //group.rotateY(0.03) \n              //group.position.set(0,0, group.position.z+0.01)\n            });\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n  return _MakePlane.apply(this, arguments);\n}\n\n_c = MakePlane;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MakePlane\");\n$RefreshReg$(_c2, \"MakePlane\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","addGLBFile","addToRenderSequence","MakePlane","SceneToGet","settings","controlSurfaces","plane","blades","console","log","group","add","scene","forEach","e","position","set","scale","rotateZ"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,iBAAhB,EAAmCC,OAAnC,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAGA,gBAAsBC,SAAtB;AAAA;AAAA;MAAsBA,S;;;wEAAf,iBAAyBC,UAAzB,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGCC,YAAAA,eAHD,GAGmB,EAHnB;AAAA;AAAA;AAAA,mBAKeL,UAAU,CAAC,gCAAD,EAAoCG,UAApC,CALzB;;AAAA;AAKCG,YAAAA,KALD;AAAA;AAAA,mBAMgBN,UAAU,CAAC,iCAAD,EAAqCG,UAArC,CAN1B;;AAAA;AAMCI,YAAAA,MAND;AAAA;AAAA,mBAO4BP,UAAU,CAAC,uCAAD,EAA2CG,UAA3C,CAPtC;;AAAA;AAOCE,YAAAA,eAAe,CAAC,CAAD,CAPhB;AAAA;AAAA;;AAAA;AAAA;AAAA;AASCG,YAAAA,OAAO,CAACC,GAAR;AATD,6CAUQ,KAVR;;AAAA;AAYCC,YAAAA,KAZD,GAYS,IAAIb,KAAJ,EAZT;AAaHa,YAAAA,KAAK,CAACC,GAAN,CAAUL,KAAK,CAACM,KAAhB;AACAF,YAAAA,KAAK,CAACC,GAAN,CAAUJ,MAAM,CAACK,KAAjB;AACAP,YAAAA,eAAe,CAACQ,OAAhB,CAAwB,UAACC,CAAD,EAAO;AAC3BJ,cAAAA,KAAK,CAACC,GAAN,CAAUG,CAAC,CAACF,KAAZ;AACH,aAFD;AAGAL,YAAAA,MAAM,CAACK,KAAP,CAAaG,QAAb,CAAsBC,GAAtB,CAA0B,CAA1B,EAA4B,EAA5B,EAA+B,EAA/B;AACAb,YAAAA,UAAU,CAACQ,GAAX,CAAeD,KAAf;AACAA,YAAAA,KAAK,CAACO,KAAN,CAAYD,GAAZ,CAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EApBG,CAqBH;;AACAf,YAAAA,mBAAmB,CAAC,MAAD,EAAS,YAAM;AAC9BM,cAAAA,MAAM,CAACK,KAAP,CAAaM,OAAb,CAAqB,GAArB,EAD8B,CAE9B;AACA;AACH,aAJkB,CAAnB;;AAtBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAehB,S","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\"\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\"\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\"\n\n\nexport async function MakePlane(SceneToGet, settings){\n    let plane\n    let blades\n    let controlSurfaces = []\n    try{\n        plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\",  SceneToGet)\n        blades = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\",  SceneToGet)\n        controlSurfaces[0] = await addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\",  SceneToGet)\n    }catch(e){\n        console.log(e)\n        return false\n    }\n    let group = new Group()\n    group.add(plane.scene)\n    group.add(blades.scene)\n    controlSurfaces.forEach((e) => {\n        group.add(e.scene)\n    })\n    blades.scene.position.set(0,15,22)\n    SceneToGet.add(group)\n    group.scale.set(0.05,0.05,0.05)\n    //console.log(blades.scene)\n    addToRenderSequence(\"Main\", () => {\n        blades.scene.rotateZ(0.3) \n        //group.rotateY(0.03) \n        //group.position.set(0,0, group.position.z+0.01)\n    })\n}"]},"metadata":{},"sourceType":"module"}