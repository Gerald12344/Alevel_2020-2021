{"ast":null,"code":"import { ArrowHelper, Group, Raycaster, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { randomVectorBetweenPoints2D } from \"../../Algorithms/VectorUtils\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nexport async function GenerateTrees(num, scene, start, bounds, seed) {\n  let tree = await addGLBFile(\"/Assets/PineTree.glb\", scene);\n  scene.add(tree.scene);\n  console.log(tree.scene.children);\n  tree.scene.children[0].material.color.setHex(0x694b37);\n  tree.scene.children[1].material.color.setHex(0x216734);\n  let group = new Group();\n  let raycaster = new Raycaster();\n\n  for (let i = 0; i < num; i++) {\n    let newTree = tree.scene.clone();\n    let randomVector = randomVectorBetweenPoints2D(start, bounds);\n    randomVector.y = 50; //console.log(randomVectorBetweenPoints2D( start, bounds))\n\n    raycaster.set(randomVector, new Vector3(0, -1, 0));\n    let arrow = new ArrowHelper(new Vector3(0, -1, 0), randomVector, 100, Math.random() * 0xffffff);\n    scene.add(arrow);\n    const intersects = raycaster.intersectObjects(scene.get);\n    console.log(intersects);\n    newTree.rotateY(radiants(Math.random() * 360));\n    newTree.position.set(Math.random() * 50, Math.random() * 50, Math.random() * 50);\n    group.add(newTree);\n    console.log('here');\n  }\n\n  scene.add(group);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/staticAssets/treeBuilder.js"],"names":["ArrowHelper","Group","Raycaster","Vector3","radiants","randomVectorBetweenPoints2D","addGLBFile","GenerateTrees","num","scene","start","bounds","seed","tree","add","console","log","children","material","color","setHex","group","raycaster","i","newTree","clone","randomVector","y","set","arrow","Math","random","intersects","intersectObjects","get","rotateY","position"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,UAAT,QAA2B,0CAA3B;AAEA,OAAO,eAAeC,aAAf,CAA6BC,GAA7B,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,MAAhD,EAAwDC,IAAxD,EAA6D;AAChE,MAAIC,IAAI,GAAG,MAAMP,UAAU,CACvB,sBADuB,EAEvBG,KAFuB,CAA3B;AAIAA,EAAAA,KAAK,CAACK,GAAN,CAAUD,IAAI,CAACJ,KAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACJ,KAAL,CAAWQ,QAAvB;AACAJ,EAAAA,IAAI,CAACJ,KAAL,CAAWQ,QAAX,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,KAAhC,CAAsCC,MAAtC,CAA8C,QAA9C;AACAP,EAAAA,IAAI,CAACJ,KAAL,CAAWQ,QAAX,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,KAAhC,CAAsCC,MAAtC,CAA8C,QAA9C;AAEA,MAAIC,KAAK,GAAG,IAAIpB,KAAJ,EAAZ;AACA,MAAIqB,SAAS,GAAG,IAAIpB,SAAJ,EAAhB;;AACA,OAAI,IAAIqB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACf,GAAd,EAAkBe,CAAC,EAAnB,EAAsB;AAClB,QAAIC,OAAO,GAAGX,IAAI,CAACJ,KAAL,CAAWgB,KAAX,EAAd;AACA,QAAIC,YAAY,GAAGrB,2BAA2B,CAAEK,KAAF,EAASC,MAAT,CAA9C;AACAe,IAAAA,YAAY,CAACC,CAAb,GAAiB,EAAjB,CAHkB,CAIlB;;AAEAL,IAAAA,SAAS,CAACM,GAAV,CAAcF,YAAd,EAA4B,IAAIvB,OAAJ,CAAY,CAAZ,EAAc,CAAC,CAAf,EAAiB,CAAjB,CAA5B;AAEA,QAAI0B,KAAK,GAAG,IAAI7B,WAAJ,CAAiB,IAAIG,OAAJ,CAAY,CAAZ,EAAc,CAAC,CAAf,EAAiB,CAAjB,CAAjB,EAAuCuB,YAAvC,EAAqD,GAArD,EAA0DI,IAAI,CAACC,MAAL,KAAgB,QAA1E,CAAZ;AACAtB,IAAAA,KAAK,CAACK,GAAN,CAAWe,KAAX;AAEA,UAAMG,UAAU,GAAGV,SAAS,CAACW,gBAAV,CAA4BxB,KAAK,CAACyB,GAAlC,CAAnB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,UAAZ;AAEAR,IAAAA,OAAO,CAACW,OAAR,CAAgB/B,QAAQ,CAAC0B,IAAI,CAACC,MAAL,KAAc,GAAf,CAAxB;AACAP,IAAAA,OAAO,CAACY,QAAR,CAAiBR,GAAjB,CAAqBE,IAAI,CAACC,MAAL,KAAc,EAAnC,EAAsCD,IAAI,CAACC,MAAL,KAAc,EAApD,EAAwDD,IAAI,CAACC,MAAL,KAAc,EAAtE;AACAV,IAAAA,KAAK,CAACP,GAAN,CAAUU,OAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDP,EAAAA,KAAK,CAACK,GAAN,CAAUO,KAAV;AACH","sourcesContent":["import { ArrowHelper, Group, Raycaster, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { randomVectorBetweenPoints2D } from \"../../Algorithms/VectorUtils\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\n\nexport async function GenerateTrees(num, scene, start, bounds, seed){\n    let tree = await addGLBFile(\n        \"/Assets/PineTree.glb\",\n        scene\n    );\n    scene.add(tree.scene)\n    console.log(tree.scene.children)\n    tree.scene.children[0].material.color.setHex( 0x694b37 );\n    tree.scene.children[1].material.color.setHex( 0x216734 );\n    \n    let group = new Group()\n    let raycaster = new Raycaster()\n    for(let i=0;i<num;i++){\n        let newTree = tree.scene.clone()\n        let randomVector = randomVectorBetweenPoints2D( start, bounds)\n        randomVector.y = 50\n        //console.log(randomVectorBetweenPoints2D( start, bounds))\n\n        raycaster.set(randomVector, new Vector3(0,-1,0))\n\n        let arrow = new ArrowHelper( new Vector3(0,-1,0) , randomVector, 100, Math.random() * 0xffffff );\n        scene.add( arrow );\n\n        const intersects = raycaster.intersectObjects( scene.get );\n        console.log(intersects)\n\n        newTree.rotateY(radiants(Math.random()*360))\n        newTree.position.set(Math.random()*50,Math.random()*50, Math.random()*50)\n        group.add(newTree)\n        console.log('here')\n    }\n    scene.add(group)\n}"]},"metadata":{},"sourceType":"module"}