{"ast":null,"code":"// Written By Harvey Randall \\\\\nlet renderingList = {};\n\nfunction checkType(type) {\n  if (typeof renderingList[type] === \"undefined\") {\n    renderingList[type] = [];\n  }\n}\n\nexport function addToRenderSequence(type, callback, newType = false) {\n  if (newType) {\n    renderingList[type] = [];\n  }\n\n  checkType(type);\n  renderingList[`${type}`].push(callback);\n}\nexport function renderingInfo(type) {\n  checkType(type);\n  return renderingList[`${type}`].length;\n}\nexport function updateRenderCycle(type) {\n  checkType(type);\n  renderingList[`${type}`].forEach(item => {\n    item();\n  });\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Core-API/RenderingHandler.js"],"names":["renderingList","checkType","type","addToRenderSequence","callback","newType","push","renderingInfo","length","updateRenderCycle","forEach","item"],"mappings":"AAAA;AACA,IAAIA,aAAa,GAAG,EAApB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAI,OAAOF,aAAa,CAACE,IAAD,CAApB,KAA+B,WAAnC,EAAgD;AAC5CF,IAAAA,aAAa,CAACE,IAAD,CAAb,GAAsB,EAAtB;AACH;AACJ;;AAED,OAAO,SAASC,mBAAT,CAA6BD,IAA7B,EAAmCE,QAAnC,EAA6CC,OAAO,GAAG,KAAvD,EAA8D;AACjE,MAAIA,OAAJ,EAAa;AACTL,IAAAA,aAAa,CAACE,IAAD,CAAb,GAAsB,EAAtB;AACH;;AACDD,EAAAA,SAAS,CAACC,IAAD,CAAT;AACAF,EAAAA,aAAa,CAAE,GAAEE,IAAK,EAAT,CAAb,CAAyBI,IAAzB,CAA8BF,QAA9B;AACH;AAED,OAAO,SAASG,aAAT,CAAuBL,IAAvB,EAA6B;AAChCD,EAAAA,SAAS,CAACC,IAAD,CAAT;AACA,SAAOF,aAAa,CAAE,GAAEE,IAAK,EAAT,CAAb,CAAyBM,MAAhC;AACH;AAED,OAAO,SAASC,iBAAT,CAA2BP,IAA3B,EAAiC;AACpCD,EAAAA,SAAS,CAACC,IAAD,CAAT;AACAF,EAAAA,aAAa,CAAE,GAAEE,IAAK,EAAT,CAAb,CAAyBQ,OAAzB,CAAkCC,IAAD,IAAU;AACvCA,IAAAA,IAAI;AACP,GAFD;AAGH","sourcesContent":["// Written By Harvey Randall \\\\\nlet renderingList = {};\n\nfunction checkType(type) {\n    if (typeof renderingList[type] === \"undefined\") {\n        renderingList[type] = [];\n    }\n}\n\nexport function addToRenderSequence(type, callback, newType = false) {\n    if (newType) {\n        renderingList[type] = [];\n    }\n    checkType(type);\n    renderingList[`${type}`].push(callback);\n}\n\nexport function renderingInfo(type) {\n    checkType(type);\n    return renderingList[`${type}`].length;\n}\n\nexport function updateRenderCycle(type) {\n    checkType(type);\n    renderingList[`${type}`].forEach((item) => {\n        item();\n    });\n}\n"]},"metadata":{},"sourceType":"module"}