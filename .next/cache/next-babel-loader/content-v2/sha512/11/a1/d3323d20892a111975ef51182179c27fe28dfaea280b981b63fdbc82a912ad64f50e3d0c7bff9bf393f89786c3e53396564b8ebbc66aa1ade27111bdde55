{"ast":null,"code":"// Written By Harvey Randall \\\\\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"; //Functional Dependencies\n\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { generateTerrainAroundPlayer } from \"../gameFundalmentals/TerrainManagement/terrainChunkriser\";\nlet debug = true;\nexport async function generateMainScene(SceneToGet, Renders, document, seed, child2, Camera) {\n  let clouds = [];\n\n  for (let i = 0; i < 40; i++) {\n    clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n  }\n\n  let daynight = new CreateDayNightCycle(SceneToGet, Renders); //generateTerrain(seed, SceneToGet);\n\n  controlHandlerInit(document, child2);\n\n  if (debug) {\n    const planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n    planeGeometry.rotateX(Math.PI / 2);\n    const planeMaterial = new MeshStandardMaterial({\n      color: \"#567d46\",\n      side: DoubleSide\n    });\n    const plane = new Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -0.5;\n    SceneToGet.add(plane);\n    const gridHelper = new GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n  } // Add all updating parts to a function\n\n\n  addToRenderSequence(\"Main\", () => {\n    clouds.forEach((e, i) => {\n      e.update();\n    });\n  }, true);\n  let newPlane = new MakePlane(SceneToGet);\n  await newPlane.loadFiles();\n  newPlane.CreateGroupAndPos();\n  newPlane.attachCameraAndControl(Camera);\n  generateTerrainAroundPlayer(seed, Camera, SceneToGet); //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n\n  addToRenderSequence(\"Main\", () => daynight.update());\n}","map":null,"metadata":{},"sourceType":"module"}