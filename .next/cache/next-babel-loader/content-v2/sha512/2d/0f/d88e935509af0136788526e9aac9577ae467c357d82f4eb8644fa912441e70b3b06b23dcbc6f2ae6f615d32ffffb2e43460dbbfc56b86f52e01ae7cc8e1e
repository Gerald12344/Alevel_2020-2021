{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\",\n    _s = $RefreshSig$();\n\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { BoxGeometry, Clock, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer } from \"three\";\nimport { Sky } from \"../components/sky\";\nCameraControls.install({\n  THREE: THREE\n});\nexport default function render() {\n  _s();\n\n  var _useState = useState(undefined),\n      child = _useState[0],\n      setChild = _useState[1];\n\n  useEffect(function () {\n    if (child === undefined) return;\n    var SceneToGet = new Scene();\n    var Renders = new WebGLRenderer();\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new BoxGeometry(1, 1, 1);\n    var material = new MeshStandardMaterial({\n      color: 0xfffff\n    });\n    var cube = new Mesh(geometry, material);\n    cube.receiveShadow = true;\n    SceneToGet.add(cube);\n    var clock = new Clock();\n    var directionalLight = new THREE.DirectionalLight(0xddffee, 1);\n    directionalLight.position.set(0, 1, 0);\n    directionalLight.castShadow = true; //directionalLight.castShadow = true\n    //directionalLight.target = geometry\n\n    SceneToGet.add(directionalLight);\n    directionalLight.shadow.mapSize.width = 512; // default\n\n    directionalLight.shadow.mapSize.height = 512; // default\n\n    directionalLight.shadow.camera.near = 0.5; // default\n\n    directionalLight.shadow.camera.far = 500; // defaul\n\n    var helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n    SceneToGet.add(helper);\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var cameraControls = new CameraControls(Camera, Renders.domElement);\n    cameraControls.azimuthRotateSpeed = -0.3; // negative value to invert rotation direction\n\n    cameraControls.polarRotateSpeed = -0.3; // negative value to invert rotation direction\n\n    cameraControls.truckSpeed = 1 / 1e-5 * 3;\n    cameraControls.distance = 5;\n    cameraControls.mouseButtons.wheel = CameraControls.ACTION.ZOOM;\n    cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n    cameraControls.saveState();\n    Camera.position.z = 5;\n    Renders.domElement.requestPointerLock();\n    var gridHelper = new THREE.GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n\n      var delta = clock.getDelta();\n      var elapsed = clock.getElapsedTime();\n      var updated = cameraControls.update(delta);\n\n      if (updated) {//Renders.render(SceneToGet, Camera);\n      }\n\n      Renders.render(SceneToGet, Camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: function ref(_ref) {\n        return setChild(_ref);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(render, \"W4TgAUe69BEJp+AHeH1j9n7pn8I=\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","THREE","CameraControls","BoxGeometry","Clock","Material","Mesh","MeshBasicMaterial","MeshStandardMaterial","PerspectiveCamera","PointLight","Scene","Vector3","WebGLRenderer","Sky","install","render","undefined","child","setChild","SceneToGet","Renders","setSize","window","innerWidth","innerHeight","appendChild","domElement","geometry","material","color","cube","receiveShadow","add","clock","directionalLight","DirectionalLight","position","set","castShadow","shadow","mapSize","width","height","camera","near","far","helper","CameraHelper","Camera","cameraControls","azimuthRotateSpeed","polarRotateSpeed","truckSpeed","distance","mouseButtons","wheel","ACTION","ZOOM","touches","two","TOUCH_ZOOM_TRUCK","saveState","z","requestPointerLock","gridHelper","GridHelper","y","animate","requestAnimationFrame","delta","getDelta","elapsed","getElapsedTime","updated","update","ref"],"mappings":"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","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { BoxGeometry, Clock, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer } from \"three\"\nimport { Sky } from \"../components/sky\";\n\nCameraControls.install({ THREE: THREE });\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n\n    useEffect(() => {\n        if (child === undefined) return;\n\n        let SceneToGet = new Scene()\n        let Renders = new WebGLRenderer()\n\n\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new BoxGeometry(1, 1, 1);\n        var material = new MeshStandardMaterial({ color: 0xfffff });\n        var cube = new Mesh(geometry, material);\n        cube.receiveShadow = true\n        SceneToGet.add(cube);\n\n\n        const clock = new Clock();\n\n        const directionalLight = new THREE.DirectionalLight(0xddffee, 1);\n        directionalLight.position.set(0, 1, 0);\n        directionalLight.castShadow = true\n        //directionalLight.castShadow = true\n        //directionalLight.target = geometry\n        SceneToGet.add(directionalLight);\n        directionalLight.shadow.mapSize.width = 512; // default\n        directionalLight.shadow.mapSize.height = 512; // default\n        directionalLight.shadow.camera.near = 0.5; // default\n        directionalLight.shadow.camera.far = 500; // defaul\n\n        const helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n        SceneToGet.add(helper);\n\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        const cameraControls = new CameraControls(Camera, Renders.domElement);\n        cameraControls.azimuthRotateSpeed = - 0.3; // negative value to invert rotation direction\n        cameraControls.polarRotateSpeed = - 0.3; // negative value to invert rotation direction\n        cameraControls.truckSpeed = 1 / 1e-5 * 3;\n        cameraControls.distance = 5\n        cameraControls.mouseButtons.wheel = CameraControls.ACTION.ZOOM;\n        cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n        cameraControls.saveState();\n        Camera.position.z = 5;\n\n\n        Renders.domElement.requestPointerLock()\n\n        const gridHelper = new THREE.GridHelper(50, 50);\n        gridHelper.position.y = - 1;\n        SceneToGet.add(gridHelper);\n        var animate = function () {\n            requestAnimationFrame(animate);\n            //cube.rotation.x += 0.01;\n            //cube.rotation.y += 0.01;\n\n            const delta = clock.getDelta();\n            const elapsed = clock.getElapsedTime();\n            const updated = cameraControls.update(delta);\n\n            if (updated) {\n\n                //Renders.render(SceneToGet, Camera);\n\n            }\n            Renders.render(SceneToGet, Camera);\n        };\n        animate();\n    }, [child])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}