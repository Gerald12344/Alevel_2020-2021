{"ast":null,"code":"import { MTLLoader } from \"./mtlCore\";\nimport { OBJLoader } from \"./objCore\";\nexport function AddGLTF(obj, mtl, scene) {\n  const mtlLoader = new MTLLoader();\n  mtlLoader.load(mtl, mtl => {\n    mtl.preload();\n    const loader = new OBJLoader(); // load a resource\n\n    loader.load( // resource URL\n    obj, // called when resource is loaded\n    function (object) {\n      scene.add(object);\n    }, // called when loading is in progresses\n    function (xhr) {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    }, // called when loading has errors\n    function (error) {\n      console.log(\"An error happened\");\n    });\n  });\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Core-API/3dModelHandlers/ObjLoader.js"],"names":["MTLLoader","OBJLoader","AddGLTF","obj","mtl","scene","mtlLoader","load","preload","loader","object","add","xhr","console","log","loaded","total","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AACpC,QAAMC,SAAS,GAAG,IAAIN,SAAJ,EAAlB;AACAM,EAAAA,SAAS,CAACC,IAAV,CAAeH,GAAf,EAAqBA,GAAD,IAAS;AACzBA,IAAAA,GAAG,CAACI,OAAJ;AAEA,UAAMC,MAAM,GAAG,IAAIR,SAAJ,EAAf,CAHyB,CAKzB;;AACAQ,IAAAA,MAAM,CAACF,IAAP,EACI;AACAJ,IAAAA,GAFJ,EAGI;AACA,cAAUO,MAAV,EAAkB;AACdL,MAAAA,KAAK,CAACM,GAAN,CAAUD,MAAV;AACH,KANL,EAOI;AACA,cAAUE,GAAV,EAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAaF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAlB,GAA2B,GAA3B,GAAiC,UAA7C;AACH,KAVL,EAWI;AACA,cAAUC,KAAV,EAAiB;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAdL;AAgBH,GAtBD;AAuBH","sourcesContent":["import { MTLLoader } from \"./mtlCore\";\nimport { OBJLoader } from \"./objCore\";\n\nexport function AddGLTF(obj,mtl, scene) {\n    const mtlLoader = new MTLLoader();\n    mtlLoader.load(mtl, (mtl) => {\n        mtl.preload();\n\n        const loader = new OBJLoader();\n\n        // load a resource\n        loader.load(\n            // resource URL\n            obj,\n            // called when resource is loaded\n            function (object) {\n                scene.add(object);\n            },\n            // called when loading is in progresses\n            function (xhr) {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n            },\n            // called when loading has errors\n            function (error) {\n                console.log(\"An error happened\");\n            }\n        );\n    });\n}\n"]},"metadata":{},"sourceType":"module"}