{"ast":null,"code":"import { GLTFLoader } from \"./glbCore\";\nexport async function addGLBFile(item, scene) {\n  return new Promise((resolve, reject) => {\n    const loader = new GLTFLoader();\n    loader.load( // resource URL\n    item, // called when the resource is loaded\n    function (gltf) {\n      gltf.animations;\n      gltf.scene;\n      gltf.scenes;\n      gltf.cameras;\n      gltf.asset;\n      resolve(gltf);\n    }, // called while loading is progressing\n    function (xhr) {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    }, // called when loading has errors\n    function (error) {\n      console.log(\"An error happened\");\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Core-API/3dModelHandlers/GLBLoader.js"],"names":["GLTFLoader","addGLBFile","item","scene","Promise","resolve","reject","loader","load","gltf","animations","scenes","cameras","asset","xhr","console","log","loaded","total","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,WAA3B;AAEA,OAAO,eAAeC,UAAf,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AAC1C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAG,IAAIP,UAAJ,EAAf;AACAO,IAAAA,MAAM,CAACC,IAAP,EACI;AACAN,IAAAA,IAFJ,EAGI;AACA,cAAUO,IAAV,EAAgB;AACZA,MAAAA,IAAI,CAACC,UAAL;AACAD,MAAAA,IAAI,CAACN,KAAL;AACAM,MAAAA,IAAI,CAACE,MAAL;AACAF,MAAAA,IAAI,CAACG,OAAL;AACAH,MAAAA,IAAI,CAACI,KAAL;AACAR,MAAAA,OAAO,CAACI,IAAD,CAAP;AACH,KAXL,EAYI;AACA,cAAUK,GAAV,EAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAaF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAlB,GAA2B,GAA3B,GAAiC,UAA7C;AACH,KAfL,EAgBI;AACA,cAAUC,KAAV,EAAiB;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAV,MAAAA,MAAM,CAACa,KAAD,CAAN;AACH,KApBL;AAsBH,GAxBM,CAAP;AAyBH","sourcesContent":["import { GLTFLoader } from \"./glbCore\";\n\nexport async function addGLBFile(item, scene) {\n    return new Promise((resolve, reject) => {\n        const loader = new GLTFLoader();\n        loader.load(\n            // resource URL\n            item,\n            // called when the resource is loaded\n            function (gltf) {\n                gltf.animations;\n                gltf.scene;\n                gltf.scenes;\n                gltf.cameras;\n                gltf.asset;\n                resolve(gltf)\n            },\n            // called while loading is progressing\n            function (xhr) {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n            },\n            // called when loading has errors\n            function (error) {\n                console.log(\"An error happened\");\n                reject(error)\n            }\n        );\n    });\n}\n"]},"metadata":{},"sourceType":"module"}