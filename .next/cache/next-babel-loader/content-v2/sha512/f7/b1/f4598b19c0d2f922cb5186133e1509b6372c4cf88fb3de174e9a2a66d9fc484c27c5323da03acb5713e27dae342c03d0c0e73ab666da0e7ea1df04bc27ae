{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Written By Harvey Randall \\\\\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"; //Functional Dependencies\n\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { generateTerrainAroundPlayer } from \"../gameFundalmentals/TerrainManagement/terrainChunkriser\";\nimport { createOcean } from \"../../testing/ocean\";\nvar debug = true;\nexport function generateMainScene(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _generateMainScene.apply(this, arguments);\n}\n\nfunction _generateMainScene() {\n  _generateMainScene = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SceneToGet, Renders, document, seed, child2, Camera) {\n    var clouds, i, daynight, planeGeometry, planeMaterial, plane, gridHelper, newPlane;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clouds = [];\n\n            for (i = 0; i < 40; i++) {\n              clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n            }\n\n            daynight = new CreateDayNightCycle(SceneToGet, Renders); //generateTerrain(seed, SceneToGet);\n\n            controlHandlerInit(document, child2);\n\n            if (debug) {\n              planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n              planeGeometry.rotateX(Math.PI / 2);\n              planeMaterial = new MeshStandardMaterial({\n                color: \"#567d46\",\n                side: DoubleSide\n              });\n              plane = new Mesh(planeGeometry, planeMaterial);\n              plane.position.y = -0.5;\n              SceneToGet.add(plane);\n              gridHelper = new GridHelper(50, 50);\n              gridHelper.position.y = -1;\n              SceneToGet.add(gridHelper);\n            } // Add all updating parts to a function\n\n\n            addToRenderSequence(\"Main\", function () {\n              clouds.forEach(function (e, i) {\n                e.update();\n              });\n            }, true);\n            newPlane = new MakePlane(SceneToGet);\n            _context.next = 9;\n            return newPlane.loadFiles();\n\n          case 9:\n            newPlane.CreateGroupAndPos();\n            newPlane.attachCameraAndControl(Camera);\n            generateTerrainAroundPlayer(seed, Camera, SceneToGet); //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n\n            addToRenderSequence(\"Main\", function () {\n              return daynight.update();\n            });\n            createOcean(SceneToGet);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _generateMainScene.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}