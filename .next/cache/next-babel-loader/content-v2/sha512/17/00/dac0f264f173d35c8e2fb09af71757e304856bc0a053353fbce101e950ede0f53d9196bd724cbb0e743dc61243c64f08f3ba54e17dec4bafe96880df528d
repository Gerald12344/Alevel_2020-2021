{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  useEffect(() => {\n    if (child === undefined) return;\n    let SceneToGet = new Scene();\n    let Renders = new WebGLRenderer();\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new BoxGeometry(1, 1, 1);\n    var material = new MeshStandardMaterial({\n      color: 0x00ff00\n    });\n    var cube = new Mesh(geometry, material);\n    SceneToGet.add(cube);\n    const light = new PointerLight(0xff0000, 1, 100);\n    light.position.set(50, 50, 50);\n    scene.add(light);\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    Camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      Renders.render(SceneToGet, Camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","BoxGeometry","Material","Mesh","MeshBasicMaterial","MeshStandardMaterial","PerspectiveCamera","Scene","WebGLRenderer","render","child","setChild","undefined","SceneToGet","Renders","setSize","window","innerWidth","innerHeight","appendChild","domElement","geometry","material","color","cube","add","light","PointerLight","position","set","scene","Camera","z","animate","requestAnimationFrame","rotation","x","y","ref"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,iBAAtC,EAAyDC,oBAAzD,EAA+EC,iBAA/E,EAAkGC,KAAlG,EAAyGC,aAAzG,QAA8H,OAA9H;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAACY,SAAD,CAAlC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,KAAKE,SAAd,EAAyB;AAEzB,QAAIC,UAAU,GAAG,IAAIN,KAAJ,EAAjB;AACA,QAAIO,OAAO,GAAG,IAAIN,aAAJ,EAAd;AAGAM,IAAAA,OAAO,CAACC,OAAR,CAAgBC,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACE,WAA1C;AACAR,IAAAA,KAAK,CAACS,WAAN,CAAkBL,OAAO,CAACM,UAA1B;AAEA,QAAIC,QAAQ,GAAG,IAAIpB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAf;AACA,QAAIqB,QAAQ,GAAG,IAAIjB,oBAAJ,CAAyB;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAzB,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIrB,IAAJ,CAASkB,QAAT,EAAmBC,QAAnB,CAAX;AACAT,IAAAA,UAAU,CAACY,GAAX,CAAeD,IAAf;AAEA,UAAME,KAAK,GAAG,IAAIC,YAAJ,CAAiB,QAAjB,EAA2B,CAA3B,EAA8B,GAA9B,CAAd;AACAD,IAAAA,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B;AACAC,IAAAA,KAAK,CAACL,GAAN,CAAUC,KAAV;AAEA,QAAIK,MAAM,GAAG,IAAIzB,iBAAJ,CAAsB,EAAtB,EAA0BU,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAArD,EAAkE,GAAlE,EAAuE,IAAvE,CAAb;AACAa,IAAAA,MAAM,CAACH,QAAP,CAAgBI,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACtBC,MAAAA,qBAAqB,CAACD,OAAD,CAArB;AACAT,MAAAA,IAAI,CAACW,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAZ,MAAAA,IAAI,CAACW,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACAvB,MAAAA,OAAO,CAACL,MAAR,CAAeI,UAAf,EAA2BkB,MAA3B;AACH,KALD;;AAMAE,IAAAA,OAAO;AACV,GA5BQ,EA4BN,CAACvB,KAAD,CA5BM,CAAT;AA8BA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAE4B,GAAG,IAAK3B,QAAQ,CAAC2B,GAAD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { BoxGeometry, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n\n    useEffect(() => {\n        if (child === undefined) return;\n\n        let SceneToGet = new Scene()\n        let Renders = new WebGLRenderer()\n\n\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new BoxGeometry(1, 1, 1);\n        var material = new MeshStandardMaterial({ color: 0x00ff00 });\n        var cube = new Mesh(geometry, material);\n        SceneToGet.add(cube);\n\n        const light = new PointerLight(0xff0000, 1, 100);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        Camera.position.z = 5;\n        var animate = function () {\n            requestAnimationFrame(animate);\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            Renders.render(SceneToGet, Camera);\n        };\n        animate();\n    }, [child])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}