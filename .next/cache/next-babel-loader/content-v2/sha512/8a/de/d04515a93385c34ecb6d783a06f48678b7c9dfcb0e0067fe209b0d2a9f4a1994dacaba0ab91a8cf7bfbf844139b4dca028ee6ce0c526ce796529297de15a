{"ast":null,"code":"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nexport function AddGLTF(item, scene) {\n  loader.load( // resource URL\n  item, // called when the resource is loaded\n  function (gltf) {\n    scene.add(gltf.scene);\n    gltf.animations;\n    gltf.scene;\n    gltf.scenes;\n    gltf.cameras;\n    gltf.asset;\n  }, // called while loading is progressing\n  function (xhr) {\n    console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n  }, // called when loading has errors\n  function (error) {\n    console.log('An error happened');\n  });\n}\n_c = AddGLTF;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGLTF\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Core-API/glbLoader.js"],"names":["GLTFLoader","AddGLTF","item","scene","loader","load","gltf","add","animations","scenes","cameras","asset","xhr","console","log","loaded","total","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uCAA3B;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA6B;AAChCC,EAAAA,MAAM,CAACC,IAAP,EACI;AACAH,EAAAA,IAFJ,EAGI;AACA,YAAWI,IAAX,EAAkB;AAEdH,IAAAA,KAAK,CAACI,GAAN,CAAWD,IAAI,CAACH,KAAhB;AAEAG,IAAAA,IAAI,CAACE,UAAL;AACAF,IAAAA,IAAI,CAACH,KAAL;AACAG,IAAAA,IAAI,CAACG,MAAL;AACAH,IAAAA,IAAI,CAACI,OAAL;AACAJ,IAAAA,IAAI,CAACK,KAAL;AACH,GAbL,EAcI;AACA,YAAWC,GAAX,EAAiB;AAEbC,IAAAA,OAAO,CAACC,GAAR,CAAeF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAjB,GAAyB,GAA3B,GAAmC,UAAhD;AAEH,GAnBL,EAoBI;AACA,YAAWC,KAAX,EAAmB;AAEfJ,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAb;AAEH,GAzBL;AA2BH;KA5Beb,O","sourcesContent":["import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport function AddGLTF(item, scene){\n    loader.load(\n        // resource URL\n        item,\n        // called when the resource is loaded\n        function ( gltf ) {\n    \n            scene.add( gltf.scene );\n    \n            gltf.animations;\n            gltf.scene; \n            gltf.scenes; \n            gltf.cameras; \n            gltf.asset; \n        },\n        // called while loading is progressing\n        function ( xhr ) {\n    \n            console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n    \n        },\n        // called when loading has errors\n        function ( error ) {\n    \n            console.log( 'An error happened' );\n    \n        }\n    );\n}"]},"metadata":{},"sourceType":"module"}