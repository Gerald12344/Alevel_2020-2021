{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/cube.js\",\n    _s = $RefreshSig$();\n\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { AmbientLight, BoxGeometry, Clock, DoubleSide, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PCFSoftShadowMap, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer } from \"three\";\nexport default function render() {\n  _s();\n\n  var _useState = useState(undefined),\n      child = _useState[0],\n      setChild = _useState[1];\n\n  useEffect(function () {\n    if (child === undefined) return;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry();\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    var animate = function animate() {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: function ref(_ref) {\n        return setChild(_ref);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(render, \"W4TgAUe69BEJp+AHeH1j9n7pn8I=\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/cube.js"],"names":["useEffect","useState","AmbientLight","BoxGeometry","Clock","DoubleSide","Material","Mesh","MeshBasicMaterial","MeshStandardMaterial","PCFSoftShadowMap","PerspectiveCamera","PointLight","Scene","Vector3","WebGLRenderer","render","undefined","child","setChild","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","appendChild","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","ref"],"mappings":";;;;;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,KAApC,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,IAAjE,EAAuEC,iBAAvE,EAA0FC,oBAA1F,EAAgHC,gBAAhH,EAAkIC,iBAAlI,EAAqJC,UAArJ,EAAiKC,KAAjK,EAAwKC,OAAxK,EAAiLC,aAAjL,QAAsM,OAAtM;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACHf,QAAQ,CAACgB,SAAD,CADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAG7BnB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkB,KAAK,KAAKD,SAAd,EAAyB;AAEzB,QAAMG,KAAK,GAAG,IAAIC,KAAK,CAACR,KAAV,EAAd;AACA,QAAMS,MAAM,GAAG,IAAID,KAAK,CAACV,iBAAV,CAA6B,EAA7B,EAAiCY,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,IAA9E,CAAf;AAEA,QAAMC,QAAQ,GAAG,IAAIL,KAAK,CAACN,aAAV,EAAjB;AACAW,IAAAA,QAAQ,CAACC,OAAT,CAAkBJ,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAP,IAAAA,KAAK,CAACU,WAAN,CAAmBF,QAAQ,CAACG,UAA5B;AAEA,QAAMC,QAAQ,GAAG,IAAIT,KAAK,CAAClB,WAAV,EAAjB;AACA,QAAM4B,QAAQ,GAAG,IAAIV,KAAK,CAACb,iBAAV,CAA6B;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAjB;AACA,QAAMC,IAAI,GAAG,IAAIZ,KAAK,CAACd,IAAV,CAAgBuB,QAAhB,EAA0BC,QAA1B,CAAb;AACAX,IAAAA,KAAK,CAACc,GAAN,CAAWD,IAAX;AAEAX,IAAAA,MAAM,CAACa,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AAEAJ,MAAAA,IAAI,CAACM,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAP,MAAAA,IAAI,CAACM,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AAEAf,MAAAA,QAAQ,CAACV,MAAT,CAAiBI,KAAjB,EAAwBE,MAAxB;AACH,KAPD;;AASAe,IAAAA,OAAO;AACV,GA3BQ,EA2BN,CAACnB,KAAD,CA3BM,CAAT;AA6BA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAE,aAAAwB,IAAG;AAAA,eAAKvB,QAAQ,CAACuB,IAAD,CAAb;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GArCuB1B,M","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { AmbientLight, BoxGeometry, Clock, DoubleSide, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PCFSoftShadowMap, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer } from \"three\"\n\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n\n    useEffect(() => {\n        if (child === undefined) return;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        child.appendChild( renderer.domElement );\n\n        const geometry = new THREE.BoxGeometry();\n        const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        const cube = new THREE.Mesh( geometry, material );\n        scene.add( cube );\n\n        camera.position.z = 5;\n\n        const animate = function () {\n            requestAnimationFrame( animate );\n\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }, [child])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}