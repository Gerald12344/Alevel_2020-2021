{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  useEffect(() => {\n    if (child === undefined) return;\n    const scene = new Scene();\n    const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(renderer.domElement);\n    const geometry = new BoxGeometry();\n    const material = new MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    const animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref => setChild(ref)\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}