{"ast":null,"code":"// Written By Harvey Randall \\\\\nimport { BoxGeometry, Color, CylinderGeometry, Group, Mesh, MeshLambertMaterial } from \"three\";\nimport { ListenToEvent } from \"../../Core-API/ConnectAPI\";\nimport { GenerateLabel } from \"../nametag\";\nlet players = [];\nexport function MakeNewCubePlayer(color = \"rgb(0,0,0)\", name = \"unkown\", SceneToGet) {\n  const group = new Group();\n  const geometry = new BoxGeometry(1, 1, 1);\n  const material = new MeshLambertMaterial({\n    color: new Color(color),\n    emissive: new Color(color)\n  });\n  const cube = new Mesh(geometry, material);\n  group.add(cube);\n  const cyclinder = new CylinderGeometry(0.3, 0.3, 0.6, 30);\n  const material2 = new MeshLambertMaterial({\n    color: 0x000000\n  });\n  const cylinderBuild = new Mesh(cyclinder, material2);\n  cylinderBuild.rotateX(Math.PI / 2 + Math.PI);\n  cylinderBuild.position.set(0, 0, -0.6);\n  group.add(cylinderBuild);\n  GenerateLabel(name, group);\n  SceneToGet.add(group);\n  group.name = name;\n  return group;\n}\n/*export function InitMainGameHandler(SceneToGet) {\n    ListenToEvent(\"NewPlayer\", (id, data) => {\n        console.log(data)\n        console.log(\"New PLyer \" + id)\n        let cube = MakeCube(data.color, data.name, SceneToGet)\n        addtoGameFeed(data?.name, \"Joined the game!\")\n\n        players[id] = cube\n    })\n}*/","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/multiplayer/MainPlayerHandler.js"],"names":["BoxGeometry","Color","CylinderGeometry","Group","Mesh","MeshLambertMaterial","ListenToEvent","GenerateLabel","players","MakeNewCubePlayer","color","name","SceneToGet","group","geometry","material","emissive","cube","add","cyclinder","material2","cylinderBuild","rotateX","Math","PI","position","set"],"mappings":"AAAA;AAEA,SAASA,WAAT,EAAsBC,KAAtB,EAA6BC,gBAA7B,EAA+CC,KAA/C,EAAsDC,IAAtD,EAA4DC,mBAA5D,QAAuF,OAAvF;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAAK,GAAG,YAAnC,EAAiDC,IAAI,GAAG,QAAxD,EAAkEC,UAAlE,EAA8E;AACjF,QAAMC,KAAK,GAAG,IAAIV,KAAJ,EAAd;AACA,QAAMW,QAAQ,GAAG,IAAId,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAjB;AACA,QAAMe,QAAQ,GAAG,IAAIV,mBAAJ,CAAwB;AAAEK,IAAAA,KAAK,EAAE,IAAIT,KAAJ,CAAUS,KAAV,CAAT;AAA2BM,IAAAA,QAAQ,EAAE,IAAIf,KAAJ,CAAUS,KAAV;AAArC,GAAxB,CAAjB;AACA,QAAMO,IAAI,GAAG,IAAIb,IAAJ,CAASU,QAAT,EAAmBC,QAAnB,CAAb;AACAF,EAAAA,KAAK,CAACK,GAAN,CAAUD,IAAV;AACA,QAAME,SAAS,GAAG,IAAIjB,gBAAJ,CAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,EAApC,CAAlB;AACA,QAAMkB,SAAS,GAAG,IAAIf,mBAAJ,CAAwB;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAxB,CAAlB;AACA,QAAMW,aAAa,GAAG,IAAIjB,IAAJ,CAASe,SAAT,EAAoBC,SAApB,CAAtB;AACAC,EAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAI,CAACC,EAAL,GAAU,CAAX,GAAgBD,IAAI,CAACC,EAA3C;AACAH,EAAAA,aAAa,CAACI,QAAd,CAAuBC,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAC,GAAlC;AACAb,EAAAA,KAAK,CAACK,GAAN,CAAUG,aAAV;AAEAd,EAAAA,aAAa,CAACI,IAAD,EAAOE,KAAP,CAAb;AACAD,EAAAA,UAAU,CAACM,GAAX,CAAeL,KAAf;AACAA,EAAAA,KAAK,CAACF,IAAN,GAAaA,IAAb;AACA,SAAOE,KAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { BoxGeometry, Color, CylinderGeometry, Group, Mesh, MeshLambertMaterial } from \"three\";\nimport { ListenToEvent } from \"../../Core-API/ConnectAPI\";\nimport { GenerateLabel } from \"../nametag\";\nlet players = []\n\nexport function MakeNewCubePlayer(color = \"rgb(0,0,0)\", name = \"unkown\", SceneToGet) {\n    const group = new Group();\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshLambertMaterial({ color: new Color(color), emissive: new Color(color) });\n    const cube = new Mesh(geometry, material);\n    group.add(cube)\n    const cyclinder = new CylinderGeometry(0.3, 0.3, 0.6, 30);\n    const material2 = new MeshLambertMaterial({ color: 0x000000 });\n    const cylinderBuild = new Mesh(cyclinder, material2);\n    cylinderBuild.rotateX((Math.PI / 2) + Math.PI)\n    cylinderBuild.position.set(0, 0, -0.6)\n    group.add(cylinderBuild)\n\n    GenerateLabel(name, group)\n    SceneToGet.add(group)\n    group.name = name\n    return group\n}\n\n/*export function InitMainGameHandler(SceneToGet) {\n    ListenToEvent(\"NewPlayer\", (id, data) => {\n        console.log(data)\n        console.log(\"New PLyer \" + id)\n        let cube = MakeCube(data.color, data.name, SceneToGet)\n        addtoGameFeed(data?.name, \"Joined the game!\")\n\n        players[id] = cube\n    })\n}*/"]},"metadata":{},"sourceType":"module"}