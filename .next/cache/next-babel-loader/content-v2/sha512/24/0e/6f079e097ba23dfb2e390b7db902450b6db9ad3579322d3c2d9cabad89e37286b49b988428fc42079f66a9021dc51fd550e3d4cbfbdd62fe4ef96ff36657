{"ast":null,"code":"import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { attachToMainEventStream } from \"../../Core-API/ConnectAPI\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { createPointLight } from \"../../Core-API/LightingManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, removeFromDayTimeHook } from \"../DayNightCycle\";\nexport class MakePlane {\n  constructor(SceneToGet, settings) {\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n    this.speed = 0;\n    this.elevatorPitch = 0;\n    this.airelonePitch = 0;\n    this.rudderPitch = 0;\n    this.checker = -1;\n  }\n\n  async loadFiles() {\n    this.plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n    this.props = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n    this.leftAirelone = await addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n    this.rightAirelone = await addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n    this.leftControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n    this.rightControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n    this.rudder = await addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n  }\n\n  CreateGroupAndPos() {\n    this.group.add(this.plane.scene);\n    this.group.add(this.props.scene);\n    this.group.add(this.leftAirelone.scene);\n    this.group.add(this.rightAirelone.scene);\n    this.group.add(this.rightControlSurface.scene);\n    this.group.add(this.leftControlSurface.scene);\n    this.group.add(this.rudder.scene);\n    this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n    this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n    this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n    this.leftControlSurface.scene.rotateY(radiants(-7));\n    this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n    this.rightControlSurface.scene.rotateY(radiants(6.8));\n    this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n    this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n    this.rudder.scene.rotateX(radiants(-22));\n    this.props.scene.position.set(0, 15, 22);\n    this.SceneToGet.add(this.group);\n    this.group.scale.set(0.05, 0.05, 0.05);\n    let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene]; // For testing \\\\\n\n    let cube = debugCube();\n    cube.position.set(60, 22.5, -10);\n    let light = createPointLight(0xff0000, 50, new Vector3(60, 22.5, -10));\n    this.group.add(cube);\n    this.group.add(light);\n    this.checker = addtoDayTimeChecker(time => {\n      console.log(time);\n    });\n    let currentEvelatorPitch = 0;\n    let airelonePitch = 0;\n    let rudderPitch = 0;\n    addToRenderSequence(\"Main\", () => {\n      let direction = new Vector3();\n      this.group.getWorldDirection(direction);\n      this.group.position.add(direction.multiplyScalar(this.speed)); //this.group.position.z += this.speed;\n\n      props.rotateZ(this.speed);\n\n      if (currentEvelatorPitch < this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(-0.01);\n        this.rightAirelone.scene.rotateX(-0.01);\n        currentEvelatorPitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateX(currentEvelatorPitch / 50 * this.speed);\n      } else if (currentEvelatorPitch > this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(0.01);\n        this.rightAirelone.scene.rotateX(0.01);\n        currentEvelatorPitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateX(currentEvelatorPitch / 50 * this.speed);\n      }\n\n      if (airelonePitch < this.airelonePitch) {\n        this.leftControlSurface.scene.rotateX(0.01);\n        this.rightControlSurface.scene.rotateX(-0.01);\n        airelonePitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateZ(-airelonePitch / 50 * this.speed);\n      } else if (airelonePitch > this.airelonePitch) {\n        this.leftControlSurface.scene.rotateX(-0.01);\n        this.rightControlSurface.scene.rotateX(0.01);\n        airelonePitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateZ(-airelonePitch / 50 * this.speed);\n      }\n\n      if (rudderPitch < this.rudderPitch) {\n        this.rudder.scene.rotateY(-0.01);\n        rudderPitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateY(rudderPitch / 50 * this.speed);\n      } else if (rudderPitch > this.rudderPitch) {\n        this.rudder.scene.rotateY(0.01);\n        rudderPitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateY(rudderPitch / 50 * this.speed);\n      }\n    }, false);\n    return this.group;\n  }\n\n  attachCameraAndControl(Camera) {\n    this.UUID = listenToConrols(({\n      wKey,\n      aKey,\n      sKey,\n      dKey,\n      upKey,\n      downKey,\n      eKey,\n      qKey,\n      shiftKey,\n      zKey,\n      xKey\n    }) => {\n      if (zKey) {\n        if (this.speed < 3) {\n          this.speed += 0.01;\n        }\n      }\n\n      if (xKey) {\n        if (this.speed > 0) {\n          this.speed -= 0.01;\n        }\n      }\n\n      if (wKey) {\n        this.elevatorPitch = 0.5;\n      } else if (sKey) {\n        this.elevatorPitch = -0.5;\n      } else {\n        this.elevatorPitch = 0;\n      }\n\n      if (qKey) {\n        this.rudderPitch = 0.3;\n      } else if (eKey) {\n        this.rudderPitch = -0.3;\n      } else {\n        this.rudderPitch = 0;\n      }\n\n      if (aKey) {\n        this.airelonePitch = 0.5;\n      } else if (dKey) {\n        this.airelonePitch = -0.5;\n      } else {\n        this.airelonePitch = 0;\n      }\n    });\n    this.group.add(Camera);\n    Camera.position.set(0, 40, -100);\n    Camera.rotateY(radiants(180));\n    Camera.rotateX(radiants(-20));\n  }\n\n  cleanUp() {\n    if (this.UUID !== undefined) {\n      CleanUpListener(this.UUID);\n    }\n\n    this.group.remove();\n\n    if (this.checker !== -1) {\n      removeFromDayTimeHook(this.checker);\n    }\n\n    return {\n      success: true\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","addGLBFile","attachToMainEventStream","debugCube","createPointLight","addToRenderSequence","listenToConrols","addtoDayTimeChecker","removeFromDayTimeHook","MakePlane","constructor","SceneToGet","settings","group","speed","elevatorPitch","airelonePitch","rudderPitch","checker","loadFiles","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","CreateGroupAndPos","add","scene","position","set","rotateY","rotateZ","rotateX","scale","cube","light","time","console","log","currentEvelatorPitch","direction","getWorldDirection","multiplyScalar","attachCameraAndControl","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","zKey","xKey","cleanUp","undefined","CleanUpListener","remove","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { attachToMainEventStream } from \"../../Core-API/ConnectAPI\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { createPointLight } from \"../../Core-API/LightingManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, removeFromDayTimeHook } from \"../DayNightCycle\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n        this.speed = 0;\n        this.elevatorPitch = 0;\n        this.airelonePitch = 0;\n        this.rudderPitch = 0;\n        this.checker = -1;\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n        this.leftControlSurface.scene.rotateY(radiants(-7));\n\n        this.rightControlSurface.scene.position.set(\n            -46.2718,\n            22.5411,\n            -13.5447\n        );\n        this.rightControlSurface.scene.rotateY(radiants(6.8));\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5));\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n        this.rudder.scene.rotateX(radiants(-22));\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene];\n        // For testing \\\\\n\n        let cube = debugCube()\n        cube.position.set(60,22.5,-10)\n        let light = createPointLight(0xff0000, 50, new Vector3(60,22.5,-10))\n        this.group.add(cube)\n        this.group.add(light)\n        this.checker = addtoDayTimeChecker((time) => {\n            console.log(time)\n        })\n\n        let currentEvelatorPitch = 0;\n        let airelonePitch = 0;\n        let rudderPitch = 0;\n        addToRenderSequence(\n            \"Main\",\n            () => {\n                let direction = new Vector3();\n                this.group.getWorldDirection(direction);\n                this.group.position.add(\n                    direction.multiplyScalar(this.speed)\n                );\n                //this.group.position.z += this.speed;\n\n                props.rotateZ(this.speed);\n                if (currentEvelatorPitch < this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(-0.01);\n                    this.rightAirelone.scene.rotateX(-0.01);\n                    currentEvelatorPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(currentEvelatorPitch / 50 * (this.speed));\n                } else if (currentEvelatorPitch > this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(0.01);\n                    this.rightAirelone.scene.rotateX(0.01);\n                    currentEvelatorPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(currentEvelatorPitch / 50* (this.speed));\n                }\n\n                if (airelonePitch < this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(0.01);\n                    this.rightControlSurface.scene.rotateX(-0.01);\n                    airelonePitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ(-airelonePitch / 50* (this.speed));\n                } else if (airelonePitch > this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(-0.01);\n                    this.rightControlSurface.scene.rotateX(0.01);\n                    airelonePitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ(-airelonePitch / 50* (this.speed));\n                }\n\n                if (rudderPitch < this.rudderPitch) {\n                    this.rudder.scene.rotateY(-0.01);\n                    rudderPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY(rudderPitch / 50* (this.speed));\n                } else if (rudderPitch > this.rudderPitch) {\n                    this.rudder.scene.rotateY(0.01);\n                    rudderPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY(rudderPitch / 50* (this.speed));\n                }\n            },\n            false\n        );\n\n        return this.group;\n    }\n    attachCameraAndControl(Camera) {\n        this.UUID = listenToConrols(\n            ({\n                wKey,\n                aKey,\n                sKey,\n                dKey,\n                upKey,\n                downKey,\n                eKey,\n                qKey,\n                shiftKey,\n                zKey,\n                xKey\n            }) => {\n                if (zKey) {\n                    if (this.speed < 3) {\n                        this.speed += 0.01;\n                    }\n                }\n                if (xKey) {\n                    if (this.speed > 0) {\n                        this.speed -= 0.01;\n                    }\n                }\n                if (wKey) {\n                    this.elevatorPitch = 0.5;\n                } else if (sKey) {\n                    this.elevatorPitch = -0.5;\n                } else {\n                    this.elevatorPitch = 0;\n                }\n                if (qKey) {\n                    this.rudderPitch = 0.3;\n                } else if (eKey) {\n                    this.rudderPitch = -0.3;\n                } else {\n                    this.rudderPitch = 0;\n                }\n\n                if (aKey) {\n                    this.airelonePitch = 0.5;\n                } else if (dKey) {\n                    this.airelonePitch = -0.5;\n                } else {\n                    this.airelonePitch = 0;\n                }\n            }\n\n        );\n        this.group.add(Camera);\n        Camera.position.set(0, 40, -100);\n        Camera.rotateY(radiants(180));\n        Camera.rotateX(radiants(-20));\n    }\n\n    cleanUp() {\n        if (this.UUID !== undefined) {\n            CleanUpListener(this.UUID);\n        }\n        this.group.remove();\n        if(this.checker !== -1){\n            removeFromDayTimeHook(this.checker)\n        }\n        return { success: true };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}