{"ast":null,"code":"import _classCallCheck from \"/home/ec2-user/environment/Alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ec2-user/environment/Alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar top = 0;\n\nvar parent = function parent(i) {\n  return (i + 1 >>> 1) - 1;\n};\n\nvar left = function left(i) {\n  return (i << 1) + 1;\n};\n\nvar right = function right(i) {\n  return i + 1 << 1;\n};\n\nexport var PriorityQueue = /*#__PURE__*/function () {\n  function PriorityQueue() {\n    var comparator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (a, b) {\n      return a > b;\n    };\n\n    _classCallCheck(this, PriorityQueue);\n\n    this._heap = [];\n    this._comparator = comparator;\n  }\n\n  _createClass(PriorityQueue, [{\n    key: \"size\",\n    value: function size() {\n      return this._heap.length;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.size() == 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this._heap[top];\n    }\n  }, {\n    key: \"push\",\n    value: function push() {\n      var _this = this;\n\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      values.forEach(function (value) {\n        _this._heap.push(value);\n\n        _this._siftUp();\n      });\n      return this.size();\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var poppedValue = this.peek();\n      var bottom = this.size() - 1;\n\n      if (bottom > top) {\n        this._swap(top, bottom);\n      }\n\n      this._heap.pop();\n\n      this._siftDown();\n\n      return poppedValue;\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(value) {\n      var replacedValue = this.peek();\n      this._heap[top] = value;\n\n      this._siftDown();\n\n      return replacedValue;\n    }\n  }, {\n    key: \"_greater\",\n    value: function _greater(i, j) {\n      return this._comparator(this._heap[i], this._heap[j]);\n    }\n  }, {\n    key: \"_swap\",\n    value: function _swap(i, j) {\n      var _ref = [this._heap[j], this._heap[i]];\n      this._heap[i] = _ref[0];\n      this._heap[j] = _ref[1];\n    }\n  }, {\n    key: \"_siftUp\",\n    value: function _siftUp() {\n      var node = this.size() - 1;\n\n      while (node > top && this._greater(node, parent(node))) {\n        this._swap(node, parent(node));\n\n        node = parent(node);\n      }\n    }\n  }, {\n    key: \"_siftDown\",\n    value: function _siftDown() {\n      var node = top;\n\n      while (left(node) < this.size() && this._greater(left(node), node) || right(node) < this.size() && this._greater(right(node), node)) {\n        var maxChild = right(node) < this.size() && this._greater(right(node), left(node)) ? right(node) : left(node);\n\n        this._swap(node, maxChild);\n\n        node = maxChild;\n      }\n    }\n  }]);\n\n  return PriorityQueue;\n}();","map":{"version":3,"sources":["/home/ec2-user/environment/Alevel_2020-2021/components/Algorithms/PriorityQueue.js"],"names":["top","parent","i","left","right","PriorityQueue","comparator","a","b","_heap","_comparator","length","size","values","forEach","value","push","_siftUp","poppedValue","peek","bottom","_swap","pop","_siftDown","replacedValue","j","node","_greater","maxChild"],"mappings":";;AAAA,IAAMA,GAAG,GAAG,CAAZ;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,CAAC;AAAA,SAAI,CAAEA,CAAC,GAAG,CAAL,KAAY,CAAb,IAAkB,CAAtB;AAAA,CAAhB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAD,CAAC;AAAA,SAAI,CAACA,CAAC,IAAI,CAAN,IAAW,CAAf;AAAA,CAAd;;AACA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAF,CAAC;AAAA,SAAKA,CAAC,GAAG,CAAL,IAAW,CAAf;AAAA,CAAf;;AAEA,WAAaG,aAAb;AACE,2BAA0C;AAAA,QAA9BC,UAA8B,uEAAjB,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,GAAGC,CAAd;AAAA,KAAiB;;AAAA;;AACxC,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,WAAL,GAAmBJ,UAAnB;AACD;;AAJH;AAAA;AAAA,2BAKS;AACL,aAAO,KAAKG,KAAL,CAAWE,MAAlB;AACD;AAPH;AAAA;AAAA,8BAQY;AACR,aAAO,KAAKC,IAAL,MAAe,CAAtB;AACD;AAVH;AAAA;AAAA,2BAWS;AACL,aAAO,KAAKH,KAAL,CAAWT,GAAX,CAAP;AACD;AAbH;AAAA;AAAA,2BAckB;AAAA;;AAAA,wCAARa,MAAQ;AAARA,QAAAA,MAAQ;AAAA;;AACdA,MAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtB,QAAA,KAAI,CAACN,KAAL,CAAWO,IAAX,CAAgBD,KAAhB;;AACA,QAAA,KAAI,CAACE,OAAL;AACD,OAHD;AAIA,aAAO,KAAKL,IAAL,EAAP;AACD;AApBH;AAAA;AAAA,0BAqBQ;AACJ,UAAMM,WAAW,GAAG,KAAKC,IAAL,EAApB;AACA,UAAMC,MAAM,GAAG,KAAKR,IAAL,KAAc,CAA7B;;AACA,UAAIQ,MAAM,GAAGpB,GAAb,EAAkB;AAChB,aAAKqB,KAAL,CAAWrB,GAAX,EAAgBoB,MAAhB;AACD;;AACD,WAAKX,KAAL,CAAWa,GAAX;;AACA,WAAKC,SAAL;;AACA,aAAOL,WAAP;AACD;AA9BH;AAAA;AAAA,4BA+BUH,KA/BV,EA+BiB;AACb,UAAMS,aAAa,GAAG,KAAKL,IAAL,EAAtB;AACA,WAAKV,KAAL,CAAWT,GAAX,IAAkBe,KAAlB;;AACA,WAAKQ,SAAL;;AACA,aAAOC,aAAP;AACD;AApCH;AAAA;AAAA,6BAqCWtB,CArCX,EAqCcuB,CArCd,EAqCiB;AACb,aAAO,KAAKf,WAAL,CAAiB,KAAKD,KAAL,CAAWP,CAAX,CAAjB,EAAgC,KAAKO,KAAL,CAAWgB,CAAX,CAAhC,CAAP;AACD;AAvCH;AAAA;AAAA,0BAwCQvB,CAxCR,EAwCWuB,CAxCX,EAwCc;AAAA,iBACuB,CAAC,KAAKhB,KAAL,CAAWgB,CAAX,CAAD,EAAgB,KAAKhB,KAAL,CAAWP,CAAX,CAAhB,CADvB;AACT,WAAKO,KAAL,CAAWP,CAAX,CADS;AACM,WAAKO,KAAL,CAAWgB,CAAX,CADN;AAEX;AA1CH;AAAA;AAAA,8BA2CY;AACR,UAAIC,IAAI,GAAG,KAAKd,IAAL,KAAc,CAAzB;;AACA,aAAOc,IAAI,GAAG1B,GAAP,IAAc,KAAK2B,QAAL,CAAcD,IAAd,EAAoBzB,MAAM,CAACyB,IAAD,CAA1B,CAArB,EAAwD;AACtD,aAAKL,KAAL,CAAWK,IAAX,EAAiBzB,MAAM,CAACyB,IAAD,CAAvB;;AACAA,QAAAA,IAAI,GAAGzB,MAAM,CAACyB,IAAD,CAAb;AACD;AACF;AAjDH;AAAA;AAAA,gCAkDc;AACV,UAAIA,IAAI,GAAG1B,GAAX;;AACA,aACGG,IAAI,CAACuB,IAAD,CAAJ,GAAa,KAAKd,IAAL,EAAb,IAA4B,KAAKe,QAAL,CAAcxB,IAAI,CAACuB,IAAD,CAAlB,EAA0BA,IAA1B,CAA7B,IACCtB,KAAK,CAACsB,IAAD,CAAL,GAAc,KAAKd,IAAL,EAAd,IAA6B,KAAKe,QAAL,CAAcvB,KAAK,CAACsB,IAAD,CAAnB,EAA2BA,IAA3B,CAFhC,EAGE;AACA,YAAIE,QAAQ,GAAIxB,KAAK,CAACsB,IAAD,CAAL,GAAc,KAAKd,IAAL,EAAd,IAA6B,KAAKe,QAAL,CAAcvB,KAAK,CAACsB,IAAD,CAAnB,EAA2BvB,IAAI,CAACuB,IAAD,CAA/B,CAA9B,GAAwEtB,KAAK,CAACsB,IAAD,CAA7E,GAAsFvB,IAAI,CAACuB,IAAD,CAAzG;;AACA,aAAKL,KAAL,CAAWK,IAAX,EAAiBE,QAAjB;;AACAF,QAAAA,IAAI,GAAGE,QAAP;AACD;AACF;AA5DH;;AAAA;AAAA","sourcesContent":["const top = 0;\nconst parent = i => ((i + 1) >>> 1) - 1;\nconst left = i => (i << 1) + 1;\nconst right = i => (i + 1) << 1;\n\nexport class PriorityQueue {\n  constructor(comparator = (a, b) => a > b) {\n    this._heap = [];\n    this._comparator = comparator;\n  }\n  size() {\n    return this._heap.length;\n  }\n  isEmpty() {\n    return this.size() == 0;\n  }\n  peek() {\n    return this._heap[top];\n  }\n  push(...values) {\n    values.forEach(value => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  }\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  }\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[top] = value;\n    this._siftDown();\n    return replacedValue;\n  }\n  _greater(i, j) {\n    return this._comparator(this._heap[i], this._heap[j]);\n  }\n  _swap(i, j) {\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\n  }\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  }\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n      (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      let maxChild = (right(node) < this.size() && this._greater(right(node), left(node))) ? right(node) : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}