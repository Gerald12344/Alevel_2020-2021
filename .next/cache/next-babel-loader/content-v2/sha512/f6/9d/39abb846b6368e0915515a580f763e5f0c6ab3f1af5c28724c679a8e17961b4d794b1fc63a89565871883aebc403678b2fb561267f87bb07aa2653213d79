{"ast":null,"code":"// Written By Harvey Randall \\\\\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"; //Functional Dependencies\n\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { GenerateClouds } from \"./clouds\";\nimport { ControlHandlerInit, ControlHandlerUpdate } from \"./controls\";\nimport { CreateDayNightCycle } from \"./DayNightCycle\";\nimport { GenerateTerrain } from \"./ProceduleTerrain\"; //import { ImportOBJ } from \"../Core-API/OBJHandler\"\n\nvar debug = true;\nexport function GenerateMainScene(SceneToGet, Renders, document, seed, child2, Camera) {\n  var clouds = [];\n\n  for (var i = 0; i < 40; i++) {\n    clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n  }\n\n  var daynight = new CreateDayNightCycle(SceneToGet, Renders);\n  GenerateTerrain(seed, SceneToGet);\n  ControlHandlerInit(document, child2);\n\n  if (debug) {\n    var planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n    planeGeometry.rotateX(Math.PI / 2);\n    var planeMaterial = new MeshStandardMaterial({\n      color: 0x567d46,\n      side: DoubleSide\n    });\n    var plane = new Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -0.5;\n    SceneToGet.add(plane);\n    var gridHelper = new GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n  } //ImportOBJ(\"Airplane\", SceneToGet)\n  // Add all updating parts to a function\n\n\n  addToRenderSequence(\"Main\", function () {\n    clouds.forEach(function (e, i) {\n      e.update();\n    });\n  }, true);\n  addToRenderSequence(\"Main\", function () {\n    return ControlHandlerUpdate(Camera);\n  });\n  addToRenderSequence(\"Main\", function () {\n    return daynight.update();\n  });\n}\n_c = GenerateMainScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateMainScene\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/MainSceneHandler.js"],"names":["addToRenderSequence","DoubleSide","GridHelper","Mesh","MeshStandardMaterial","PlaneGeometry","Vector3","GenerateClouds","ControlHandlerInit","ControlHandlerUpdate","CreateDayNightCycle","GenerateTerrain","debug","GenerateMainScene","SceneToGet","Renders","document","seed","child2","Camera","clouds","i","push","Math","random","daynight","planeGeometry","rotateX","PI","planeMaterial","color","side","plane","position","y","add","gridHelper","forEach","e","update"],"mappings":"AAAA;AAEA;AACA,SAASA,mBAAT,QAAoC,8BAApC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,IAAjC,EAAuCC,oBAAvC,EAA6DC,aAA7D,EAA4EC,OAA5E,QAA2F,OAA3F;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,YAAzD;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CACA;;AAEA,IAAIC,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0DC,IAA1D,EAAgEC,MAAhE,EAAwEC,MAAxE,EAA+E;AAElF,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,IAAAA,MAAM,CAACE,IAAP,CAAY,IAAIf,cAAJ,CAAmB,IAAID,OAAJ,CAAaiB,IAAI,CAACC,MAAL,KAAgB,GAAjB,GAAwB,GAApC,EAAyC,KAAKD,IAAI,CAACC,MAAL,KAAgB,EAA9D,EAAmED,IAAI,CAACC,MAAL,KAAgB,GAAjB,GAAwB,GAA1F,CAAnB,EAAmHV,UAAnH,EAA+HS,IAAI,CAACC,MAAL,KAAgB,GAA/I,EAAoJD,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAxK,CAAZ;AACH;;AAED,MAAIC,QAAQ,GAAG,IAAIf,mBAAJ,CAAwBI,UAAxB,EAAoCC,OAApC,CAAf;AACAJ,EAAAA,eAAe,CAACM,IAAD,EAAOH,UAAP,CAAf;AACAN,EAAAA,kBAAkB,CAACQ,QAAD,EAAWE,MAAX,CAAlB;;AAEA,MAAGN,KAAH,EAAS;AACL,QAAMc,aAAa,GAAG,IAAIrB,aAAJ,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAtB;AACAqB,IAAAA,aAAa,CAACC,OAAd,CAAsBJ,IAAI,CAACK,EAAL,GAAU,CAAhC;AACA,QAAMC,aAAa,GAAG,IAAIzB,oBAAJ,CAAyB;AAAE0B,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE9B;AAAzB,KAAzB,CAAtB;AACA,QAAM+B,KAAK,GAAG,IAAI7B,IAAJ,CAASuB,aAAT,EAAwBG,aAAxB,CAAd;AACAG,IAAAA,KAAK,CAACC,QAAN,CAAeC,CAAf,GAAmB,CAAC,GAApB;AACApB,IAAAA,UAAU,CAACqB,GAAX,CAAeH,KAAf;AACA,QAAMI,UAAU,GAAG,IAAIlC,UAAJ,CAAe,EAAf,EAAmB,EAAnB,CAAnB;AACAkC,IAAAA,UAAU,CAACH,QAAX,CAAoBC,CAApB,GAAwB,CAAC,CAAzB;AACApB,IAAAA,UAAU,CAACqB,GAAX,CAAeC,UAAf;AACH,GArBiF,CAuBlF;AAEA;;;AACApC,EAAAA,mBAAmB,CAAC,MAAD,EAAS,YAAM;AAC9BoB,IAAAA,MAAM,CAACiB,OAAP,CAAe,UAACC,CAAD,EAAIjB,CAAJ,EAAU;AACrBiB,MAAAA,CAAC,CAACC,MAAF;AACH,KAFD;AAGH,GAJkB,EAIhB,IAJgB,CAAnB;AAMAvC,EAAAA,mBAAmB,CAAC,MAAD,EAAS;AAAA,WAAMS,oBAAoB,CAACU,MAAD,CAA1B;AAAA,GAAT,CAAnB;AACAnB,EAAAA,mBAAmB,CAAC,MAAD,EAAS;AAAA,WAAOyB,QAAQ,CAACc,MAAT,EAAP;AAAA,GAAT,CAAnB;AAEH;KAnCe1B,iB","sourcesContent":["// Written By Harvey Randall \\\\\n\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"\n\n//Functional Dependencies\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\"\nimport { GenerateClouds } from \"./clouds\"\nimport { ControlHandlerInit, ControlHandlerUpdate } from \"./controls\"\nimport { CreateDayNightCycle } from \"./DayNightCycle\"\nimport { GenerateTerrain } from \"./ProceduleTerrain\"\n//import { ImportOBJ } from \"../Core-API/OBJHandler\"\n\nlet debug = true\n\nexport function GenerateMainScene(SceneToGet, Renders, document, seed, child2, Camera){\n\n    let clouds = []\n    for (let i = 0; i < 40; i++) {\n        clouds.push(new GenerateClouds(new Vector3((Math.random() * 300) - 300, 80 + Math.random() * 20, (Math.random() * 600) - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1))\n    }\n\n    let daynight = new CreateDayNightCycle(SceneToGet, Renders)\n    GenerateTerrain(seed, SceneToGet)\n    ControlHandlerInit(document, child2)\n\n    if(debug){\n        const planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n        planeGeometry.rotateX(Math.PI / 2)\n        const planeMaterial = new MeshStandardMaterial({ color: 0x567d46, side: DoubleSide })\n        const plane = new Mesh(planeGeometry, planeMaterial);\n        plane.position.y = -0.5\n        SceneToGet.add(plane);\n        const gridHelper = new GridHelper(50, 50);\n        gridHelper.position.y = -1;\n        SceneToGet.add(gridHelper);\n    }\n\n    //ImportOBJ(\"Airplane\", SceneToGet)\n\n    // Add all updating parts to a function\n    addToRenderSequence(\"Main\", () => {\n        clouds.forEach((e, i) => {\n            e.update()\n        })\n    }, true)\n\n    addToRenderSequence(\"Main\", () => ControlHandlerUpdate(Camera))\n    addToRenderSequence(\"Main\", () =>  daynight.update())\n\n}"]},"metadata":{},"sourceType":"module"}