{"ast":null,"code":"import _classCallCheck from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as THREE from 'three';\nexport var GenerateClouds = /*#__PURE__*/function () {\n  function GenerateClouds(pos, scene, speed, scale) {\n    _classCallCheck(this, GenerateClouds);\n\n    var group = new THREE.Group();\n    var tuft1 = new THREE.SphereBufferGeometry(1.5 * scale, 7 * scale, 11);\n    tuft1.translate(-2 * scale, 0, 0);\n    var tuft3 = new THREE.SphereBufferGeometry(1.5 * scale, 7 * scale, 11);\n    tuft3.translate(2 * scale, 0, 0);\n    var tuft2 = new THREE.SphereBufferGeometry(2.0 * scale, 7 * scale, 11);\n    tuft2.translate(0, 0, 0);\n    var cloud = new THREE.Mesh(tuft1, new THREE.MeshPhongMaterial({\n      color: 'white',\n      flatShading: true\n    }));\n    var cloud1 = new THREE.Mesh(tuft2, new THREE.MeshPhongMaterial({\n      color: 'white',\n      flatShading: true\n    }));\n    var cloud2 = new THREE.Mesh(tuft3, new THREE.MeshPhongMaterial({\n      color: 'white',\n      flatShading: true\n    }));\n    group.add(cloud);\n    group.add(cloud1);\n    group.add(cloud2);\n    scene.add(group);\n    group.castShadow = true;\n    group.receiveShadow = true;\n    group.position.x = pos.x;\n    group.position.y = pos.y;\n    group.position.z = pos.z;\n    this.grass = group;\n    this.speed = speed;\n    this.pos = pos;\n  }\n\n  _createClass(GenerateClouds, [{\n    key: \"update\",\n    value: function update() {\n      var geos = this.grass;\n      geos.position.x += this.speed;\n\n      if (geos.position.x > 400) {\n        geos.position.x = this.pos.x;\n      }\n    }\n  }]);\n\n  return GenerateClouds;\n}();","map":null,"metadata":{},"sourceType":"module"}