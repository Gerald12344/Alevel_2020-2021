{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nexport var MakePlane = /*#__PURE__*/function () {\n  function MakePlane(SceneToGet, settings) {\n    _classCallCheck(this, MakePlane);\n\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n    this.speed = 0;\n    this.elevatorPitch = 0;\n    this.airelonePitch = 0;\n    this.attachCamera = false;\n    this.cube = undefined;\n  }\n\n  _createClass(MakePlane, [{\n    key: \"loadFiles\",\n    value: function () {\n      var _loadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n\n              case 2:\n                this.plane = _context.sent;\n                _context.next = 5;\n                return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n\n              case 5:\n                this.props = _context.sent;\n                _context.next = 8;\n                return addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n\n              case 8:\n                this.leftAirelone = _context.sent;\n                _context.next = 11;\n                return addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n\n              case 11:\n                this.rightAirelone = _context.sent;\n                _context.next = 14;\n                return addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n\n              case 14:\n                this.leftControlSurface = _context.sent;\n                _context.next = 17;\n                return addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n\n              case 17:\n                this.rightControlSurface = _context.sent;\n                _context.next = 20;\n                return addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n\n              case 20:\n                this.rudder = _context.sent;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadFiles() {\n        return _loadFiles.apply(this, arguments);\n      }\n\n      return loadFiles;\n    }()\n  }, {\n    key: \"CreateGroupAndPos\",\n    value: function CreateGroupAndPos() {\n      var _this = this;\n\n      this.group.add(this.plane.scene);\n      this.group.add(this.props.scene);\n      this.group.add(this.leftAirelone.scene);\n      this.group.add(this.rightAirelone.scene);\n      this.group.add(this.rightControlSurface.scene);\n      this.group.add(this.leftControlSurface.scene);\n      this.group.add(this.rudder.scene);\n      this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n      this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n      this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n      this.leftControlSurface.scene.rotateY(radiants(-7));\n      this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n      this.rightControlSurface.scene.rotateY(radiants(6.8));\n      this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n      this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n      this.rudder.scene.rotateX(radiants(-22));\n      this.props.scene.position.set(0, 15, 22);\n      this.SceneToGet.add(this.group);\n      this.group.scale.set(0.05, 0.05, 0.05);\n      var _ref = [this.props.scene, this.leftAirelone.scene],\n          props = _ref[0],\n          leftAirelone = _ref[1];\n      var currentEvelatorPitch = 0;\n      var airelonePitch = 0; // For testing \\\\\n\n      addToRenderSequence(\"Main\", function () {\n        _this.group.position.z += _this.speed;\n        props.rotateZ(_this.speed);\n\n        if (currentEvelatorPitch < _this.elevatorPitch) {\n          _this.leftAirelone.scene.rotateX(0.01);\n\n          _this.rightAirelone.scene.rotateX(0.01);\n\n          currentEvelatorPitch += 0.01;\n        } else if (currentEvelatorPitch > _this.elevatorPitch) {\n          _this.leftAirelone.scene.rotateX(-0.01);\n\n          _this.rightAirelone.scene.rotateX(-0.01);\n\n          currentEvelatorPitch -= 0.01;\n        }\n\n        if (airelonePitch < _this.airelonePitch) {\n          _this.leftControlSurface.scene.rotateX(0.01);\n\n          _this.rightControlSurface.scene.rotateX(-0.01);\n\n          airelonePitch += 0.01;\n        } else if (airelonePitch > _this.airelonePitch) {\n          _this.leftControlSurface.scene.rotateX(-0.01);\n\n          _this.rightControlSurface.scene.rotateX(0.01);\n\n          airelonePitch -= 0.01;\n        }\n      }, false);\n      return this.group;\n    }\n  }, {\n    key: \"attachCameraAndControl\",\n    value: function attachCameraAndControl(Camera) {\n      var _this2 = this;\n\n      this.UUID = listenToConrols(function (_ref2) {\n        var wKey = _ref2.wKey,\n            aKey = _ref2.aKey,\n            sKey = _ref2.sKey,\n            dKey = _ref2.dKey,\n            upKey = _ref2.upKey,\n            downKey = _ref2.downKey,\n            eKey = _ref2.eKey,\n            qKey = _ref2.qKey,\n            shiftKey = _ref2.shiftKey;\n\n        if (eKey) {\n          if (_this2.speed < 3) {\n            _this2.speed += 0.01;\n          }\n        }\n\n        if (qKey) {\n          if (_this2.speed > 0) {\n            _this2.speed -= 0.01;\n          }\n        }\n\n        if (wKey) {\n          _this2.elevatorPitch = 0.5;\n        } else if (sKey) {\n          _this2.elevatorPitch = -0.5;\n        } else {\n          _this2.elevatorPitch = 0;\n        }\n\n        if (aKey) {\n          _this2.airelonePitch = 0.5;\n        } else if (dKey) {\n          _this2.airelonePitch = -0.5;\n        } else {\n          _this2.airelonePitch = 0;\n        }\n      });\n      var cube = debugCube();\n      cube.visible = false;\n      cube.position.set(0, 40, -100);\n      cube.rotateY(radiants(180));\n      cube.rotateX(radiants(-20));\n      this.cube = cube;\n      this.group.add(cube);\n      this.attachCamera = true;\n      addToRenderSequence(\"Main\", function () {\n        var pos = cube.position.clone().setFromMatrixPosition(cube.matrixWorld);\n        var rot = cube.getWorldQuaternion(Camera.rotation);\n        Camera.position.set(pos.x, pos.y, pos.z);\n      });\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function cleanUp() {\n      if (this.UUID !== undefined) {\n        CleanUpListener(this.UUID);\n      }\n\n      this.group.remove();\n      return {\n        success: true\n      };\n    }\n  }, {\n    key: \"updatePositions\",\n    value: function updatePositions() {\n      var _this3 = this;\n\n      addToRenderSequence(\"Main\", function () {\n        _this3.group.position.z += _this3.speed;\n\n        if (_this3.attachCamera) {}\n\n        props.rotateZ(_this3.speed);\n\n        if (currentEvelatorPitch < _this3.elevatorPitch) {\n          _this3.leftAirelone.scene.rotateX(0.01);\n\n          _this3.rightAirelone.scene.rotateX(0.01);\n\n          currentEvelatorPitch += 0.01;\n        } else if (currentEvelatorPitch > _this3.elevatorPitch) {\n          _this3.leftAirelone.scene.rotateX(-0.01);\n\n          _this3.rightAirelone.scene.rotateX(-0.01);\n\n          currentEvelatorPitch -= 0.01;\n        }\n\n        if (airelonePitch < _this3.airelonePitch) {\n          _this3.leftControlSurface.scene.rotateX(0.01);\n\n          _this3.rightControlSurface.scene.rotateX(-0.01);\n\n          airelonePitch += 0.01;\n        } else if (airelonePitch > _this3.airelonePitch) {\n          _this3.leftControlSurface.scene.rotateX(-0.01);\n\n          _this3.rightControlSurface.scene.rotateX(0.01);\n\n          airelonePitch -= 0.01;\n        }\n      }, false);\n    }\n  }]);\n\n  return MakePlane;\n}();","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","addGLBFile","debugCube","addToRenderSequence","listenToConrols","MakePlane","SceneToGet","settings","group","speed","elevatorPitch","airelonePitch","attachCamera","cube","undefined","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","add","scene","position","set","rotateY","rotateZ","rotateX","scale","currentEvelatorPitch","z","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","visible","pos","clone","setFromMatrixPosition","matrixWorld","rot","getWorldQuaternion","rotation","x","y","CleanUpListener","remove","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n        this.speed = 0;\n        this.elevatorPitch = 0;\n        this.airelonePitch = 0;\n        this.attachCamera = false;\n        this.cube = undefined;\n    }   \n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541)\n        this.leftControlSurface.scene.rotateY(radiants(-7))\n\n        this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447)\n        this.rightControlSurface.scene.rotateY(radiants(6.8))\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5))\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17)\n        this.rudder.scene.rotateX(radiants(-22))\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene]\n\n        let currentEvelatorPitch = 0\n        let airelonePitch = 0;\n        // For testing \\\\\n        addToRenderSequence(\"Main\", () => {\n            this.group.position.z += this.speed\n            props.rotateZ(this.speed);\n            if(currentEvelatorPitch < this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(0.01)\n                this.rightAirelone.scene.rotateX(0.01)\n                currentEvelatorPitch += 0.01\n            }else if(currentEvelatorPitch > this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(-0.01)\n                this.rightAirelone.scene.rotateX(-0.01)\n                currentEvelatorPitch -= 0.01\n            }\n\n            if(airelonePitch < this.airelonePitch){\n                this.leftControlSurface.scene.rotateX(0.01)\n                this.rightControlSurface.scene.rotateX(-0.01)\n                airelonePitch += 0.01\n            }else if(airelonePitch > this.airelonePitch){\n                this.leftControlSurface.scene.rotateX(-0.01)\n                this.rightControlSurface.scene.rotateX(0.01)\n                airelonePitch -= 0.01\n            }\n        }, false);\n\n        return this.group\n    }\n    attachCameraAndControl(Camera){\n        this.UUID = listenToConrols(({wKey, aKey, sKey, dKey, upKey, downKey, eKey, qKey, shiftKey}) => {\n            if(eKey){\n                if(this.speed < 3){\n                  this.speed += 0.01  \n                }\n            }\n            if(qKey){\n                if(this.speed > 0 ){\n                  this.speed -= 0.01  \n                }\n            }\n            if(wKey){\n                this.elevatorPitch = 0.5\n            }else if(sKey){\n                this.elevatorPitch = -0.5\n            }else{\n                this.elevatorPitch = 0\n            }\n\n            if(aKey){\n                this.airelonePitch = 0.5\n            }else if(dKey){\n                this.airelonePitch = -0.5\n            }else{\n                this.airelonePitch = 0\n            }\n        })\n        let cube = debugCube()\n        cube.visible = false\n        cube.position.set(0,40,-100)\n        cube.rotateY(radiants(180))\n        cube.rotateX(radiants(-20))\n        this.cube = cube\n        this.group.add(cube)\n        this.attachCamera = true;\n        \n        addToRenderSequence(\"Main\", () => {\n            let pos = cube.position.clone().setFromMatrixPosition( cube.matrixWorld)\n            let rot = cube.getWorldQuaternion(Camera.rotation)\n            Camera.position.set(pos.x,pos.y,pos.z)\n        })\n    }\n\n    cleanUp(){\n        if(this.UUID !== undefined){\n            CleanUpListener(this.UUID)\n        }\n        this.group.remove()\n        return {success:true}\n    }\n\n    updatePositions(){\n        addToRenderSequence(\"Main\", () => {\n            this.group.position.z += this.speed\n            if(this.attachCamera){\n\n            }\n\n            props.rotateZ(this.speed);\n            if(currentEvelatorPitch < this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(0.01)\n                this.rightAirelone.scene.rotateX(0.01)\n                currentEvelatorPitch += 0.01\n            }else if(currentEvelatorPitch > this.elevatorPitch){\n                this.leftAirelone.scene.rotateX(-0.01)\n                this.rightAirelone.scene.rotateX(-0.01)\n                currentEvelatorPitch -= 0.01\n            }\n\n            if(airelonePitch < this.airelonePitch){\n                this.leftControlSurface.scene.rotateX(0.01)\n                this.rightControlSurface.scene.rotateX(-0.01)\n                airelonePitch += 0.01\n            }else if(airelonePitch > this.airelonePitch){\n                this.leftControlSurface.scene.rotateX(-0.01)\n                this.rightControlSurface.scene.rotateX(0.01)\n                airelonePitch -= 0.01\n            }\n        }, false);\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}