{"ast":null,"code":"// Written By Harvey Randall \\\\\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"; //Functional Dependencies\n\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { generateTerrain } from \"../gameFundalmentals/ProceduleTerrain\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { GenerateTrees } from \"../gameFundalmentals/staticAssets/treeBuilder\";\nlet debug = true;\nexport async function generateMainScene(SceneToGet, Renders, document, seed, child2, Camera) {\n  let clouds = [];\n\n  for (let i = 0; i < 40; i++) {\n    clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n  }\n\n  let daynight = new CreateDayNightCycle(SceneToGet, Renders);\n  generateTerrain(seed, SceneToGet);\n  controlHandlerInit(document, child2);\n\n  if (debug) {\n    const planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n    planeGeometry.rotateX(Math.PI / 2);\n    const planeMaterial = new MeshStandardMaterial({\n      color: \"#567d46\",\n      side: DoubleSide\n    });\n    const plane = new Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -0.5;\n    SceneToGet.add(plane);\n    const gridHelper = new GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n  } // Add all updating parts to a function\n\n\n  addToRenderSequence(\"Main\", () => {\n    clouds.forEach((e, i) => {\n      e.update();\n    });\n  }, true);\n  let newPlane = new MakePlane(SceneToGet);\n  await newPlane.loadFiles();\n  newPlane.CreateGroupAndPos();\n  newPlane.attachCameraAndControl(Camera);\n  GenerateTrees(50); //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n\n  addToRenderSequence(\"Main\", () => daynight.update());\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Scenes/MainSceneHandler.js"],"names":["addToRenderSequence","DoubleSide","GridHelper","Mesh","MeshStandardMaterial","PlaneGeometry","Vector3","GenerateClouds","controlHandlerInit","controlHandlerUpdate","CreateDayNightCycle","generateTerrain","MakePlane","GenerateTrees","debug","generateMainScene","SceneToGet","Renders","document","seed","child2","Camera","clouds","i","push","Math","random","daynight","planeGeometry","rotateX","PI","planeMaterial","color","side","plane","position","y","add","gridHelper","forEach","e","update","newPlane","loadFiles","CreateGroupAndPos","attachCameraAndControl"],"mappings":"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","sourcesContent":["// Written By Harvey Randall \\\\\n\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\";\n\n//Functional Dependencies\nimport {\n    DoubleSide,\n    GridHelper,\n    Mesh,\n    MeshStandardMaterial,\n    PlaneGeometry,\n    Vector3,\n} from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { generateTerrain } from \"../gameFundalmentals/ProceduleTerrain\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { GenerateTrees } from \"../gameFundalmentals/staticAssets/treeBuilder\";\n\nlet debug = true;\n\nexport async function generateMainScene(\n    SceneToGet,\n    Renders,\n    document,\n    seed,\n    child2,\n    Camera\n) {\n    let clouds = [];\n    for (let i = 0; i < 40; i++) {\n        clouds.push(\n            new GenerateClouds(\n                new Vector3(\n                    Math.random() * 300 - 300,\n                    80 + Math.random() * 20,\n                    Math.random() * 600 - 400\n                ),\n                SceneToGet,\n                Math.random() * 0.2,\n                Math.random() * 6 + 1\n            )\n        );\n    }\n\n    let daynight = new CreateDayNightCycle(SceneToGet, Renders);\n    generateTerrain(seed, SceneToGet);\n    controlHandlerInit(document, child2);\n\n    if (debug) {\n        const planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n        planeGeometry.rotateX(Math.PI / 2);\n        const planeMaterial = new MeshStandardMaterial({\n            color: \"#567d46\",\n            side: DoubleSide,\n        });\n        const plane = new Mesh(planeGeometry, planeMaterial);\n        plane.position.y = -0.5;\n        SceneToGet.add(plane);\n        const gridHelper = new GridHelper(50, 50);\n        gridHelper.position.y = -1;\n        SceneToGet.add(gridHelper);\n    }\n\n\n    // Add all updating parts to a function\n    addToRenderSequence(\n        \"Main\",\n        () => {\n            clouds.forEach((e, i) => {\n                e.update();\n            });\n        },\n        true\n    );\n    let newPlane = new MakePlane(SceneToGet)\n    await newPlane.loadFiles()\n    newPlane.CreateGroupAndPos()\n    newPlane.attachCameraAndControl(Camera)\n\n    GenerateTrees(50)\n\n    //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n    addToRenderSequence(\"Main\", () => daynight.update());\n}\n"]},"metadata":{},"sourceType":"module"}