{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  useEffect(() => {\n    if (child === undefined) return;\n    let SceneToGet = new Scene();\n    let Renders = new WebGLRenderer();\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new BoxGeometry(1, 1, 1);\n    var material = new MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new Mesh(geometry, material);\n    SceneToGet.add(cube);\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    Camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      Renders.render(SceneToGet, Camera);\n    };\n\n    animate();\n  }, [child]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","BoxGeometry","Mesh","MeshBasicMaterial","PerspectiveCamera","Scene","WebGLRenderer","render","child","setChild","undefined","SceneToGet","Renders","setSize","window","innerWidth","innerHeight","appendChild","domElement","geometry","material","color","cube","add","Camera","position","z","animate","requestAnimationFrame","rotation","x","y","ref"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,KAAlE,EAAyEC,aAAzE,QAA8F,OAA9F;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAACU,SAAD,CAAlC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,KAAK,KAAKE,SAAd,EAAyB;AAEzB,QAAIC,UAAU,GAAG,IAAIN,KAAJ,EAAjB;AACA,QAAIO,OAAO,GAAG,IAAIN,aAAJ,EAAd;AAGAM,IAAAA,OAAO,CAACC,OAAR,CAAgBC,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACE,WAA1C;AACAR,IAAAA,KAAK,CAACS,WAAN,CAAkBL,OAAO,CAACM,UAA1B;AAEA,QAAIC,QAAQ,GAAG,IAAIlB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAf;AACA,QAAImB,QAAQ,GAAG,IAAIjB,iBAAJ,CAAsB;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAtB,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIpB,IAAJ,CAASiB,QAAT,EAAmBC,QAAnB,CAAX;AACAT,IAAAA,UAAU,CAACY,GAAX,CAAeD,IAAf;AACA,QAAIE,MAAM,GAAG,IAAIpB,iBAAJ,CAAsB,EAAtB,EAA0BU,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAArD,EAAkE,GAAlE,EAAuE,IAAvE,CAAb;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACtBC,MAAAA,qBAAqB,CAACD,OAAD,CAArB;AACAL,MAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAR,MAAAA,IAAI,CAACO,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACAnB,MAAAA,OAAO,CAACL,MAAR,CAAeI,UAAf,EAA2Ba,MAA3B;AACH,KALD;;AAMAG,IAAAA,OAAO;AACV,GAvBQ,EAuBN,CAACnB,KAAD,CAvBM,CAAT;AAyBA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEwB,GAAG,IAAKvB,QAAQ,CAACuB,GAAD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    useEffect(() => {\n        if (child === undefined) return;\n\n        let SceneToGet = new Scene() \n        let Renders = new WebGLRenderer()\n\n\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new BoxGeometry(1, 1, 1);\n        var material = new MeshBasicMaterial({ color: 0x00ff00 });\n        var cube = new Mesh(geometry, material);\n        SceneToGet.add(cube);\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        Camera.position.z = 5;\n        var animate = function () {\n            requestAnimationFrame(animate);\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            Renders.render(SceneToGet, Camera);\n        };\n        animate();\n    }, [child])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}