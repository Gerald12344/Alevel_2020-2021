{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Group, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nexport function MakePlane(_x, _x2) {\n  return _MakePlane.apply(this, arguments);\n}\n_c2 = MakePlane;\n\nfunction _MakePlane() {\n  _MakePlane = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SceneToGet, settings) {\n    var plane, blades, group;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", SceneToGet);\n\n          case 3:\n            plane = _context.sent;\n            _context.next = 6;\n            return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", SceneToGet);\n\n          case 6:\n            blades = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 13:\n            group = new Group();\n            group.add(plane.scene);\n            group.add(blades.scene);\n            blades.scene.position.set(0, 15, 22);\n            SceneToGet.add(group);\n            group.scale.set(0.05, 0.05, 0.05); //console.log(blades.scene)\n\n            addToRenderSequence(\"Main\", function () {\n              blades.scene.rotateZ(10);\n            });\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n  return _MakePlane.apply(this, arguments);\n}\n\n_c = MakePlane;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MakePlane\");\n$RefreshReg$(_c2, \"MakePlane\");","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","Vector3","addGLBFile","addToRenderSequence","MakePlane","SceneToGet","settings","plane","blades","console","log","group","add","scene","position","set","scale","rotateZ"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAGA,gBAAsBC,SAAtB;AAAA;AAAA;MAAsBA,S;;;wEAAf,iBAAyBC,UAAzB,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIeJ,UAAU,CAAC,gCAAD,EAAoCG,UAApC,CAJzB;;AAAA;AAICE,YAAAA,KAJD;AAAA;AAAA,mBAKgBL,UAAU,CAAC,iCAAD,EAAqCG,UAArC,CAL1B;;AAAA;AAKCG,YAAAA,MALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOCC,YAAAA,OAAO,CAACC,GAAR;AAPD,6CAQQ,KARR;;AAAA;AAUCC,YAAAA,KAVD,GAUS,IAAIX,KAAJ,EAVT;AAWHW,YAAAA,KAAK,CAACC,GAAN,CAAUL,KAAK,CAACM,KAAhB;AACAF,YAAAA,KAAK,CAACC,GAAN,CAAUJ,MAAM,CAACK,KAAjB;AACAL,YAAAA,MAAM,CAACK,KAAP,CAAaC,QAAb,CAAsBC,GAAtB,CAA0B,CAA1B,EAA4B,EAA5B,EAA+B,EAA/B;AACAV,YAAAA,UAAU,CAACO,GAAX,CAAeD,KAAf;AACAA,YAAAA,KAAK,CAACK,KAAN,CAAYD,GAAZ,CAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAfG,CAgBH;;AAEAZ,YAAAA,mBAAmB,CAAC,MAAD,EAAS,YAAM;AAC9BK,cAAAA,MAAM,CAACK,KAAP,CAAaI,OAAb,CAAqB,EAArB;AACH,aAFkB,CAAnB;;AAlBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeb,S","sourcesContent":["import { Group, Vector3 } from \"three\"\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\"\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\"\n\n\nexport async function MakePlane(SceneToGet, settings){\n    let plane\n    let blades\n    try{\n        plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\",  SceneToGet)\n        blades = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\",  SceneToGet)\n    }catch(e){\n        console.log(e)\n        return false\n    }\n    let group = new Group()\n    group.add(plane.scene)\n    group.add(blades.scene)\n    blades.scene.position.set(0,15,22)\n    SceneToGet.add(group)\n    group.scale.set(0.05,0.05,0.05)\n    //console.log(blades.scene)\n\n    addToRenderSequence(\"Main\", () => {\n        blades.scene.rotateZ(10) \n    })\n}"]},"metadata":{},"sourceType":"module"}