{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nexport var MakePlane = /*#__PURE__*/function () {\n  function MakePlane(SceneToGet, settings) {\n    _classCallCheck(this, MakePlane);\n\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n  }\n\n  _createClass(MakePlane, [{\n    key: \"loadFiles\",\n    value: function () {\n      var _loadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n\n              case 2:\n                this.plane = _context.sent;\n                _context.next = 5;\n                return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n\n              case 5:\n                this.props = _context.sent;\n                _context.next = 8;\n                return addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n\n              case 8:\n                this.leftAirelone = _context.sent;\n                _context.next = 11;\n                return addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n\n              case 11:\n                this.rightAirelone = _context.sent;\n                _context.next = 14;\n                return addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n\n              case 14:\n                this.leftControlSurface = _context.sent;\n                _context.next = 17;\n                return addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n\n              case 17:\n                this.rightControlSurface = _context.sent;\n                _context.next = 20;\n                return addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n\n              case 20:\n                this.rudder = _context.sent;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadFiles() {\n        return _loadFiles.apply(this, arguments);\n      }\n\n      return loadFiles;\n    }()\n  }, {\n    key: \"CreateGroupAndPos\",\n    value: function CreateGroupAndPos() {\n      var _this = this;\n\n      this.group.add(this.plane.scene);\n      this.group.add(this.props.scene);\n      this.group.add(this.leftAirelone.scene);\n      this.group.add(this.rightAirelone.scene);\n      this.group.add(this.rightControlSurface.scene);\n      this.group.add(this.leftControlSurface.scene);\n      this.group.add(this.rudder.scene);\n      this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n      this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n      this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n      this.leftControlSurface.scene.rotateY(radiants(-7));\n      this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n      this.rightControlSurface.scene.rotateY(radiants(6.8));\n      this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n      this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n      this.rudder.scene.rotateX(radiants(-22));\n      this.props.scene.position.set(0, 15, 22);\n      this.SceneToGet.add(this.group);\n      this.group.scale.set(0.05, 0.05, 0.05);\n      var _ref = [this.props.scene, this.leftAirelone.scene],\n          props = _ref[0],\n          leftAirelone = _ref[1]; // For testing \\\\\n\n      addToRenderSequence(\"Main\", function () {\n        props.rotateZ(0.3);\n        leftAirelone.rotateX(0.005);\n\n        _this.group.rotateY(0.001);\n      }, false);\n      return this.group;\n    }\n  }, {\n    key: \"attachCameraAndControl\",\n    value: function attachCameraAndControl(Camera) {\n      this.UUID = listenToConrols(function (_ref2) {\n        var wKey = _ref2.wKey,\n            aKey = _ref2.aKey,\n            sKey = _ref2.sKey,\n            dKey = _ref2.dKey,\n            upKey = _ref2.upKey,\n            downKey = _ref2.downKey,\n            eKey = _ref2.eKey,\n            qKey = _ref2.qKey,\n            shiftKey = _ref2.shiftKey;\n        console.log(wKey);\n      }); //this.group.add(Camera)\n\n      Camera.position.set(0, 3, -4.5);\n      Camera.rotateY(radiants(180));\n      Camera.rotateX(radiants(-20));\n      addToRenderSequence(\"Main\", function () {});\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function cleanUp() {\n      if (this.UUID !== undefined) {\n        CleanUpListener(this.UUID);\n      }\n\n      this.group.remove();\n      return {\n        success: true\n      };\n    }\n  }]);\n\n  return MakePlane;\n}();","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","addGLBFile","debugCube","addToRenderSequence","listenToConrols","MakePlane","SceneToGet","settings","group","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","add","scene","position","set","rotateY","rotateZ","rotateX","scale","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","console","log","undefined","CleanUpListener","remove","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541)\n        this.leftControlSurface.scene.rotateY(radiants(-7))\n\n        this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447)\n        this.rightControlSurface.scene.rotateY(radiants(6.8))\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5))\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17)\n        this.rudder.scene.rotateX(radiants(-22))\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene]\n\n        // For testing \\\\\n        addToRenderSequence(\"Main\", () => {\n            props.rotateZ(0.3);\n            leftAirelone.rotateX(0.005);\n            this.group.rotateY(0.001)\n        }, false);\n\n        return this.group\n    }\n    attachCameraAndControl(Camera){\n        this.UUID = listenToConrols(({wKey, aKey, sKey, dKey, upKey, downKey, eKey, qKey, shiftKey}) => {\n            console.log(wKey)\n        })\n        //this.group.add(Camera)\n        Camera.position.set(0,3,-4.5)\n        Camera.rotateY(radiants(180))\n        Camera.rotateX(radiants(-20))\n        addToRenderSequence(\"Main\", () => {\n\n        })\n    }\n\n    cleanUp(){\n        if(this.UUID !== undefined){\n            CleanUpListener(this.UUID)\n        }\n        this.group.remove()\n        return {success:true}\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}