{"ast":null,"code":"import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nexport class MakePlane {\n  constructor(SceneToGet, settings) {\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n\n    let init = async () => {\n      try {\n        await this.loadFiles();\n      } catch (e) {\n        console.log(e);\n        return {\n          error: true,\n          response: e\n        };\n      }\n    };\n\n    init();\n  }\n\n  async loadFiles() {\n    this.plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n    this.props = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n    this.leftAirelone = await addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n    this.rightAirelone = await addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n  }\n\n  async CreateGroupAndPos() {\n    this.group.add(this.plane.scene);\n    this.group.add(this.blades.scene);\n    this.group.add(this.leftAirelone.scene);\n    this.group.add(this.rightAirelone.scene);\n    this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n    this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n    this.blades.scene.position.set(0, 15, 22);\n    this.SceneToGet.add(this.group);\n    this.group.scale.set(0.05, 0.05, 0.05); // For testing \\\\\n\n    addToRenderSequence(\"Main\", () => {\n      this.blades.scene.rotateZ(0.3);\n      this.leftAirelone.scene.rotateX(0.005);\n    });\n    return this.group;\n  }\n\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","addGLBFile","addToRenderSequence","MakePlane","constructor","SceneToGet","settings","group","init","loadFiles","e","console","log","error","response","plane","props","leftAirelone","rightAirelone","CreateGroupAndPos","add","scene","blades","position","set","scale","rotateZ","rotateX"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,iBAAhB,EAAmCC,OAAnC,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC9B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAa,IAAIT,KAAJ,EAAb;;AAEA,QAAIU,IAAI,GAAG,YAAY;AACnB,UAAI;AACA,cAAM,KAAKC,SAAL,EAAN;AACH,OAFD,CAEE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,eAAO;AAAEG,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,QAAQ,EAAEJ;AAAzB,SAAP;AACH;AACJ,KAPD;;AAQAF,IAAAA,IAAI;AACP;;AAED,QAAMC,SAAN,GAAkB;AACd,SAAKM,KAAL,GAAa,MAAMd,UAAU,CACzB,gCADyB,EAEzB,KAAKI,UAFoB,CAA7B;AAIA,SAAKW,KAAL,GAAa,MAAMf,UAAU,CACzB,iCADyB,EAEzB,KAAKI,UAFoB,CAA7B;AAIA,SAAKY,YAAL,GAAoB,MAAMhB,UAAU,CAChC,uCADgC,EAEhC,KAAKI,UAF2B,CAApC;AAIA,SAAKa,aAAL,GAAqB,MAAMjB,UAAU,CACjC,wCADiC,EAEjC,KAAKI,UAF4B,CAArC;AAIH;;AAED,QAAMc,iBAAN,GAA0B;AACtB,SAAKZ,KAAL,CAAWa,GAAX,CAAe,KAAKL,KAAL,CAAWM,KAA1B;AACA,SAAKd,KAAL,CAAWa,GAAX,CAAe,KAAKE,MAAL,CAAYD,KAA3B;AACA,SAAKd,KAAL,CAAWa,GAAX,CAAe,KAAKH,YAAL,CAAkBI,KAAjC;AACA,SAAKd,KAAL,CAAWa,GAAX,CAAe,KAAKF,aAAL,CAAmBG,KAAlC;AAEA,SAAKJ,YAAL,CAAkBI,KAAlB,CAAwBE,QAAxB,CAAiCC,GAAjC,CAAqC,MAArC,EAA6C,MAA7C,EAAqD,CAAC,MAAtD;AACA,SAAKN,aAAL,CAAmBG,KAAnB,CAAyBE,QAAzB,CAAkCC,GAAlC,CAAsC,CAAC,MAAvC,EAA+C,MAA/C,EAAuD,CAAC,MAAxD;AAEA,SAAKF,MAAL,CAAYD,KAAZ,CAAkBE,QAAlB,CAA2BC,GAA3B,CAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC;AACA,SAAKnB,UAAL,CAAgBe,GAAhB,CAAoB,KAAKb,KAAzB;AAEA,SAAKA,KAAL,CAAWkB,KAAX,CAAiBD,GAAjB,CAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAZsB,CActB;;AACAtB,IAAAA,mBAAmB,CAAC,MAAD,EAAS,MAAM;AAC9B,WAAKoB,MAAL,CAAYD,KAAZ,CAAkBK,OAAlB,CAA0B,GAA1B;AACA,WAAKT,YAAL,CAAkBI,KAAlB,CAAwBM,OAAxB,CAAgC,KAAhC;AACH,KAHkB,CAAnB;AAKA,WAAO,KAAKpB,KAAZ;AACH;;AAzDkB","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n\n        let init = async () => {\n            try {\n                await this.loadFiles();\n            } catch (e) {\n                console.log(e);\n                return { error: true, response: e };\n            }\n        };\n        init();\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n    }\n\n    async CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.blades.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.blades.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        // For testing \\\\\n        addToRenderSequence(\"Main\", () => {\n            this.blades.scene.rotateZ(0.3);\n            this.leftAirelone.scene.rotateX(0.005);\n        });\n\n        return this.group\n    }\n}\n"]},"metadata":{},"sourceType":"module"}