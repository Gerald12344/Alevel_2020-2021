{"ast":null,"code":"// Written By Harvey Randall \\\\\nimport { BackSide, BoxGeometry, Color, MathUtils, Mesh, MeshBasicMaterial, MeshLambertMaterial, Scene, SphereBufferGeometry, Vector3 } from \"three\";\nimport { CreateAmbientLight, CreateDirectionalLight } from \"../LightingManager\";\nimport { getRandomStarField } from \"../stars\";\nimport { rotateAboutPoint } from \"./rotateAroundPoint\";\nexport class CreateDayNightCycle {\n  constructor(SceneToGet, Renders) {\n    // ---------- [Two to level global variables] ---------- \\\\\n    this.SceneToGet = SceneToGet;\n    this.Renders = Renders; // ---------- [Create Sun Mesh] ---------- \\\\\n\n    let sun = new SphereBufferGeometry(20, 20, 100, 100);\n    let sunMaterial = new MeshLambertMaterial({\n      emissive: 0xf9d71c\n    });\n    let sunmesh = new Mesh(sun, sunMaterial);\n    sunmesh.position.set(1, 300, 300);\n    SceneToGet.add(sunmesh); // ---------- [Create Moon Mesh] ---------- \\\\\n\n    let moon = new SphereBufferGeometry(10, 10, 100, 100);\n    let moonMaterial = new MeshLambertMaterial({\n      emissive: 0xffffff\n    });\n    let moonMesh = new Mesh(moon, moonMaterial);\n    moonMesh.position.set(-1, -200, -300);\n    SceneToGet.add(moonMesh); // ---------- [Create Box Gometry for handling rotation] ---------- \\\\\n\n    var geometry = new BoxGeometry(1, 1, 1);\n    var cube = new Mesh(geometry);\n    cube.visible = false;\n    SceneToGet.add(cube); // ^ This is a very bad work around fix later\n    // ---------- [All defintions for the moving part] ---------- \\\\\n\n    this.cube = cube;\n    this.moonMesh = moonMesh;\n    this.sunmesh = sunmesh;\n    this.t = 0;\n    this.dTIme = 0; // ---------- [All defintions for lights to create shadows] ---------- \\\\\n\n    this.directionalLight = CreateDirectionalLight(SceneToGet, 0xddffee, 0.5, [1, 100, 100]);\n    this.directionalLight2 = CreateDirectionalLight(SceneToGet, 0xffffff, 0.2, [1, -100, -100]);\n    this.light = CreateAmbientLight(SceneToGet, 0xaaaaaa, 0.5); // ---------- [Create Stary night] ---------- \\\\\n\n    let skyBox = new BoxGeometry(1200, 1200, 1200);\n    let skyBoxMaterial = new MeshBasicMaterial({\n      map: getRandomStarField(600, 2048, 2048),\n      side: BackSide\n    });\n    this.sky = new Mesh(skyBox, skyBoxMaterial);\n  }\n\n  update() {\n    // This two lines are  important as it is part of the hacky work around to get time of day on varying FPS\n    let theta = rotateAboutPoint(this.directionalLight, new Vector3(0, 0, 0), new Vector3(1, 0, 0), 0.001, true);\n    let angle = MathUtils.radToDeg(this.cube.rotation.x); // ---------- [Rotate all the lights and Meshes] ---------- \\\\\n\n    rotateAboutPoint(this.sunmesh, new Vector3(100, 0, 0), new Vector3(1, 0, 0), 0.001, true);\n    rotateAboutPoint(this.moonMesh, new Vector3(100, 0, 0), new Vector3(1, 0, 0), 0.001, true);\n    rotateAboutPoint(this.directionalLight2, new Vector3(0, 0, 0), new Vector3(1, 0, 0), 0.001, true); // ---------- [If it is day] ---------- \\\\\n\n    if (angle < 40 && this.dTIme < 1) {\n      this.t = 0;\n      this.directionalLight.color.setHex(0xddffee);\n      this.dTIme += 0.003;\n\n      if (this.dTIme >= 1) {\n        this.dTIme = 1;\n      }\n\n      this.Renders.setClearColor(new Color().lerpColors(new Color(0xFDB813), new Color(0x87ceeb), this.dTIme), 1);\n      this.light.intensity = 0.5;\n      this.directionalLight2.color.setHex(0x000000);\n      this.directionalLight.intensity = 0.5;\n      this.directionalLight2.intensity = 0;\n      this.SceneToGet.remove(this.sky);\n    } else if (!(angle < 40) && this.sky.parent !== this.SceneToGet) {\n      // ---------- [If it is night] ---------- \\\\\n      this.dTIme = 0;\n      this.t += 0.01;\n\n      if (this.t >= 1) {\n        this.t = 1;\n        this.SceneToGet.add(this.sky);\n      }\n\n      this.directionalLight2.color.setHex(0xffffff);\n      this.Renders.setClearColor(new Color().lerpColors(new Color(0x87ceeb), new Color(0x000000), this.t), 1);\n      this.light.intensity = 0.2;\n      this.directionalLight.intensity = 0;\n      this.directionalLight2.intensity = 0.2;\n    }\n\n    if (this.sky.parent === this.SceneToGet) {\n      this.sky.rotation.x += -0.0004;\n    }\n\n    this.cube.rotateOnAxis(new Vector3(1, 0, 0), theta);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}