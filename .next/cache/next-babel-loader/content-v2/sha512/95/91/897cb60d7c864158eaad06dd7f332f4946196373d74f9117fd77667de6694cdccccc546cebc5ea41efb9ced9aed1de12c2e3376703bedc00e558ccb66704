{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\",\n    _s = $RefreshSig$();\n\n// Written By Harvey Randall \\\\\nimport { useEffect, useState, useContext } from \"react\";\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { BoxGeometry, Clock, DoubleSide, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer, MeshLambertMaterial } from \"three\";\n\nvar perlin = require('perlin-noise');\n\nvar SimplexNoise = require('simplex-noise');\n\nimport { GenerateClouds } from '../components/clouds';\nimport { getRandomStarField } from '../components/stars';\nimport { CreateDayNightCycle } from \"../components/gameFundalmentals/DayNightCycle\";\n\nvar Stats = require('stats.js');\n\nimport { useAppContext } from '../components/contextHandler';\nimport { GenerateLabel } from '../components/nametag';\nCameraControls.install({\n  THREE: THREE\n});\nexport default function render() {\n  _s();\n\n  var _this = this,\n      _ref2;\n\n  var _useState = useState(undefined),\n      child = _useState[0],\n      setChild = _useState[1];\n\n  var _useState2 = useState([]),\n      gameEventData = _useState2[0],\n      setGameEventData = _useState2[1];\n\n  var _useState3 = useState(0),\n      newTheta = _useState3[0],\n      setTheat = _useState3[1];\n\n  var _useState4 = useState(\"not day\"),\n      day = _useState4[0],\n      setDay = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      child2 = _useState5[0],\n      setChild2 = _useState5[1];\n\n  var _useState6 = useState(undefined),\n      pos = _useState6[0],\n      setPos = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      rot = _useState7[0],\n      setRot = _useState7[1];\n\n  var socket = useAppContext();\n\n  var _useState8 = useState(undefined),\n      recievedSeed = _useState8[0],\n      setSeed = _useState8[1];\n\n  var _useState9 = useState(false),\n      rendered = _useState9[0],\n      setRendered = _useState9[1];\n\n  var _useState10 = useState([]),\n      clients = _useState10[0],\n      setClients = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      personData = _useState11[0],\n      setPersonalData = _useState11[1];\n\n  var _useState12 = useState([]),\n      latestPerson = _useState12[0],\n      setLatestestPerson = _useState12[1];\n\n  socket.once(\"welcome\", function (seed, client, data) {\n    setSeed(seed);\n    console.log(client);\n    setClients(client);\n    setPersonalData(data);\n  });\n  useEffect(function () {\n    console.log(\"UPDAET!!!!\");\n    console.log(gameEventData);\n  }, [gameEventData]);\n  useEffect(function () {\n    if (child === undefined || recievedSeed === undefined || rendered === true) return;\n    setRendered(true);\n    var stats = new Stats();\n    stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n\n    document.body.appendChild(stats.dom);\n    var SceneToGet = new Scene();\n    var Renders = new WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    Renders.setClearColor(0x87ceeb, 1);\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var simplex = new SimplexNoise(recievedSeed);\n    var clock = new Clock();\n    var planeGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);\n    planeGeometry.rotateX(Math.PI / 2);\n    var planeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x567d46,\n      side: DoubleSide\n    });\n    var plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -0.5;\n    SceneToGet.add(plane);\n    var daynight = new CreateDayNightCycle(SceneToGet, Renders);\n    var geometry = new THREE.PlaneBufferGeometry(500, 500, 100, 100);\n    var colours = [];\n\n    for (var i = 0, l = geometry.attributes.position.count; i < l; i++) {\n      //console.log(geometry.attributes.position.array[(i*3)+2])\n      var x = geometry.attributes.position.array[i * 3] / 128;\n      var y = geometry.attributes.position.array[i * 3 + 1] / 128;\n      var height = simplex.noise2D(x, y) * 30;\n      geometry.attributes.position.array[i * 3 + 2] = height;\n\n      if (height > 23) {\n        colours.push(1, 1, 1);\n      } else if (height > 5) {\n        colours.push(0.56, 0.54, 0.48);\n      } else if (height < -20) {\n        colours.push(0.501, 0.772, 0.87);\n      } else {\n        colours.push(0.56, 0.68, 0.166);\n      }\n    }\n\n    var material = new THREE.MeshPhongMaterial({\n      vertexColors: THREE.VertexColors,\n      reflectivity: 0,\n      roughness: 2\n    });\n    material.flatShading = true;\n    var plane2 = new THREE.Mesh(geometry, material);\n    plane2.receiveShadow = true;\n    plane2.castShadow = true;\n    plane2.position.y = -3;\n    geometry.addAttribute('color', new THREE.BufferAttribute(new Float32Array(colours), 3));\n    geometry.computeVertexNormals();\n    var clouds = [];\n\n    for (var _i = 0; _i < 40; _i++) {\n      clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n    }\n\n    plane2.rotateX(Math.PI / 2 + Math.PI);\n    SceneToGet.add(plane2);\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    /*const cameraControls = new CameraControls(Camera, Renders.domElement);\n    cameraControls.azimuthRotateSpeed = -0.3; // negative value to invert rotation direction\n    cameraControls.polarRotateSpeed = -0.3; // negative value to invert rotation direction\n    cameraControls.truckSpeed = 1 / 1e-5 * 3;\n    cameraControls.distance = 5\n    //cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n    cameraControls.saveState();*/\n    //Camera.position.z = 5;\n\n    var w = false,\n        a = false,\n        s = false,\n        d = false,\n        up = false,\n        down = false,\n        e = false,\n        q = false,\n        shift = 1;\n    document.addEventListener(\"keydown\", function (e) {\n      onDocumentKeyDown(e, true);\n    }, false);\n    document.addEventListener(\"keyup\", function (e) {\n      onDocumentKeyDown(e, false);\n    }, false);\n\n    function onDocumentKeyDown(event, val) {\n      if (child2 === document.activeElement) return;\n      var keyCode = event.which;\n\n      if (keyCode == 87) {\n        w = val;\n      }\n\n      if (keyCode == 83) {\n        s = val;\n      }\n\n      if (keyCode == 65) {\n        a = val;\n      }\n\n      if (keyCode == 68) {\n        d = val;\n      }\n\n      if (keyCode == 38) {\n        up = val;\n      }\n\n      if (keyCode == 40) {\n        down = val;\n      }\n\n      if (keyCode == 69) {\n        e = val;\n      }\n\n      if (keyCode == 81) {\n        q = val;\n      }\n\n      if (keyCode == 16) {\n        shift = val ? 0.5 : 1;\n      }\n    }\n\n    ;\n    Renders.domElement.requestPointerLock();\n    var gridHelper = new THREE.GridHelper(50, 50);\n    gridHelper.position.y = -1;\n    SceneToGet.add(gridHelper);\n    var players = [];\n\n    function MakeCube() {\n      var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"rgb(0,0,0)\";\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"unkown\";\n      var group = new THREE.Group();\n      var geometry = new THREE.BoxGeometry(1, 1, 1);\n      var material = new THREE.MeshLambertMaterial({\n        color: new THREE.Color(color),\n        emissive: new THREE.Color(color)\n      });\n      var cube = new THREE.Mesh(geometry, material);\n      group.add(cube);\n      var cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n      var material2 = new THREE.MeshLambertMaterial({\n        color: 0x000000\n      });\n      var cylinderBuild = new THREE.Mesh(cyclinder, material2);\n      cylinderBuild.rotateX(Math.PI / 2 + Math.PI);\n      cylinderBuild.position.set(0, 0, -0.6);\n      group.add(cylinderBuild);\n      GenerateLabel(name, group);\n      SceneToGet.add(group);\n      group.name = name;\n      return group;\n    }\n\n    console.log(clients);\n    var prevData = [];\n\n    var addtoGameFeed = function addtoGameFeed() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unkown\";\n      var event = arguments.length > 1 ? arguments[1] : undefined;\n\n      var NewGameEventArray = _toConsumableArray(prevData);\n\n      console.log(NewGameEventArray);\n      NewGameEventArray.unshift({\n        name: name,\n        event: event\n      });\n      delete NewGameEventArray[10];\n      delete NewGameEventArray[11];\n      setGameEventData(_toConsumableArray(NewGameEventArray));\n      console.log(\"array below\");\n      console.log(prevData);\n      prevData = NewGameEventArray;\n    };\n\n    clients.forEach(function (e) {\n      console.log(\"Adding PLayer \" + e);\n      var cube = MakeCube(e.color, e.name);\n      players[e] = cube;\n    });\n    socket.on('NewPlayer', function (id, data) {\n      console.log(data);\n      console.log(\"New PLyer \" + id);\n      var cube = MakeCube(data.color, data.name);\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, \"Joined the game!\");\n      players[id] = cube;\n    });\n    socket.on('LostPLayer', function (id, how, data) {\n      console.log(\"lost PLyer \" + id);\n      var cube = players[id];\n      SceneToGet.remove(cube);\n      delete players[id];\n      console.log(data);\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, how === true ? \"Was removed from the game for being inactive\" : \"Left the game!\");\n    });\n    socket.on('PlayerLocationUpdate', function (id, pos, rot, data) {\n      var cube = players[id];\n\n      if (cube) {\n        cube.rotation.set(rot._x, rot._y, rot._z);\n        cube.position.set(pos.x, pos.y, pos.z);\n      } else {\n        var _cube = MakeCube(data === null || data === void 0 ? void 0 : data.color, data === null || data === void 0 ? void 0 : data.name);\n\n        players[id] = _cube;\n      }\n    });\n    socket.on(\"NewChat\", function (data, text) {\n      addtoGameFeed(data.name, text);\n    });\n    setInterval(function () {\n      socket.emit('LocationUpdate', Camera.position, Camera.rotation);\n    }, 10);\n\n    var animate = function animate() {\n      stats.begin();\n      requestAnimationFrame(animate);\n      daynight.update();\n      clouds.forEach(function (e, i) {\n        e.update();\n      });\n\n      if (w) {\n        var direction = new THREE.Vector3();\n        Camera.getWorldDirection(direction);\n        Camera.position.add(direction.multiplyScalar(shift == 1 ? 1 : 0.25)); //Camera.position.z -= 0.1\n      }\n\n      if (s) {\n        var direction = new THREE.Vector3();\n        Camera.getWorldDirection(direction);\n        Camera.position.add(direction.multiplyScalar(-(shift == 1 ? 1 : 0.25)));\n      }\n\n      if (a) {\n        Camera.rotateY(0.04 * shift);\n      }\n\n      if (d) {\n        Camera.rotateY(-0.04 * shift);\n      }\n\n      if (up) {\n        Camera.rotateX(0.04 * shift);\n      }\n\n      if (down) {\n        Camera.rotateX(-0.04 * shift);\n      }\n\n      if (q) {\n        Camera.rotateZ(0.02 * shift);\n      }\n\n      if (e) {\n        Camera.rotateZ(-0.02 * shift);\n      }\n\n      Renders.render(SceneToGet, Camera);\n      stats.end();\n    };\n\n    function listChildren(children) {\n      var child;\n\n      for (var _i2 = 0; _i2 < children.length; _i2++) {\n        child = children[_i2]; // Calls this function again if the child has children\n\n        if (child.children) {\n          listChildren(child.children);\n        } // Logs if this child last in recursion\n        else {\n            console.log('Reached bottom with: ', child);\n          }\n      }\n    }\n\n    listChildren(SceneToGet.children);\n    animate();\n  }, [child, clients]);\n\n  var sendChat = function sendChat(e) {\n    e.preventDefault();\n    socket.emit(\"sendChat\", child2.value);\n    child2.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: \"fixed\",\n        marginTop: \"40px\",\n        color: \"white\"\n      },\n      children: personData === undefined ? \"LOADING...\" : personData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"fixed\",\n        marginTop: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: function ref(_ref) {\n            return setChild2(_ref);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), _toConsumableArray(gameEventData).map(function (e) {\n        if (e == undefined) return;\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"white\"\n          },\n          children: [e.name, \" - \", e.event]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), (_ref2 = recievedSeed === undefined) !== null && _ref2 !== void 0 ? _ref2 : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING SEED!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: function ref(_ref3) {\n        return setChild(_ref3);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 9\n  }, this);\n}\n\n_s(render, \"dauaHbBN7rKnpszJTy+htqb1bdk=\", false, function () {\n  return [useAppContext];\n});","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","useContext","THREE","CameraControls","BoxGeometry","Clock","DoubleSide","Material","Mesh","MeshBasicMaterial","MeshStandardMaterial","PerspectiveCamera","PointLight","Scene","Vector3","WebGLRenderer","MeshLambertMaterial","perlin","require","SimplexNoise","GenerateClouds","getRandomStarField","CreateDayNightCycle","Stats","useAppContext","GenerateLabel","install","render","undefined","child","setChild","gameEventData","setGameEventData","newTheta","setTheat","day","setDay","child2","setChild2","pos","setPos","rot","setRot","socket","recievedSeed","setSeed","rendered","setRendered","clients","setClients","personData","setPersonalData","latestPerson","setLatestestPerson","once","seed","client","data","console","log","stats","showPanel","document","body","appendChild","dom","SceneToGet","Renders","antialias","alpha","setClearColor","setSize","window","innerWidth","innerHeight","domElement","simplex","clock","planeGeometry","PlaneGeometry","rotateX","Math","PI","planeMaterial","color","side","plane","position","y","add","daynight","geometry","PlaneBufferGeometry","colours","i","l","attributes","count","x","array","height","noise2D","push","material","MeshPhongMaterial","vertexColors","VertexColors","reflectivity","roughness","flatShading","plane2","receiveShadow","castShadow","addAttribute","BufferAttribute","Float32Array","computeVertexNormals","clouds","random","Camera","w","a","s","d","up","down","e","q","shift","addEventListener","onDocumentKeyDown","event","val","activeElement","keyCode","which","requestPointerLock","gridHelper","GridHelper","players","MakeCube","name","group","Group","Color","emissive","cube","cyclinder","CylinderGeometry","material2","cylinderBuild","set","prevData","addtoGameFeed","NewGameEventArray","unshift","forEach","on","id","how","remove","rotation","_x","_y","_z","z","text","setInterval","emit","animate","begin","requestAnimationFrame","update","direction","getWorldDirection","multiplyScalar","rotateY","rotateZ","end","listChildren","children","length","sendChat","preventDefault","value","marginTop","width","ref","map"],"mappings":"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","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState, useContext } from \"react\"\nimport * as THREE from 'three';\nimport CameraControls from 'camera-controls';\nimport { BoxGeometry, Clock, DoubleSide, Material, Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PointLight, Scene, Vector3, WebGLRenderer, MeshLambertMaterial } from \"three\"\nvar perlin = require('perlin-noise');\nvar SimplexNoise = require('simplex-noise');\nimport { GenerateClouds } from '../components/clouds'\nimport { getRandomStarField } from '../components/stars'\nimport { CreateDayNightCycle } from \"../components/gameFundalmentals/DayNightCycle\";\nvar Stats = require('stats.js')\nimport { useAppContext } from '../components/contextHandler'\nimport { GenerateLabel } from '../components/nametag'\nCameraControls.install({ THREE: THREE });\n\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    const [gameEventData, setGameEventData] = useState([])\n\n    const [newTheta, setTheat] = useState(0)\n    const [day, setDay] = useState(\"not day\")\n    const [child2, setChild2] = useState(undefined)\n    const [pos, setPos] = useState(undefined)\n    const [rot, setRot] = useState(undefined)\n    const socket = useAppContext()\n    const [recievedSeed, setSeed] = useState(undefined)\n    const [rendered, setRendered] = useState(false)\n    const [clients, setClients] = useState([])\n    const [personData, setPersonalData] = useState(undefined)\n    const [latestPerson, setLatestestPerson] = useState([])\n\n    socket.once(\"welcome\", (seed, client, data) => {\n        setSeed(seed)\n        console.log(client)\n        setClients(client)\n        setPersonalData(data)\n    });\n\n    useEffect(() => {\n        console.log(\"UPDAET!!!!\")\n        console.log(gameEventData)\n    }, [gameEventData])\n\n\n    useEffect(() => {\n        if (child === undefined || recievedSeed === undefined || rendered === true) return;\n        setRendered(true)\n\n        let stats = new Stats();\n        stats.showPanel(1); // 0: fps, 1: ms, 2: mb, 3+: custom\n        document.body.appendChild(stats.dom);\n\n        let SceneToGet = new Scene()\n        let Renders = new WebGLRenderer({\n            antialias: true,\n            alpha: true\n        })\n\n        Renders.setClearColor(0x87ceeb, 1);\n\n\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n\n        const simplex = new SimplexNoise(recievedSeed)\n\n\n\n\n        const clock = new Clock();\n\n\n        const planeGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);\n        planeGeometry.rotateX(Math.PI / 2)\n        const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x567d46, side: DoubleSide })\n        const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n        plane.position.y = -0.5\n        SceneToGet.add(plane);\n\n        let daynight = new CreateDayNightCycle(SceneToGet, Renders)\n\n        var geometry = new THREE.PlaneBufferGeometry(500, 500, 100, 100)\n\n        let colours = []\n\n\n\n\n        for (var i = 0, l = geometry.attributes.position.count; i < l; i++) {\n            //console.log(geometry.attributes.position.array[(i*3)+2])\n            let x = geometry.attributes.position.array[(i * 3)] / 128\n            let y = geometry.attributes.position.array[(i * 3) + 1] / 128\n            let height = simplex.noise2D(x, y) * 30\n            geometry.attributes.position.array[(i * 3) + 2] = height\n            if (height > 23) {\n                colours.push(1, 1, 1)\n            }\n            else if (height > 5) {\n                colours.push(0.56, 0.54, 0.48)\n            }\n            else if (height < -20) {\n                colours.push(0.501, 0.772, 0.87)\n            }\n            else {\n                colours.push(0.56, 0.68, 0.166)\n            }\n        }\n        var material = new THREE.MeshPhongMaterial({\n            vertexColors: THREE.VertexColors,\n            reflectivity: 0,\n            roughness: 2,\n        });\n        material.flatShading = true\n        var plane2 = new THREE.Mesh(geometry, material);\n        plane2.receiveShadow = true\n        plane2.castShadow = true\n        plane2.position.y = -3\n        geometry.addAttribute('color', new THREE.BufferAttribute(new Float32Array(colours), 3));\n        geometry.computeVertexNormals();\n\n        let clouds = []\n        for (let i = 0; i < 40; i++) {\n            clouds.push(new GenerateClouds(new Vector3((Math.random() * 300) - 300, 80 + Math.random() * 20, (Math.random() * 600) - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1))\n        }\n\n        plane2.rotateX((Math.PI / 2) + Math.PI)\n        SceneToGet.add(plane2);\n\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        /*const cameraControls = new CameraControls(Camera, Renders.domElement);\n        cameraControls.azimuthRotateSpeed = -0.3; // negative value to invert rotation direction\n        cameraControls.polarRotateSpeed = -0.3; // negative value to invert rotation direction\n        cameraControls.truckSpeed = 1 / 1e-5 * 3;\n        cameraControls.distance = 5\n        //cameraControls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n        cameraControls.saveState();*/\n        //Camera.position.z = 5;\n\n        let [w, a, s, d, up, down, e, q, shift] = [false, false, false, false, false, false, false, false, 1]\n\n        document.addEventListener(\"keydown\", (e) => { onDocumentKeyDown(e, true) }, false);\n        document.addEventListener(\"keyup\", (e) => { onDocumentKeyDown(e, false) }, false);\n\n        function onDocumentKeyDown(event, val) {\n            if(child2 === document.activeElement) return\n            var keyCode = event.which;\n            if (keyCode == 87) {\n                w = val\n            }\n            if (keyCode == 83) {\n                s = val\n            }\n            if (keyCode == 65) {\n                a = val\n            }\n            if (keyCode == 68) {\n                d = val\n            }\n            if (keyCode == 38) {\n                up = val\n            }\n            if (keyCode == 40) {\n                down = val\n            }\n            if (keyCode == 69) {\n                e = val\n            }\n            if (keyCode == 81) {\n                q = val\n            }\n            if (keyCode == 16) {\n                shift = val ? 0.5 : 1\n            }\n        };\n\n\n\n        Renders.domElement.requestPointerLock()\n\n        const gridHelper = new THREE.GridHelper(50, 50);\n        gridHelper.position.y = -1;\n        SceneToGet.add(gridHelper);\n        let players = []\n\n        function MakeCube(color = \"rgb(0,0,0)\", name = \"unkown\") {\n            const group = new THREE.Group();\n            const geometry = new THREE.BoxGeometry(1, 1, 1);\n            const material = new THREE.MeshLambertMaterial({ color: new THREE.Color(color), emissive: new THREE.Color(color) });\n            const cube = new THREE.Mesh(geometry, material);\n            group.add(cube)\n            const cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n            const material2 = new THREE.MeshLambertMaterial({ color: 0x000000 });\n            const cylinderBuild = new THREE.Mesh(cyclinder, material2);\n            cylinderBuild.rotateX((Math.PI / 2) + Math.PI)\n            cylinderBuild.position.set(0, 0, -0.6)\n            group.add(cylinderBuild)\n\n            GenerateLabel(name, group)\n            SceneToGet.add(group)\n            group.name = name\n            return group\n        }\n\n        console.log(clients)\n        let prevData = []\n\n        let addtoGameFeed = (name = \"Unkown\", event) => {\n            let NewGameEventArray = [...prevData]\n            console.log(NewGameEventArray)\n            NewGameEventArray.unshift({ name: name, event: event })\n            delete NewGameEventArray[10]\n            delete NewGameEventArray[11]\n            setGameEventData([...NewGameEventArray])\n            console.log(\"array below\")\n            console.log(prevData)\n            prevData = NewGameEventArray\n        }\n\n        clients.forEach(e => {\n            console.log(\"Adding PLayer \" + e)\n            let cube = MakeCube(e.color, e.name)\n            players[e] = cube\n        })\n\n        socket.on('NewPlayer', (id, data) => {\n            console.log(data)\n            console.log(\"New PLyer \" + id)\n            let cube = MakeCube(data.color, data.name)\n            addtoGameFeed(data?.name, \"Joined the game!\")\n\n            players[id] = cube\n        })\n\n        socket.on('LostPLayer', (id, how, data) => {\n            console.log(\"lost PLyer \" + id)\n            let cube = players[id]\n            SceneToGet.remove(cube)\n            delete players[id]\n            console.log(data)\n            addtoGameFeed(data?.name, how === true ? \"Was removed from the game for being inactive\" : \"Left the game!\")\n        })\n\n        socket.on('PlayerLocationUpdate', (id, pos, rot, data) => {\n            let cube = players[id]\n            if (cube) {\n                cube.rotation.set(rot._x, rot._y, rot._z)\n                cube.position.set(pos.x, pos.y, pos.z)\n            }\n            else {\n                let cube = MakeCube(data?.color, data?.name)\n\n                players[id] = cube\n\n            }\n\n        })\n        socket.on(\"NewChat\", (data, text) => {\n            addtoGameFeed(data.name, text)\n        })\n        setInterval(() => {\n            socket.emit('LocationUpdate', Camera.position, Camera.rotation)\n        }, 10)\n\n\n        var animate = function() {\n            stats.begin()\n            requestAnimationFrame(animate)\n\n            daynight.update()\n\n\n            clouds.forEach((e, i) => {\n                e.update()\n            })\n\n            if (w) {\n                var direction = new THREE.Vector3();\n                Camera.getWorldDirection(direction);\n                Camera.position.add(direction.multiplyScalar(shift == 1 ? 1 : 0.25));\n                //Camera.position.z -= 0.1\n            }\n            if (s) {\n                var direction = new THREE.Vector3();\n                Camera.getWorldDirection(direction);\n                Camera.position.add(direction.multiplyScalar(-(shift == 1 ? 1 : 0.25)));\n            }\n            if (a) {\n                Camera.rotateY(0.04 * shift)\n            }\n            if (d) {\n                Camera.rotateY(-0.04 * shift)\n            }\n            if (up) {\n                Camera.rotateX(0.04 * shift)\n            }\n            if (down) {\n                Camera.rotateX(-0.04 * shift)\n            }\n            if (q) {\n                Camera.rotateZ(0.02 * shift)\n            }\n            if (e) {\n                Camera.rotateZ(-0.02 * shift)\n            }\n\n\n\n            Renders.render(SceneToGet, Camera);\n            stats.end()\n        };\n\n        function listChildren(children) {\n            let child;\n            for (let i = 0; i < children.length; i++) {\n                child = children[i];\n\n                // Calls this function again if the child has children\n                if (child.children) {\n                    listChildren(child.children);\n                }\n                // Logs if this child last in recursion\n                else {\n                    console.log('Reached bottom with: ', child);\n                }\n            }\n        }\n\n        listChildren(SceneToGet.children);\n        animate();\n    }, [child, clients])\n    \n    let sendChat = (e) => {\n        e.preventDefault()\n        socket.emit(\"sendChat\", child2.value)\n        child2.value = \"\"\n    }\n\n    return (\n        <main >\n            <h1 style={{position:\"fixed\", marginTop:\"40px\", color:\"white\"}}>{personData === undefined ? \"LOADING...\" : personData.name}</h1>\n            <div style={{width:\"100vw\", height:\"100vh\", position:\"fixed\", marginTop:\"80px\"}}>\n                <form  onSubmit={sendChat}>\n                    <input ref={ref => (setChild2(ref))}></input>\n                    <input type=\"Submit\"></input>\n                </form>\n                {[...gameEventData].map((e) => {\n                if(e == undefined) return;\n                return(\n                    <h4 style={{color:\"white\"}}>{e.name} - {e.event}</h4>\n                )}) }\n                \n            </div>\n            { recievedSeed === undefined ?? <h1>LOADING SEED!</h1>}\n            <div ref = { ref => (setChild(ref)) }></div>  \n        </main>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}