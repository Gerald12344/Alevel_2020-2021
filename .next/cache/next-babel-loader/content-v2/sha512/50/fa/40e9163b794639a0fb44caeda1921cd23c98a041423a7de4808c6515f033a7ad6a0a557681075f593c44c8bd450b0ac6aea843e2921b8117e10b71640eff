{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState, useContext } from \"react\";\nimport * as THREE from \"three\";\nimport React from 'react';\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\n\nvar Stats = require(\"stats.js\");\n\nimport { useAppContext } from \"../components/Context/socketioContext\";\nimport { generateLabel } from \"../components/gameFundalmentals/nametag\";\nimport { startSeverClientCommunication, listenToEvent } from \"../components/Core-API/ConnectAPI\";\nimport { updateRenderCycle } from \"../components/Core-API/RenderingHandler\";\nimport { generateMainScene } from \"../components/Scenes/MainSceneHandler\";\nimport { CreateUI } from \"../components/gameUI/gameFeed\";\nimport { ControlEventListener } from \"../components/gameFundalmentals/controls\";\nexport default function render() {\n  var _ref;\n\n  const {\n    0: child,\n    1: setChild\n  } = useState();\n  const {\n    0: gameEventData,\n    1: setGameEventData\n  } = useState([]);\n  const {\n    0: day,\n    1: setDay\n  } = useState(\"not day\");\n  const {\n    0: child2,\n    1: setChild2\n  } = useState();\n  const socket = useAppContext();\n  ;\n  const {\n    0: recievedSeed,\n    1: setSeed\n  } = useState();\n  const {\n    0: rendered,\n    1: setRendered\n  } = useState(false);\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: personData,\n    1: setPersonalData\n  } = useState();\n  startSeverClientCommunication(socket);\n  socket.once(\"welcome\", (seed, client, data) => {\n    setSeed(seed);\n    setClients(client);\n    setPersonalData(data);\n  });\n  useEffect(() => {\n    if (typeof child === \"undefined\" || typeof recievedSeed === \"undefined\" || rendered === true) {\n      return;\n    }\n\n    setRendered(true);\n    let stats = new Stats();\n    stats.showPanel(1);\n    document.body.appendChild(stats.dom);\n    let SceneToGet = new Scene();\n    let Renders = new WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    Renders.setClearColor(\"#87ceeb\", 1);\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    let CurrentScene = \"Main\";\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 5000);\n    generateMainScene(SceneToGet, Renders, document, recievedSeed, child2, Camera);\n    Renders.domElement.requestPointerLock();\n    ControlEventListener(document, child2);\n    let players = [];\n\n    function makeCube(color = \"rgb(0,0,0)\", name = \"unkown\") {\n      const group = new THREE.Group();\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\n      const material = new THREE.MeshLambertMaterial({\n        color: new THREE.Color(color),\n        emissive: new THREE.Color(color)\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      group.add(cube);\n      const cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n      const material2 = new THREE.MeshLambertMaterial({\n        color: \"#000000\"\n      });\n      const cylinderBuild = new THREE.Mesh(cyclinder, material2);\n      cylinderBuild.rotateX(Math.PI / 2 + Math.PI);\n      cylinderBuild.position.set(0, 0, -0.6);\n      group.add(cylinderBuild);\n      generateLabel(name, group);\n      SceneToGet.add(group);\n      group.name = name;\n      return group;\n    }\n\n    let prevData = [];\n\n    let addtoGameFeed = (name = \"Unkown\", event) => {\n      let NewGameEventArray = [...gameEventData];\n      NewGameEventArray.unshift({\n        name,\n        event\n      });\n      delete NewGameEventArray[10];\n      delete NewGameEventArray[11];\n      setGameEventData([...NewGameEventArray]);\n      prevData = NewGameEventArray;\n    };\n\n    clients.forEach(e => {\n      let cube = makeCube(e.color, e.name);\n      players[`${e}`] = cube;\n    });\n    socket.on(\"NewPlayer\", (id, data) => {\n      let cube = makeCube(data.color, data.name);\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, \"Joined the game!\");\n      players[`${id}`] = cube;\n    });\n    socket.on(\"LostPLayer\", (id, how, data) => {\n      let cube = players[`${id}`];\n      SceneToGet.remove(cube);\n      delete players[`${id}`];\n      addtoGameFeed(data === null || data === void 0 ? void 0 : data.name, how === true ? \"Was removed from the game for being inactive\" : \"Left the game!\");\n    });\n    listenToEvent(\"PlayerLocationUpdate\", (id, pos, rot, data) => {\n      let cube = players[`${id}`];\n\n      if (cube) {\n        cube.rotation.set(rot._x, rot._y, rot._z);\n        cube.position.set(pos.x, pos.y, pos.z);\n      } else {\n        let cube = makeCube(data === null || data === void 0 ? void 0 : data.color, data === null || data === void 0 ? void 0 : data.name);\n        players[`${id}`] = cube;\n      }\n    });\n    socket.on(\"NewChat\", (data, text) => {\n      addtoGameFeed(data.name, text);\n    });\n    setInterval(() => {\n      socket.emit(\"LocationUpdate\", Camera.position, Camera.rotation);\n    }, 10);\n\n    var animate = function () {\n      stats.begin();\n      requestAnimationFrame(animate); // Update all moving parts\n\n      updateRenderCycle(CurrentScene);\n      Renders.render(SceneToGet, Camera);\n      stats.end();\n    };\n\n    animate();\n  }, [child, clients]);\n\n  let sendChat = e => {\n    e.preventDefault();\n    socket.emit(\"sendChat\", child2.value);\n    child2.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: \"fixed\",\n        marginTop: \"40px\",\n        color: \"white\"\n      },\n      children: typeof personData === \"undefined\" ? \"LOADING...\" : personData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"fixed\",\n        marginTop: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CreateUI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => setChild2(ref)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), [...gameEventData].map(e => {\n        if (typeof e === \"undefined\") {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"white\"\n          },\n          children: [e.name, \" - \", e.event]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), (_ref = typeof recievedSeed === \"undefined\") !== null && _ref !== void 0 ? _ref : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING SEED!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","useContext","THREE","React","PerspectiveCamera","Scene","WebGLRenderer","Stats","require","useAppContext","generateLabel","startSeverClientCommunication","listenToEvent","updateRenderCycle","generateMainScene","CreateUI","ControlEventListener","render","child","setChild","gameEventData","setGameEventData","day","setDay","child2","setChild2","socket","recievedSeed","setSeed","rendered","setRendered","clients","setClients","personData","setPersonalData","once","seed","client","data","stats","showPanel","document","body","appendChild","dom","SceneToGet","Renders","antialias","alpha","setClearColor","setSize","window","innerWidth","innerHeight","domElement","CurrentScene","Camera","requestPointerLock","players","makeCube","color","name","group","Group","geometry","BoxGeometry","material","MeshLambertMaterial","Color","emissive","cube","Mesh","add","cyclinder","CylinderGeometry","material2","cylinderBuild","rotateX","Math","PI","position","set","prevData","addtoGameFeed","event","NewGameEventArray","unshift","forEach","e","on","id","how","remove","pos","rot","rotation","_x","_y","_z","x","y","z","text","setInterval","emit","animate","begin","requestAnimationFrame","end","sendChat","preventDefault","value","marginTop","width","height","ref","map"],"mappings":"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","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState, useContext } from \"react\";\nimport * as THREE from \"three\";\nimport React from 'react'\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nvar Stats = require(\"stats.js\");\nimport { useAppContext } from \"../components/Context/socketioContext\";\nimport { generateLabel } from \"../components/gameFundalmentals/nametag\";\nimport {\n    startSeverClientCommunication,\n    listenToEvent,\n} from \"../components/Core-API/ConnectAPI\";\nimport { updateRenderCycle } from \"../components/Core-API/RenderingHandler\";\nimport { generateMainScene } from \"../components/Scenes/MainSceneHandler\";\nimport { CreateUI } from \"../components/gameUI/gameFeed\";\nimport { ControlEventListener } from \"../components/gameFundalmentals/controls\";\n\nexport default function render() {\n    const [child, setChild] = useState();\n    const [gameEventData, setGameEventData] = useState([]);\n\n    const [day, setDay] = useState(\"not day\");\n    const [child2, setChild2] = useState();\n    const socket = useAppContext();;\n    const [recievedSeed, setSeed] = useState();\n    const [rendered, setRendered] = useState(false);\n    const [clients, setClients] = useState([]);\n    const [personData, setPersonalData] = useState();\n\n    startSeverClientCommunication(socket);\n\n    socket.once(\"welcome\", (seed, client, data) => {\n        setSeed(seed);\n        setClients(client);\n        setPersonalData(data);\n    });\n\n    useEffect(() => {\n        if (\n            typeof child === \"undefined\" ||\n            typeof recievedSeed === \"undefined\" ||\n            rendered === true\n        ){\n            return;\n        }\n            \n        setRendered(true);\n\n        let stats = new Stats();\n        stats.showPanel(1);\n        document.body.appendChild(stats.dom);\n\n        let SceneToGet = new Scene();\n        let Renders = new WebGLRenderer({\n            antialias: true,\n            alpha: true,\n        });\n\n        Renders.setClearColor(\"#87ceeb\", 1);\n\n        Renders.setSize(window.innerWidth, window.innerHeight);\n        child.appendChild(Renders.domElement);\n\n        let CurrentScene = \"Main\";\n\n        var Camera = new PerspectiveCamera(\n            75,\n            window.innerWidth / window.innerHeight,\n            0.1,\n            5000\n        );\n        generateMainScene(\n            SceneToGet,\n            Renders,\n            document,\n            recievedSeed,\n            child2,\n            Camera\n        );\n\n        Renders.domElement.requestPointerLock();\n        ControlEventListener(document, child2)\n\n        let players = [];\n\n        function makeCube(color = \"rgb(0,0,0)\", name = \"unkown\") {\n            const group = new THREE.Group();\n            const geometry = new THREE.BoxGeometry(1, 1, 1);\n            const material = new THREE.MeshLambertMaterial({\n                color: new THREE.Color(color),\n                emissive: new THREE.Color(color),\n            });\n            const cube = new THREE.Mesh(geometry, material);\n            group.add(cube);\n            const cyclinder = new THREE.CylinderGeometry(0.3, 0.3, 0.6, 30);\n            const material2 = new THREE.MeshLambertMaterial({\n                color: \"#000000\",\n            });\n            const cylinderBuild = new THREE.Mesh(cyclinder, material2);\n            cylinderBuild.rotateX(Math.PI / 2 + Math.PI);\n            cylinderBuild.position.set(0, 0, -0.6);\n            group.add(cylinderBuild);\n\n            generateLabel(name, group);\n            SceneToGet.add(group);\n            group.name = name;\n            return group;\n        }\n\n        let prevData = [];\n\n        let addtoGameFeed = (name = \"Unkown\", event) => {\n            let NewGameEventArray = [...gameEventData];\n            NewGameEventArray.unshift({ name, event });\n            delete NewGameEventArray[10];\n            delete NewGameEventArray[11];\n            setGameEventData([...NewGameEventArray]);\n            prevData = NewGameEventArray;\n        };\n\n        clients.forEach((e) => {\n            let cube = makeCube(e.color, e.name);\n            players[`${e}`] = cube;\n        });\n\n        socket.on(\"NewPlayer\", (id, data) => {\n            let cube = makeCube(data.color, data.name);\n            addtoGameFeed(data?.name, \"Joined the game!\");\n\n            players[`${id}`] = cube;\n        });\n\n        socket.on(\"LostPLayer\", (id, how, data) => {\n            let cube = players[`${id}`];\n            SceneToGet.remove(cube);\n            delete players[`${id}`];\n            addtoGameFeed(\n                data?.name,\n                how === true\n                    ? \"Was removed from the game for being inactive\"\n                    : \"Left the game!\"\n            );\n        });\n\n        listenToEvent(\"PlayerLocationUpdate\", (id, pos, rot, data) => {\n            let cube = players[`${id}`];\n            if (cube) {\n                cube.rotation.set(rot._x, rot._y, rot._z);\n                cube.position.set(pos.x, pos.y, pos.z);\n            } else {\n                let cube = makeCube(data?.color, data?.name);\n\n                players[`${id}`] = cube;\n            }\n        });\n        socket.on(\"NewChat\", (data, text) => {\n            addtoGameFeed(data.name, text);\n        });\n        setInterval(() => {\n            socket.emit(\"LocationUpdate\", Camera.position, Camera.rotation);\n        }, 10);\n\n        var animate = function () {\n            stats.begin();\n            requestAnimationFrame(animate);\n\n            // Update all moving parts\n            updateRenderCycle(CurrentScene);\n\n            Renders.render(SceneToGet, Camera);\n            stats.end();\n        };\n\n        animate();\n    }, [child, clients]);\n\n    let sendChat = (e) => {\n        e.preventDefault();\n        socket.emit(\"sendChat\", child2.value);\n        child2.value = \"\";\n    };\n\n    return (\n        <main>\n            <h1\n                style={{\n                    position: \"fixed\",\n                    marginTop: \"40px\",\n                    color: \"white\",\n                }}>\n                {typeof personData === \"undefined\" ? \"LOADING...\" : personData.name}\n            </h1>\n            <div\n                style={{\n                    width: \"100vw\",\n                    height: \"100vh\",\n                    position: \"fixed\",\n                    marginTop: \"80px\",\n                }}>\n                <CreateUI />\n                <form onSubmit={sendChat}>\n                    <input ref={(ref) => setChild2(ref)}></input>\n                    <input type=\"Submit\"></input>\n                </form>\n                {[...gameEventData].map((e) => {\n                    if (typeof e === \"undefined\") {\n                        return;\n                    }\n                    return (\n                        <h4 style={{ color: \"white\" }}>\n                            {e.name} - {e.event}\n                        </h4>\n                    );\n                })}\n            </div>\n            {typeof recievedSeed === \"undefined\" ?? <h1>LOADING SEED!</h1>}\n            <div ref={(ref) => setChild(ref)}></div>\n            <div ref={(ref) => setChild(ref)}></div>\n        </main>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}