{"ast":null,"code":"import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { wait } from \"../../Algorithms/MathUtils\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { attachToMainEventStream } from \"../../Core-API/ConnectAPI\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { createPointLight } from \"../../Core-API/LightingManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, getDayState, removeFromDayTimeHook } from \"../DayNightCycle\";\nexport class MakePlane {\n  constructor(SceneToGet, settings) {\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n    this.speed = 0;\n    this.elevatorPitch = 0;\n    this.airelonePitch = 0;\n    this.rudderPitch = 0;\n    this.checker = -1;\n  }\n\n  async loadFiles() {\n    this.plane = await addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n    this.props = await addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n    this.leftAirelone = await addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n    this.rightAirelone = await addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n    this.leftControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n    this.rightControlSurface = await addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n    this.rudder = await addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n  }\n\n  CreateGroupAndPos() {\n    this.group.add(this.plane.scene);\n    this.group.add(this.props.scene);\n    this.group.add(this.leftAirelone.scene);\n    this.group.add(this.rightAirelone.scene);\n    this.group.add(this.rightControlSurface.scene);\n    this.group.add(this.leftControlSurface.scene);\n    this.group.add(this.rudder.scene);\n    this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n    this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n    this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n    this.leftControlSurface.scene.rotateY(radiants(-7));\n    this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n    this.rightControlSurface.scene.rotateY(radiants(6.8));\n    this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n    this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n    this.rudder.scene.rotateX(radiants(-22));\n    this.props.scene.position.set(0, 15, 22);\n    this.SceneToGet.add(this.group);\n    this.group.scale.set(0.05, 0.05, 0.05);\n    let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene]; // For testing \\\\\n\n    let light = createPointLight(0xff0000, 3, [60, 22.5, -10], 2.5);\n    let light2 = createPointLight(0x00ff00, 3, [-60, 22.5, -10], 2.5);\n    let whiteLight = createPointLight(0xffffff, 3, [0, 30, -60], 2.5);\n    let day = true;\n    setInterval(() => {\n      console.log(getDayState());\n\n      if (getDayState() === false && day === true) {\n        day = false;\n        this.group.add(light);\n      } else if (getDayState() === true && day === false) {\n        day = true;\n        this.group.remove(light);\n      }\n    }, 1000);\n    let currentEvelatorPitch = 0;\n    let airelonePitch = 0;\n    let rudderPitch = 0;\n    addToRenderSequence(\"Main\", () => {\n      let direction = new Vector3();\n      this.group.getWorldDirection(direction);\n      this.group.position.add(direction.multiplyScalar(this.speed)); //this.group.position.z += this.speed;\n\n      props.rotateZ(this.speed);\n\n      if (currentEvelatorPitch < this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(-0.01);\n        this.rightAirelone.scene.rotateX(-0.01);\n        currentEvelatorPitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateX(currentEvelatorPitch / 50 * this.speed);\n      } else if (currentEvelatorPitch > this.elevatorPitch) {\n        this.leftAirelone.scene.rotateX(0.01);\n        this.rightAirelone.scene.rotateX(0.01);\n        currentEvelatorPitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateX(currentEvelatorPitch / 50 * this.speed);\n      }\n\n      if (airelonePitch < this.airelonePitch) {\n        this.leftControlSurface.scene.rotateX(0.01);\n        this.rightControlSurface.scene.rotateX(-0.01);\n        airelonePitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateZ(-airelonePitch / 50 * this.speed);\n      } else if (airelonePitch > this.airelonePitch) {\n        this.leftControlSurface.scene.rotateX(-0.01);\n        this.rightControlSurface.scene.rotateX(0.01);\n        airelonePitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateZ(-airelonePitch / 50 * this.speed);\n      }\n\n      if (rudderPitch < this.rudderPitch) {\n        this.rudder.scene.rotateY(-0.01);\n        rudderPitch += 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateY(rudderPitch / 50 * this.speed);\n      } else if (rudderPitch > this.rudderPitch) {\n        this.rudder.scene.rotateY(0.01);\n        rudderPitch -= 0.01; //if(this.speed < 0.4)return\n\n        this.group.rotateY(rudderPitch / 50 * this.speed);\n      }\n    }, false);\n    return this.group;\n  }\n\n  attachCameraAndControl(Camera) {\n    this.UUID = listenToConrols(({\n      wKey,\n      aKey,\n      sKey,\n      dKey,\n      upKey,\n      downKey,\n      eKey,\n      qKey,\n      shiftKey,\n      zKey,\n      xKey\n    }) => {\n      if (zKey) {\n        if (this.speed < 3) {\n          this.speed += 0.01;\n        }\n      }\n\n      if (xKey) {\n        if (this.speed > 0) {\n          this.speed -= 0.01;\n        }\n      }\n\n      if (wKey) {\n        this.elevatorPitch = 0.5;\n      } else if (sKey) {\n        this.elevatorPitch = -0.5;\n      } else {\n        this.elevatorPitch = 0;\n      }\n\n      if (qKey) {\n        this.rudderPitch = 0.3;\n      } else if (eKey) {\n        this.rudderPitch = -0.3;\n      } else {\n        this.rudderPitch = 0;\n      }\n\n      if (aKey) {\n        this.airelonePitch = 0.5;\n      } else if (dKey) {\n        this.airelonePitch = -0.5;\n      } else {\n        this.airelonePitch = 0;\n      }\n    });\n    this.group.add(Camera);\n    Camera.position.set(0, 40, -100);\n    Camera.rotateY(radiants(180));\n    Camera.rotateX(radiants(-20));\n  }\n\n  cleanUp() {\n    if (this.UUID !== undefined) {\n      CleanUpListener(this.UUID);\n    }\n\n    this.group.remove();\n\n    if (this.checker !== -1) {\n      removeFromDayTimeHook(this.checker);\n    }\n\n    return {\n      success: true\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","wait","addGLBFile","attachToMainEventStream","debugCube","createPointLight","addToRenderSequence","listenToConrols","addtoDayTimeChecker","getDayState","removeFromDayTimeHook","MakePlane","constructor","SceneToGet","settings","group","speed","elevatorPitch","airelonePitch","rudderPitch","checker","loadFiles","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","CreateGroupAndPos","add","scene","position","set","rotateY","rotateZ","rotateX","scale","light","light2","whiteLight","day","setInterval","console","log","remove","currentEvelatorPitch","direction","getWorldDirection","multiplyScalar","attachCameraAndControl","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","zKey","xKey","cleanUp","undefined","CleanUpListener","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { wait } from \"../../Algorithms/MathUtils\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { attachToMainEventStream } from \"../../Core-API/ConnectAPI\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { createPointLight } from \"../../Core-API/LightingManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, getDayState, removeFromDayTimeHook } from \"../DayNightCycle\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n        this.speed = 0;\n        this.elevatorPitch = 0;\n        this.airelonePitch = 0;\n        this.rudderPitch = 0;\n        this.checker = -1;\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n        this.leftControlSurface.scene.rotateY(radiants(-7));\n\n        this.rightControlSurface.scene.position.set(\n            -46.2718,\n            22.5411,\n            -13.5447\n        );\n        this.rightControlSurface.scene.rotateY(radiants(6.8));\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5));\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n        this.rudder.scene.rotateX(radiants(-22));\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene];\n        // For testing \\\\\n\n        let light = createPointLight(0xff0000, 3, [60, 22.5, -10], 2.5);\n        let light2 = createPointLight(0x00ff00, 3, [-60, 22.5, -10], 2.5);\n        let whiteLight = createPointLight(0xffffff, 3, [0, 30, -60], 2.5);\n        let day = true\n\n        setInterval(() => {\n            console.log(getDayState())\n            if(getDayState() === false && day === true){\n                day = false\n                this.group.add(light);\n            }else if(getDayState() === true && day === false){\n                day = true\n                this.group.remove(light);\n            }\n        }, 1000)\n\n        let currentEvelatorPitch = 0;\n        let airelonePitch = 0;\n        let rudderPitch = 0;\n        addToRenderSequence(\n            \"Main\",\n            () => {\n                let direction = new Vector3();\n                this.group.getWorldDirection(direction);\n                this.group.position.add(direction.multiplyScalar(this.speed));\n                //this.group.position.z += this.speed;\n\n                props.rotateZ(this.speed);\n                if (currentEvelatorPitch < this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(-0.01);\n                    this.rightAirelone.scene.rotateX(-0.01);\n                    currentEvelatorPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(\n                        (currentEvelatorPitch / 50) * this.speed\n                    );\n                } else if (currentEvelatorPitch > this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(0.01);\n                    this.rightAirelone.scene.rotateX(0.01);\n                    currentEvelatorPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(\n                        (currentEvelatorPitch / 50) * this.speed\n                    );\n                }\n\n                if (airelonePitch < this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(0.01);\n                    this.rightControlSurface.scene.rotateX(-0.01);\n                    airelonePitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ((-airelonePitch / 50) * this.speed);\n                } else if (airelonePitch > this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(-0.01);\n                    this.rightControlSurface.scene.rotateX(0.01);\n                    airelonePitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ((-airelonePitch / 50) * this.speed);\n                }\n\n                if (rudderPitch < this.rudderPitch) {\n                    this.rudder.scene.rotateY(-0.01);\n                    rudderPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY((rudderPitch / 50) * this.speed);\n                } else if (rudderPitch > this.rudderPitch) {\n                    this.rudder.scene.rotateY(0.01);\n                    rudderPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY((rudderPitch / 50) * this.speed);\n                }\n            },\n            false\n        );\n\n        return this.group;\n    }\n    attachCameraAndControl(Camera) {\n        this.UUID = listenToConrols(\n            ({\n                wKey,\n                aKey,\n                sKey,\n                dKey,\n                upKey,\n                downKey,\n                eKey,\n                qKey,\n                shiftKey,\n                zKey,\n                xKey,\n            }) => {\n                if (zKey) {\n                    if (this.speed < 3) {\n                        this.speed += 0.01;\n                    }\n                }\n                if (xKey) {\n                    if (this.speed > 0) {\n                        this.speed -= 0.01;\n                    }\n                }\n                if (wKey) {\n                    this.elevatorPitch = 0.5;\n                } else if (sKey) {\n                    this.elevatorPitch = -0.5;\n                } else {\n                    this.elevatorPitch = 0;\n                }\n                if (qKey) {\n                    this.rudderPitch = 0.3;\n                } else if (eKey) {\n                    this.rudderPitch = -0.3;\n                } else {\n                    this.rudderPitch = 0;\n                }\n\n                if (aKey) {\n                    this.airelonePitch = 0.5;\n                } else if (dKey) {\n                    this.airelonePitch = -0.5;\n                } else {\n                    this.airelonePitch = 0;\n                }\n            }\n        );\n        this.group.add(Camera);\n        Camera.position.set(0, 40, -100);\n        Camera.rotateY(radiants(180));\n        Camera.rotateX(radiants(-20));\n    }\n\n    cleanUp() {\n        if (this.UUID !== undefined) {\n            CleanUpListener(this.UUID);\n        }\n        this.group.remove();\n        if (this.checker !== -1) {\n            removeFromDayTimeHook(this.checker);\n        }\n        return { success: true };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}