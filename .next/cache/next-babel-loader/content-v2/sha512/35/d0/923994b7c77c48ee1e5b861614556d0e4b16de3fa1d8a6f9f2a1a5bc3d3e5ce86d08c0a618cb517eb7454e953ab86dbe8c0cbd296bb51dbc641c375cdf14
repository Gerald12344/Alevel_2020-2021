{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, removeFromDayTimeHook } from \"../DayNightCycle\";\nexport var MakePlane = /*#__PURE__*/function () {\n  function MakePlane(SceneToGet, settings) {\n    _classCallCheck(this, MakePlane);\n\n    this.SceneToGet = SceneToGet;\n    this.settings = settings;\n    this.group = new Group();\n    this.speed = 0;\n    this.elevatorPitch = 0;\n    this.airelonePitch = 0;\n    this.rudderPitch = 0;\n    this.checker = -1;\n  }\n\n  _createClass(MakePlane, [{\n    key: \"loadFiles\",\n    value: function () {\n      var _loadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return addGLBFile(\"/Aircraft/BasicPlane/Plane.glb\", this.SceneToGet);\n\n              case 2:\n                this.plane = _context.sent;\n                _context.next = 5;\n                return addGLBFile(\"/Aircraft/BasicPlane/Blades.glb\", this.SceneToGet);\n\n              case 5:\n                this.props = _context.sent;\n                _context.next = 8;\n                return addGLBFile(\"/Aircraft/BasicPlane/leftAirelone.glb\", this.SceneToGet);\n\n              case 8:\n                this.leftAirelone = _context.sent;\n                _context.next = 11;\n                return addGLBFile(\"/Aircraft/BasicPlane/rightAirelone.glb\", this.SceneToGet);\n\n              case 11:\n                this.rightAirelone = _context.sent;\n                _context.next = 14;\n                return addGLBFile(\"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\", this.SceneToGet);\n\n              case 14:\n                this.leftControlSurface = _context.sent;\n                _context.next = 17;\n                return addGLBFile(\"/Aircraft/BasicPlane/RightWingControlsSurface.glb\", this.SceneToGet);\n\n              case 17:\n                this.rightControlSurface = _context.sent;\n                _context.next = 20;\n                return addGLBFile(\"/Aircraft/BasicPlane/Rudder.glb\", this.SceneToGet);\n\n              case 20:\n                this.rudder = _context.sent;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadFiles() {\n        return _loadFiles.apply(this, arguments);\n      }\n\n      return loadFiles;\n    }()\n  }, {\n    key: \"CreateGroupAndPos\",\n    value: function CreateGroupAndPos() {\n      var _this = this;\n\n      this.group.add(this.plane.scene);\n      this.group.add(this.props.scene);\n      this.group.add(this.leftAirelone.scene);\n      this.group.add(this.rightAirelone.scene);\n      this.group.add(this.rightControlSurface.scene);\n      this.group.add(this.leftControlSurface.scene);\n      this.group.add(this.rudder.scene);\n      this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n      this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n      this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n      this.leftControlSurface.scene.rotateY(radiants(-7));\n      this.rightControlSurface.scene.position.set(-46.2718, 22.5411, -13.5447);\n      this.rightControlSurface.scene.rotateY(radiants(6.8));\n      this.rightControlSurface.scene.rotateZ(radiants(-3.5)); //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n      this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n      this.rudder.scene.rotateX(radiants(-22));\n      this.props.scene.position.set(0, 15, 22);\n      this.SceneToGet.add(this.group);\n      this.group.scale.set(0.05, 0.05, 0.05);\n      var _ref = [this.props.scene, this.leftAirelone.scene],\n          props = _ref[0],\n          leftAirelone = _ref[1]; // For testing \\\\\n\n      this.checker = addtoDayTimeChecker(function (time) {\n        console.log(time);\n      });\n      var currentEvelatorPitch = 0;\n      var airelonePitch = 0;\n      var rudderPitch = 0;\n      addToRenderSequence(\"Main\", function () {\n        var direction = new Vector3();\n\n        _this.group.getWorldDirection(direction);\n\n        _this.group.position.add(direction.multiplyScalar(_this.speed)); //this.group.position.z += this.speed;\n\n\n        props.rotateZ(_this.speed);\n\n        if (currentEvelatorPitch < _this.elevatorPitch) {\n          _this.leftAirelone.scene.rotateX(-0.01);\n\n          _this.rightAirelone.scene.rotateX(-0.01);\n\n          currentEvelatorPitch += 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateX(currentEvelatorPitch / 50 * _this.speed);\n        } else if (currentEvelatorPitch > _this.elevatorPitch) {\n          _this.leftAirelone.scene.rotateX(0.01);\n\n          _this.rightAirelone.scene.rotateX(0.01);\n\n          currentEvelatorPitch -= 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateX(currentEvelatorPitch / 50 * _this.speed);\n        }\n\n        if (airelonePitch < _this.airelonePitch) {\n          _this.leftControlSurface.scene.rotateX(0.01);\n\n          _this.rightControlSurface.scene.rotateX(-0.01);\n\n          airelonePitch += 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateZ(-airelonePitch / 50 * _this.speed);\n        } else if (airelonePitch > _this.airelonePitch) {\n          _this.leftControlSurface.scene.rotateX(-0.01);\n\n          _this.rightControlSurface.scene.rotateX(0.01);\n\n          airelonePitch -= 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateZ(-airelonePitch / 50 * _this.speed);\n        }\n\n        if (rudderPitch < _this.rudderPitch) {\n          _this.rudder.scene.rotateY(-0.01);\n\n          rudderPitch += 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateY(rudderPitch / 50 * _this.speed);\n        } else if (rudderPitch > _this.rudderPitch) {\n          _this.rudder.scene.rotateY(0.01);\n\n          rudderPitch -= 0.01; //if(this.speed < 0.4)return\n\n          _this.group.rotateY(rudderPitch / 50 * _this.speed);\n        }\n      }, false);\n      return this.group;\n    }\n  }, {\n    key: \"attachCameraAndControl\",\n    value: function attachCameraAndControl(Camera) {\n      var _this2 = this;\n\n      this.UUID = listenToConrols(function (_ref2) {\n        var wKey = _ref2.wKey,\n            aKey = _ref2.aKey,\n            sKey = _ref2.sKey,\n            dKey = _ref2.dKey,\n            upKey = _ref2.upKey,\n            downKey = _ref2.downKey,\n            eKey = _ref2.eKey,\n            qKey = _ref2.qKey,\n            shiftKey = _ref2.shiftKey,\n            zKey = _ref2.zKey,\n            xKey = _ref2.xKey;\n\n        if (zKey) {\n          if (_this2.speed < 3) {\n            _this2.speed += 0.01;\n          }\n        }\n\n        if (xKey) {\n          if (_this2.speed > 0) {\n            _this2.speed -= 0.01;\n          }\n        }\n\n        if (wKey) {\n          _this2.elevatorPitch = 0.5;\n        } else if (sKey) {\n          _this2.elevatorPitch = -0.5;\n        } else {\n          _this2.elevatorPitch = 0;\n        }\n\n        if (qKey) {\n          _this2.rudderPitch = 0.3;\n        } else if (eKey) {\n          _this2.rudderPitch = -0.3;\n        } else {\n          _this2.rudderPitch = 0;\n        }\n\n        if (aKey) {\n          _this2.airelonePitch = 0.5;\n        } else if (dKey) {\n          _this2.airelonePitch = -0.5;\n        } else {\n          _this2.airelonePitch = 0;\n        }\n      });\n      this.group.add(Camera);\n      Camera.position.set(0, 40, -100);\n      Camera.rotateY(radiants(180));\n      Camera.rotateX(radiants(-20));\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function cleanUp() {\n      if (this.UUID !== undefined) {\n        CleanUpListener(this.UUID);\n      }\n\n      this.group.remove();\n\n      if (this.checker !== -1) {\n        removeFromDayTimeHook(this.checker);\n      }\n\n      return {\n        success: true\n      };\n    }\n  }]);\n\n  return MakePlane;\n}();","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/planeHandler/MainPlane.js"],"names":["Group","MeshPhongMaterial","Vector3","radiants","addGLBFile","debugCube","addToRenderSequence","listenToConrols","addtoDayTimeChecker","removeFromDayTimeHook","MakePlane","SceneToGet","settings","group","speed","elevatorPitch","airelonePitch","rudderPitch","checker","plane","props","leftAirelone","rightAirelone","leftControlSurface","rightControlSurface","rudder","add","scene","position","set","rotateY","rotateZ","rotateX","scale","time","console","log","currentEvelatorPitch","direction","getWorldDirection","multiplyScalar","Camera","UUID","wKey","aKey","sKey","dKey","upKey","downKey","eKey","qKey","shiftKey","zKey","xKey","undefined","CleanUpListener","remove","success"],"mappings":"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","sourcesContent":["import { Group, MeshPhongMaterial, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nimport { debugCube } from \"../../Core-API/gemotryManager\";\nimport { addToRenderSequence } from \"../../Core-API/RenderingHandler\";\nimport { listenToConrols } from \"../controls\";\nimport { addtoDayTimeChecker, removeFromDayTimeHook } from \"../DayNightCycle\";\n\nexport class MakePlane {\n    constructor(SceneToGet, settings) {\n        this.SceneToGet = SceneToGet;\n        this.settings = settings;\n        this.group = new Group();\n        this.speed = 0;\n        this.elevatorPitch = 0;\n        this.airelonePitch = 0;\n        this.rudderPitch = 0;\n        this.checker = -1;\n    }\n\n    async loadFiles() {\n        this.plane = await addGLBFile(\n            \"/Aircraft/BasicPlane/Plane.glb\",\n            this.SceneToGet\n        );\n        this.props = await addGLBFile(\n            \"/Aircraft/BasicPlane/Blades.glb\",\n            this.SceneToGet\n        );\n        this.leftAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/leftAirelone.glb\",\n            this.SceneToGet\n        );\n        this.rightAirelone = await addGLBFile(\n            \"/Aircraft/BasicPlane/rightAirelone.glb\",\n            this.SceneToGet\n        );\n        this.leftControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/LeftWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rightControlSurface = await addGLBFile(\n            \"/Aircraft/BasicPlane/RightWingControlsSurface.glb\",\n            this.SceneToGet\n        );\n        this.rudder = await addGLBFile(\n            \"/Aircraft/BasicPlane/Rudder.glb\",\n            this.SceneToGet\n        );\n    }\n\n    CreateGroupAndPos() {\n        this.group.add(this.plane.scene);\n        this.group.add(this.props.scene);\n        this.group.add(this.leftAirelone.scene);\n        this.group.add(this.rightAirelone.scene);\n        this.group.add(this.rightControlSurface.scene);\n        this.group.add(this.leftControlSurface.scene);\n        this.group.add(this.rudder.scene);\n\n        this.leftAirelone.scene.position.set(12.936, 15.994, -59.264);\n        this.rightAirelone.scene.position.set(-12.495, 15.888, -59.294);\n\n        this.leftControlSurface.scene.position.set(46.243, 22.536, -13.541);\n        this.leftControlSurface.scene.rotateY(radiants(-7));\n\n        this.rightControlSurface.scene.position.set(\n            -46.2718,\n            22.5411,\n            -13.5447\n        );\n        this.rightControlSurface.scene.rotateY(radiants(6.8));\n        this.rightControlSurface.scene.rotateZ(radiants(-3.5));\n        //this.rightControlSurface.scene.rotateX(radiants(183.57))\n\n        this.rudder.scene.position.set(-0.022, 24.67, -68.17);\n        this.rudder.scene.rotateX(radiants(-22));\n\n        this.props.scene.position.set(0, 15, 22);\n        this.SceneToGet.add(this.group);\n\n        this.group.scale.set(0.05, 0.05, 0.05);\n\n        let [props, leftAirelone] = [this.props.scene, this.leftAirelone.scene];\n        // For testing \\\\\n\n        this.checker = addtoDayTimeChecker((time) => {\n            console.log(time)\n        })\n\n        let currentEvelatorPitch = 0;\n        let airelonePitch = 0;\n        let rudderPitch = 0;\n        addToRenderSequence(\n            \"Main\",\n            () => {\n                let direction = new Vector3();\n                this.group.getWorldDirection(direction);\n                this.group.position.add(\n                    direction.multiplyScalar(this.speed)\n                );\n                //this.group.position.z += this.speed;\n\n                props.rotateZ(this.speed);\n                if (currentEvelatorPitch < this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(-0.01);\n                    this.rightAirelone.scene.rotateX(-0.01);\n                    currentEvelatorPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(currentEvelatorPitch / 50 * (this.speed));\n                } else if (currentEvelatorPitch > this.elevatorPitch) {\n                    this.leftAirelone.scene.rotateX(0.01);\n                    this.rightAirelone.scene.rotateX(0.01);\n                    currentEvelatorPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateX(currentEvelatorPitch / 50* (this.speed));\n                }\n\n                if (airelonePitch < this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(0.01);\n                    this.rightControlSurface.scene.rotateX(-0.01);\n                    airelonePitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ(-airelonePitch / 50* (this.speed));\n                } else if (airelonePitch > this.airelonePitch) {\n                    this.leftControlSurface.scene.rotateX(-0.01);\n                    this.rightControlSurface.scene.rotateX(0.01);\n                    airelonePitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateZ(-airelonePitch / 50* (this.speed));\n                }\n\n                if (rudderPitch < this.rudderPitch) {\n                    this.rudder.scene.rotateY(-0.01);\n                    rudderPitch += 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY(rudderPitch / 50* (this.speed));\n                } else if (rudderPitch > this.rudderPitch) {\n                    this.rudder.scene.rotateY(0.01);\n                    rudderPitch -= 0.01;\n                    //if(this.speed < 0.4)return\n                    this.group.rotateY(rudderPitch / 50* (this.speed));\n                }\n            },\n            false\n        );\n\n        return this.group;\n    }\n    attachCameraAndControl(Camera) {\n        this.UUID = listenToConrols(\n            ({\n                wKey,\n                aKey,\n                sKey,\n                dKey,\n                upKey,\n                downKey,\n                eKey,\n                qKey,\n                shiftKey,\n                zKey,\n                xKey\n            }) => {\n                if (zKey) {\n                    if (this.speed < 3) {\n                        this.speed += 0.01;\n                    }\n                }\n                if (xKey) {\n                    if (this.speed > 0) {\n                        this.speed -= 0.01;\n                    }\n                }\n                if (wKey) {\n                    this.elevatorPitch = 0.5;\n                } else if (sKey) {\n                    this.elevatorPitch = -0.5;\n                } else {\n                    this.elevatorPitch = 0;\n                }\n                if (qKey) {\n                    this.rudderPitch = 0.3;\n                } else if (eKey) {\n                    this.rudderPitch = -0.3;\n                } else {\n                    this.rudderPitch = 0;\n                }\n\n                if (aKey) {\n                    this.airelonePitch = 0.5;\n                } else if (dKey) {\n                    this.airelonePitch = -0.5;\n                } else {\n                    this.airelonePitch = 0;\n                }\n            }\n\n        );\n        this.group.add(Camera);\n        Camera.position.set(0, 40, -100);\n        Camera.rotateY(radiants(180));\n        Camera.rotateX(radiants(-20));\n    }\n\n    cleanUp() {\n        if (this.UUID !== undefined) {\n            CleanUpListener(this.UUID);\n        }\n        this.group.remove();\n        if(this.checker !== -1){\n            removeFromDayTimeHook(this.checker)\n        }\n        return { success: true };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}