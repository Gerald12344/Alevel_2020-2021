{"ast":null,"code":"import _regeneratorRuntime from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/year12/Desktop/Harvey/alevel_2020-2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Written By Harvey Randall \\\\\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\"; //Functional Dependencies\n\nimport { DoubleSide, GridHelper, Mesh, MeshStandardMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { generateTerrain } from \"../gameFundalmentals/ProceduleTerrain\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { GenerateTrees } from \"../gameFundalmentals/staticAssets/treeBuilder\";\nimport { generateTerrainAroundPlayer } from \"../gameFundalmentals/TerrainManagement/terrainChunkriser\";\nvar debug = true;\nexport function generateMainScene(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _generateMainScene.apply(this, arguments);\n}\n\nfunction _generateMainScene() {\n  _generateMainScene = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(SceneToGet, Renders, document, seed, child2, Camera) {\n    var clouds, i, daynight, planeGeometry, planeMaterial, plane, gridHelper, newPlane;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clouds = [];\n\n            for (i = 0; i < 40; i++) {\n              clouds.push(new GenerateClouds(new Vector3(Math.random() * 300 - 300, 80 + Math.random() * 20, Math.random() * 600 - 400), SceneToGet, Math.random() * 0.2, Math.random() * 6 + 1));\n            }\n\n            daynight = new CreateDayNightCycle(SceneToGet, Renders); //generateTerrain(seed, SceneToGet);\n\n            controlHandlerInit(document, child2);\n\n            if (debug) {\n              planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n              planeGeometry.rotateX(Math.PI / 2);\n              planeMaterial = new MeshStandardMaterial({\n                color: \"#567d46\",\n                side: DoubleSide\n              });\n              plane = new Mesh(planeGeometry, planeMaterial);\n              plane.position.y = -0.5;\n              SceneToGet.add(plane);\n              gridHelper = new GridHelper(50, 50);\n              gridHelper.position.y = -1;\n              SceneToGet.add(gridHelper);\n            } // Add all updating parts to a function\n\n\n            addToRenderSequence(\"Main\", function () {\n              clouds.forEach(function (e, i) {\n                e.update();\n              });\n            }, true);\n            newPlane = new MakePlane(SceneToGet);\n            _context.next = 9;\n            return newPlane.loadFiles();\n\n          case 9:\n            newPlane.CreateGroupAndPos();\n            newPlane.attachCameraAndControl(Camera);\n            GenerateTrees(1000, SceneToGet, new Vector3(-500, -500, -500), new Vector3(500, 500, 500), seed);\n            generateTerrainAroundPlayer(seed, Camera, SceneToGet); //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n\n            addToRenderSequence(\"Main\", function () {\n              return daynight.update();\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _generateMainScene.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/Scenes/MainSceneHandler.js"],"names":["addToRenderSequence","DoubleSide","GridHelper","Mesh","MeshStandardMaterial","PlaneGeometry","Vector3","GenerateClouds","controlHandlerInit","controlHandlerUpdate","CreateDayNightCycle","generateTerrain","MakePlane","GenerateTrees","generateTerrainAroundPlayer","debug","generateMainScene","SceneToGet","Renders","document","seed","child2","Camera","clouds","i","push","Math","random","daynight","planeGeometry","rotateX","PI","planeMaterial","color","side","plane","position","y","add","gridHelper","forEach","e","update","newPlane","loadFiles","CreateGroupAndPos","attachCameraAndControl"],"mappings":";;AAAA;AAEA;AACA,SAASA,mBAAT,QAAoC,8BAApC,C,CAEA;;AACA,SACIC,UADJ,EAEIC,UAFJ,EAGIC,IAHJ,EAIIC,oBAJJ,EAKIC,aALJ,EAMIC,OANJ,QAOO,OAPP;AAQA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,+BAAzD;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,SAAT,QAA0B,6CAA1B;AACA,SAASC,aAAT,QAA8B,+CAA9B;AACA,SAASC,2BAAT,QAA4C,0DAA5C;AAEA,IAAIC,KAAK,GAAG,IAAZ;AAEA,gBAAsBC,iBAAtB;AAAA;AAAA;;;gFAAO,iBACHC,UADG,EAEHC,OAFG,EAGHC,QAHG,EAIHC,IAJG,EAKHC,MALG,EAMHC,MANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAQCC,YAAAA,MARD,GAQU,EARV;;AASH,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,cAAAA,MAAM,CAACE,IAAP,CACI,IAAIlB,cAAJ,CACI,IAAID,OAAJ,CACIoB,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAD1B,EAEI,KAAKD,IAAI,CAACC,MAAL,KAAgB,EAFzB,EAGID,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAH1B,CADJ,EAMIV,UANJ,EAOIS,IAAI,CAACC,MAAL,KAAgB,GAPpB,EAQID,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CARxB,CADJ;AAYH;;AAEGC,YAAAA,QAxBD,GAwBY,IAAIlB,mBAAJ,CAAwBO,UAAxB,EAAoCC,OAApC,CAxBZ,EAyBH;;AACAV,YAAAA,kBAAkB,CAACW,QAAD,EAAWE,MAAX,CAAlB;;AAEA,gBAAIN,KAAJ,EAAW;AACDc,cAAAA,aADC,GACe,IAAIxB,aAAJ,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CADf;AAEPwB,cAAAA,aAAa,CAACC,OAAd,CAAsBJ,IAAI,CAACK,EAAL,GAAU,CAAhC;AACMC,cAAAA,aAHC,GAGe,IAAI5B,oBAAJ,CAAyB;AAC3C6B,gBAAAA,KAAK,EAAE,SADoC;AAE3CC,gBAAAA,IAAI,EAAEjC;AAFqC,eAAzB,CAHf;AAODkC,cAAAA,KAPC,GAOO,IAAIhC,IAAJ,CAAS0B,aAAT,EAAwBG,aAAxB,CAPP;AAQPG,cAAAA,KAAK,CAACC,QAAN,CAAeC,CAAf,GAAmB,CAAC,GAApB;AACApB,cAAAA,UAAU,CAACqB,GAAX,CAAeH,KAAf;AACMI,cAAAA,UAVC,GAUY,IAAIrC,UAAJ,CAAe,EAAf,EAAmB,EAAnB,CAVZ;AAWPqC,cAAAA,UAAU,CAACH,QAAX,CAAoBC,CAApB,GAAwB,CAAC,CAAzB;AACApB,cAAAA,UAAU,CAACqB,GAAX,CAAeC,UAAf;AACH,aAzCE,CA4CH;;;AACAvC,YAAAA,mBAAmB,CACf,MADe,EAEf,YAAM;AACFuB,cAAAA,MAAM,CAACiB,OAAP,CAAe,UAACC,CAAD,EAAIjB,CAAJ,EAAU;AACrBiB,gBAAAA,CAAC,CAACC,MAAF;AACH,eAFD;AAGH,aANc,EAOf,IAPe,CAAnB;AASIC,YAAAA,QAtDD,GAsDY,IAAI/B,SAAJ,CAAcK,UAAd,CAtDZ;AAAA;AAAA,mBAuDG0B,QAAQ,CAACC,SAAT,EAvDH;;AAAA;AAwDHD,YAAAA,QAAQ,CAACE,iBAAT;AACAF,YAAAA,QAAQ,CAACG,sBAAT,CAAgCxB,MAAhC;AAEAT,YAAAA,aAAa,CAAC,IAAD,EAAOI,UAAP,EAAmB,IAAIX,OAAJ,CAAY,CAAC,GAAb,EAAiB,CAAC,GAAlB,EAAsB,CAAC,GAAvB,CAAnB,EAAgD,IAAIA,OAAJ,CAAY,GAAZ,EAAgB,GAAhB,EAAoB,GAApB,CAAhD,EAA0Ec,IAA1E,CAAb;AAEAN,YAAAA,2BAA2B,CAACM,IAAD,EAAOE,MAAP,EAAeL,UAAf,CAA3B,CA7DG,CA+DH;;AACAjB,YAAAA,mBAAmB,CAAC,MAAD,EAAS;AAAA,qBAAM4B,QAAQ,CAACc,MAAT,EAAN;AAAA,aAAT,CAAnB;;AAhEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// Written By Harvey Randall \\\\\n\n// Render Handler\nimport { addToRenderSequence } from \"../Core-API/RenderingHandler\";\n\n//Functional Dependencies\nimport {\n    DoubleSide,\n    GridHelper,\n    Mesh,\n    MeshStandardMaterial,\n    PlaneGeometry,\n    Vector3,\n} from \"three\";\nimport { GenerateClouds } from \"../gameFundalmentals/clouds\";\nimport { controlHandlerInit, controlHandlerUpdate } from \"../gameFundalmentals/controls\";\nimport { CreateDayNightCycle } from \"../gameFundalmentals/DayNightCycle\";\nimport { generateTerrain } from \"../gameFundalmentals/ProceduleTerrain\";\nimport { MakePlane } from \"../gameFundalmentals/planeHandler/MainPlane\";\nimport { GenerateTrees } from \"../gameFundalmentals/staticAssets/treeBuilder\";\nimport { generateTerrainAroundPlayer } from \"../gameFundalmentals/TerrainManagement/terrainChunkriser\";\n\nlet debug = true;\n\nexport async function generateMainScene(\n    SceneToGet,\n    Renders,\n    document,\n    seed,\n    child2,\n    Camera\n) {\n    let clouds = [];\n    for (let i = 0; i < 40; i++) {\n        clouds.push(\n            new GenerateClouds(\n                new Vector3(\n                    Math.random() * 300 - 300,\n                    80 + Math.random() * 20,\n                    Math.random() * 600 - 400\n                ),\n                SceneToGet,\n                Math.random() * 0.2,\n                Math.random() * 6 + 1\n            )\n        );\n    }\n\n    let daynight = new CreateDayNightCycle(SceneToGet, Renders);\n    //generateTerrain(seed, SceneToGet);\n    controlHandlerInit(document, child2);\n\n    if (debug) {\n        const planeGeometry = new PlaneGeometry(20, 20, 32, 32);\n        planeGeometry.rotateX(Math.PI / 2);\n        const planeMaterial = new MeshStandardMaterial({\n            color: \"#567d46\",\n            side: DoubleSide,\n        });\n        const plane = new Mesh(planeGeometry, planeMaterial);\n        plane.position.y = -0.5;\n        SceneToGet.add(plane);\n        const gridHelper = new GridHelper(50, 50);\n        gridHelper.position.y = -1;\n        SceneToGet.add(gridHelper);\n    }\n\n\n    // Add all updating parts to a function\n    addToRenderSequence(\n        \"Main\",\n        () => {\n            clouds.forEach((e, i) => {\n                e.update();\n            });\n        },\n        true\n    );\n    let newPlane = new MakePlane(SceneToGet)\n    await newPlane.loadFiles()\n    newPlane.CreateGroupAndPos()\n    newPlane.attachCameraAndControl(Camera)\n\n    GenerateTrees(1000, SceneToGet, new Vector3(-500,-500,-500), new Vector3(500,500,500), seed)\n\n    generateTerrainAroundPlayer(seed, Camera, SceneToGet)\n\n    //addToRenderSequence(\"Main\", () => controlHandlerUpdate(Camera));\n    addToRenderSequence(\"Main\", () => daynight.update());\n}\n"]},"metadata":{},"sourceType":"module"}