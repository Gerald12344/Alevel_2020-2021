{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js\";\n// Written By Harvey Randall \\\\\nimport { useEffect, useState } from \"react\";\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nexport default function render() {\n  const {\n    0: child,\n    1: setChild\n  } = useState(undefined);\n  const {\n    0: Renders,\n    1: setRenders\n  } = useState(undefined);\n  const {\n    0: SceneToGet,\n    1: setSceneToGet\n  } = useState(undefined);\n  useEffect(() => {\n    setSceneToGet(new Scene());\n    setRenders(new WebGLRenderer());\n  }, []);\n  useEffect(() => {\n    if (child === undefined || Renders === undefined || SceneToGet === undefined) return;\n    Renders.setSize(window.innerWidth, window.innerHeight);\n    child.appendChild(Renders.domElement);\n    var geometry = new BoxGeometry(1, 1, 1);\n    var material = new MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new Mesh(geometry, material);\n    SceneToGet.add(cube);\n    var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n  }, [child, Renders, SceneToGet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => setChild(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/pages/test.js"],"names":["useEffect","useState","BoxGeometry","Mesh","MeshBasicMaterial","PerspectiveCamera","Scene","WebGLRenderer","render","child","setChild","undefined","Renders","setRenders","SceneToGet","setSceneToGet","setSize","window","innerWidth","innerHeight","appendChild","domElement","geometry","material","color","cube","add","Camera","camera","position","z","ref"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,KAAlE,EAAyEC,aAAzE,QAA8F,OAA9F;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAACU,SAAD,CAAlC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAACU,SAAD,CAAtC;AACA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAACU,SAAD,CAA5C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,aAAa,CAAC,IAAIT,KAAJ,EAAD,CAAb;AACAO,IAAAA,UAAU,CAAC,IAAIN,aAAJ,EAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,KAAK,KAAKE,SAAV,IAAuBC,OAAO,KAAKD,SAAnC,IAAgDG,UAAU,KAAKH,SAAnE,EAA8E;AAC9EC,IAAAA,OAAO,CAACI,OAAR,CAAgBC,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACE,WAA1C;AACAV,IAAAA,KAAK,CAACW,WAAN,CAAkBR,OAAO,CAACS,UAA1B;AAEA,QAAIC,QAAQ,GAAG,IAAIpB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAf;AACA,QAAIqB,QAAQ,GAAG,IAAInB,iBAAJ,CAAsB;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KAAtB,CAAf;AACA,QAAIC,IAAI,GAAG,IAAItB,IAAJ,CAASmB,QAAT,EAAmBC,QAAnB,CAAX;AACAT,IAAAA,UAAU,CAACY,GAAX,CAAeD,IAAf;AACA,QAAIE,MAAM,GAAG,IAAItB,iBAAJ,CAAsB,EAAtB,EAA0BY,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAArD,EAAkE,GAAlE,EAAuE,IAAvE,CAAb;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACH,GAXQ,EAWN,CAACrB,KAAD,EAAQG,OAAR,EAAiBE,UAAjB,CAXM,CAAT;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEiB,GAAG,IAAKrB,QAAQ,CAACqB,GAAD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH","sourcesContent":["// Written By Harvey Randall \\\\\n\nimport { useEffect, useState } from \"react\"\nimport { BoxGeometry, Mesh, MeshBasicMaterial, PerspectiveCamera, Scene, WebGLRenderer } from \"three\"\n\nexport default function render() {\n    const [child, setChild] = useState(undefined)\n    const [Renders, setRenders] = useState(undefined)\n    const [SceneToGet, setSceneToGet] = useState(undefined)\n\n    useEffect(() => {\n        setSceneToGet(new Scene())\n        setRenders(new WebGLRenderer())\n    }, [])\n\n    useEffect(() => {\n        if (child === undefined || Renders === undefined || SceneToGet === undefined) return;\n        Renders.setSize(window.innerWidth, window.innerHeight)\n        child.appendChild(Renders.domElement);\n\n        var geometry = new BoxGeometry(1, 1, 1);\n        var material = new MeshBasicMaterial({ color: 0x00ff00 });\n        var cube = new Mesh(geometry, material);\n        SceneToGet.add(cube);\n        var Camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        camera.position.z = 5;\n    }, [child, Renders, SceneToGet])\n\n    return (\n        <>\n            <div ref={ref => (setChild(ref))} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}