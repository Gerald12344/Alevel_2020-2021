{"ast":null,"code":"import { Group, Raycaster, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\nexport async function GenerateTrees(num, scene, start, bounds, seed) {\n  let tree = await addGLBFile(\"/Assets/PineTree.glb\", scene);\n  scene.add(tree.scene);\n  console.log(tree.scene.children);\n  tree.scene.children[0].material.color.setHex(0x694b37);\n  tree.scene.children[1].material.color.setHex(0x216734);\n  let group = new Group();\n  let raycaster = new Raycaster();\n\n  for (let i = 0; i < num; i++) {\n    let newTree = tree.scene.clone();\n    let randomVector = new Vector3(Math.random() * 50, Math.random() * 50, Math.random() * 50);\n    raycaster.set();\n    newTree.rotateY(radiants(Math.random() * 360));\n    newTree.position.set(Math.random() * 50, Math.random() * 50, Math.random() * 50);\n    group.add(newTree);\n    console.log('here');\n  }\n\n  scene.add(group);\n}","map":{"version":3,"sources":["/Users/year12/Desktop/Harvey/alevel_2020-2021/components/gameFundalmentals/staticAssets/treeBuilder.js"],"names":["Group","Raycaster","Vector3","radiants","addGLBFile","GenerateTrees","num","scene","start","bounds","seed","tree","add","console","log","children","material","color","setHex","group","raycaster","i","newTree","clone","randomVector","Math","random","set","rotateY","position"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,UAAT,QAA2B,0CAA3B;AAEA,OAAO,eAAeC,aAAf,CAA6BC,GAA7B,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,MAAhD,EAAwDC,IAAxD,EAA6D;AAChE,MAAIC,IAAI,GAAG,MAAMP,UAAU,CACvB,sBADuB,EAEvBG,KAFuB,CAA3B;AAIAA,EAAAA,KAAK,CAACK,GAAN,CAAUD,IAAI,CAACJ,KAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACJ,KAAL,CAAWQ,QAAvB;AACAJ,EAAAA,IAAI,CAACJ,KAAL,CAAWQ,QAAX,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,KAAhC,CAAsCC,MAAtC,CAA8C,QAA9C;AACAP,EAAAA,IAAI,CAACJ,KAAL,CAAWQ,QAAX,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,KAAhC,CAAsCC,MAAtC,CAA8C,QAA9C;AAEA,MAAIC,KAAK,GAAG,IAAInB,KAAJ,EAAZ;AACA,MAAIoB,SAAS,GAAG,IAAInB,SAAJ,EAAhB;;AACA,OAAI,IAAIoB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACf,GAAd,EAAkBe,CAAC,EAAnB,EAAsB;AAClB,QAAIC,OAAO,GAAGX,IAAI,CAACJ,KAAL,CAAWgB,KAAX,EAAd;AACA,QAAIC,YAAY,GAAG,IAAItB,OAAJ,CAAYuB,IAAI,CAACC,MAAL,KAAc,EAA1B,EAA6BD,IAAI,CAACC,MAAL,KAAc,EAA3C,EAA+CD,IAAI,CAACC,MAAL,KAAc,EAA7D,CAAnB;AAEAN,IAAAA,SAAS,CAACO,GAAV;AAEAL,IAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAQ,CAACsB,IAAI,CAACC,MAAL,KAAc,GAAf,CAAxB;AACAJ,IAAAA,OAAO,CAACO,QAAR,CAAiBF,GAAjB,CAAqBF,IAAI,CAACC,MAAL,KAAc,EAAnC,EAAsCD,IAAI,CAACC,MAAL,KAAc,EAApD,EAAwDD,IAAI,CAACC,MAAL,KAAc,EAAtE;AACAP,IAAAA,KAAK,CAACP,GAAN,CAAUU,OAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDP,EAAAA,KAAK,CAACK,GAAN,CAAUO,KAAV;AACH","sourcesContent":["import { Group, Raycaster, Vector3 } from \"three\";\nimport { radiants } from \"../../Algorithms/degToRad\";\nimport { addGLBFile } from \"../../Core-API/3dModelHandlers/GLBLoader\";\n\nexport async function GenerateTrees(num, scene, start, bounds, seed){\n    let tree = await addGLBFile(\n        \"/Assets/PineTree.glb\",\n        scene\n    );\n    scene.add(tree.scene)\n    console.log(tree.scene.children)\n    tree.scene.children[0].material.color.setHex( 0x694b37 );\n    tree.scene.children[1].material.color.setHex( 0x216734 );\n    \n    let group = new Group()\n    let raycaster = new Raycaster()\n    for(let i=0;i<num;i++){\n        let newTree = tree.scene.clone()\n        let randomVector = new Vector3(Math.random()*50,Math.random()*50, Math.random()*50)\n\n        raycaster.set()\n\n        newTree.rotateY(radiants(Math.random()*360))\n        newTree.position.set(Math.random()*50,Math.random()*50, Math.random()*50)\n        group.add(newTree)\n        console.log('here')\n    }\n    scene.add(group)\n}"]},"metadata":{},"sourceType":"module"}