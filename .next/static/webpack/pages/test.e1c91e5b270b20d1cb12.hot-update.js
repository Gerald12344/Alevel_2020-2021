/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/test",{

/***/ "./components/gameFundalmentals/ProceduleTerrain.js":
/*!**********************************************************!*\
  !*** ./components/gameFundalmentals/ProceduleTerrain.js ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReturnTerrainPointer\": function() { return /* binding */ ReturnTerrainPointer; },\n/* harmony export */   \"generateTerrain\": function() { return /* binding */ generateTerrain; },\n/* harmony export */   \"generateTerrainChunk\": function() { return /* binding */ generateTerrainChunk; },\n/* harmony export */   \"getTerrainHeight\": function() { return /* binding */ getTerrainHeight; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _Algorithms_VectorUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Algorithms/VectorUtils */ \"./components/Algorithms/VectorUtils.js\");\n/* harmony import */ var _Core_API_gemotryManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core-API/gemotryManager */ \"./components/Core-API/gemotryManager.js\");\n/* harmony import */ var _Core_API_PerlinNoise_PerlingNoise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core-API/PerlinNoise/PerlingNoise */ \"./components/Core-API/PerlinNoise/PerlingNoise.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n// Written By Harvey Randall \\\\\n\n\n\n\n\nvar SimplexNoise = __webpack_require__(/*! simplex-noise */ \"./node_modules/simplex-noise/simplex-noise.js\");\n\nvar currentTerrain;\nfunction ReturnTerrainPointer() {\n  return currentTerrain;\n}\n/*eslint complexity: [\"error\", 20]*/\n\n_c = ReturnTerrainPointer;\nfunction generateTerrain(seed, SceneToGet) {\n  //------------[MAIN FUNCTION VARIABLES]------------\\\\\n  var simplex = new SimplexNoise(seed);\n  var geometry = new three__WEBPACK_IMPORTED_MODULE_3__.PlaneBufferGeometry(500, 500, 100, 100);\n  var colours = [];\n  var positionAttribute = geometry.getAttribute(\"position\"); //------------[Edit the Geomtry Accordingly]------------\\\\\n\n  for (var i = 0, l = geometry.attributes.position.count; i < l; i++) {\n    // Get Data position\n    var vertex = new three__WEBPACK_IMPORTED_MODULE_3__.Vector3();\n    vertex.fromBufferAttribute(positionAttribute, i); // Check Height from Perlin Noise Generator\n\n    var height = simplex.noise2D(vertex.x / 128, vertex.y / 128) * 30; // Set the height accordingly\n\n    geometry.attributes.position.array[i * 3 + 2] = height; // Update Vertice colours accordinly\n\n    if (height > 23) {\n      colours.push(1, 1, 1);\n    } else if (height > 5) {\n      colours.push(0.56, 0.54, 0.48);\n    } else if (height < 2) {\n      colours.push(0.501, 0.772, 0.87);\n    } else {\n      colours.push(0.56, 0.68, 0.166);\n    }\n  } //------------[Create Material]------------\\\\\n\n\n  var material = new three__WEBPACK_IMPORTED_MODULE_3__.MeshPhongMaterial({\n    vertexColors: colours,\n    reflectivity: 0,\n    roughness: 1,\n    flatShading: true\n  }); //------------[Create Mesh]------------\\\\\n\n  var plane2 = new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(geometry, material);\n  plane2.receiveShadow = true;\n  plane2.castShadow = true;\n  plane2.position.y = -3;\n  plane2.rotateX(Math.PI / 2 + Math.PI); //------------[Edit colour attribute]------------\\\\\n\n  geometry.setAttribute(\"color\", new three__WEBPACK_IMPORTED_MODULE_3__.BufferAttribute(new Float32Array(colours), 3)); //geometry.computeVertexNormals();\n  //------------[Add to Base Scene]------------\\\\\n\n  currentTerrain = plane2;\n  plane2.name = \"MAIN_TERRAIN\";\n  SceneToGet.add(plane2);\n}\nfunction generateTerrainChunk(seed, Position, gain, divisor) {\n  var ignoreHoles = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  //------------[MAIN FUNCTION VARIABLES]------------\\\\\n  //const simplex = new SimplexNoise(seed);\n  var geometry = new three__WEBPACK_IMPORTED_MODULE_3__.PlaneBufferGeometry(500, 500, 30, 30);\n  var colours = [];\n  var fbm = new _Core_API_PerlinNoise_PerlingNoise__WEBPACK_IMPORTED_MODULE_2__.FBM({\n    seed: seed,\n    scale: 0.007,\n    octaves: 6,\n    persistance: 0.5,\n    lacunarity: 2,\n    redistribution: 2,\n    height: 40\n  });\n  var simplex = new _Core_API_PerlinNoise_PerlingNoise__WEBPACK_IMPORTED_MODULE_2__.Perlin(seed); //------------[Create Material]------------\\\\\n\n  var material = new three__WEBPACK_IMPORTED_MODULE_3__.MeshPhongMaterial({\n    vertexColors: colours,\n    reflectivity: 0,\n    flatShading: true\n  }); //------------[Create Mesh]------------\\\\\n\n  var plane2 = new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(geometry, material);\n  plane2.receiveShadow = true;\n  plane2.castShadow = true;\n  plane2.position.set(Position.x, -3, Position.y);\n  plane2.rotateX(Math.PI / 2 + Math.PI);\n  var positionAttribute = geometry.getAttribute(\"position\"); //------------[Edit the Geomtry Accordingly]------------\\\\\n\n  for (var i = 0; i < positionAttribute.count; i++) {\n    // Get Data position\n    var vertex = new three__WEBPACK_IMPORTED_MODULE_3__.Vector3();\n    vertex.fromBufferAttribute(positionAttribute, i);\n    plane2.localToWorld(vertex); // Check Height from Perlin Noise Generator\n\n    var location = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2((vertex.x + Position.x) * divisor, (vertex.y - Position.y) * divisor);\n    var height = fbm.get2(location) * gain * 4; // Set the height accordingly\n\n    if (location.x <= 20 && location.y >= -6 && location.x >= -25 && location.y <= 10 && ignoreHoles === false) {\n      height = 0; //height = 500\n    }\n\n    positionAttribute.setZ(i, height); //geometry.attributes.position.array[i * 3 + 2] = height;\n    // Update Vertice colours accordinly\n\n    if (height > 100) {\n      colours.push(1, 1, 1);\n    } else if (height > 50) {\n      colours.push(0.56, 0.54, 0.48);\n    } else if (height > 8) {\n      colours.push(0.56, 0.68, 0.166);\n    } else if (height > 5) {\n      colours.push(0.9922, 0.8745, 0.466);\n    } else {\n      var heightSecondary = simplex.get2(new three__WEBPACK_IMPORTED_MODULE_3__.Vector2((vertex.x + Position.x) * divisor, (vertex.y - Position.y) * divisor)) * 0.75;\n      geometry.attributes.position.array[i * 3 + 2] = heightSecondary;\n      colours.push(0, (0,_Algorithms_VectorUtils__WEBPACK_IMPORTED_MODULE_0__.randomIntFromInterval)(400, 500) / 1000, (0,_Algorithms_VectorUtils__WEBPACK_IMPORTED_MODULE_0__.randomIntFromInterval)(700, 800) / 1000);\n    }\n  } //------------[Edit colour attribute]------------\\\\\n\n\n  geometry.setAttribute(\"color\", new three__WEBPACK_IMPORTED_MODULE_3__.BufferAttribute(new Float32Array(colours), 3)); //------------[Add to Base Scene]------------\\\\\n\n  currentTerrain = plane2;\n  plane2.name = \"Terrain_Chunk_\".concat(Position.x, \":\").concat(Position.y);\n  return plane2;\n}\nfunction getTerrainHeight(position, seed, gain, divisor, scene) {\n  var fbm = new _Core_API_PerlinNoise_PerlingNoise__WEBPACK_IMPORTED_MODULE_2__.FBM({\n    seed: seed,\n    scale: 0.007,\n    octaves: 6,\n    persistance: 0.5,\n    lacunarity: 2,\n    redistribution: 2,\n    height: 40\n  }); //console.table(position)\n\n  var height = fbm.get2(new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(position.x * divisor, -position.z * divisor)) * gain * 4;\n  /*let cube = debugCube()\n  scene.add(cube)\n  cube.position.set(position.x , height, position.z)\n  cube.material.color = new Color(height*2)*/\n\n  return height - 3;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnTerrainPointer\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/gameFundalmentals/ProceduleTerrain.js\n");

/***/ })

});